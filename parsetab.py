
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLPARENRPARENleftLOGOU_LOGICOleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALITYDIFERENTEleftPLUSMINUSleftTIMESDIVIDEASPAS ATRIBUTION BREAK COMENTARIO DIFERENTE DIVIDE DO ELSE EQUALITY FALSE FOR IDENTIFIER IF LBRACE LCOLCHETE LOG LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MINUSMINUS NUMBER OU_LOGICO PLUS PLUSPLUS PRINT RBRACE RCOLCHETE READ RETURN RPAREN SEMI STRING STRINGS TIMES TIMESX TRUE WHILE WRITEprogram : declaration_listdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | print_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\tprint_stmt   : PRINT LPAREN STRING RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN IDENTIFIER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN NUMBER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN boolean RPAREN SEMI \n                    | PRINT LPAREN expression RPAREN SEMI \n                    | PRINT LPAREN RPAREN SEMI \n\tvar_declaration : IDENTIFIER var_declaration\n                       | IDENTIFIER \n                       | IDENTIFIER ATRIBUTION NUMBER var_declaration\n                       | IDENTIFIER ATRIBUTION NUMBER\n                       | IDENTIFIER ATRIBUTION boolean var_declaration\n                       | IDENTIFIER ATRIBUTION boolean\n                       | IDENTIFIER ATRIBUTION IDENTIFIER var_declaration\n                       | IDENTIFIER ATRIBUTION IDENTIFIER \n                       | IDENTIFIER ATRIBUTION simple_expression \n\tstatement : expression_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t\t | print_stmt\n\texpression_stmt : expressionselection_stmt : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE\n\titeration_stmt : FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPARENexpression : var EQUALITY expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | var EQUALITY IDENTIFIER\n\t\t\t      | expression LOG expression\n\t\t\t\t  | expression OU_LOGICO expression\n\tvar : IDENTIFIERsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : MENOR\n\t\t\t | MENOREQUALS\n\t\t\t | MAIOR\n\t\t\t | MAIOREQUALS\n\t\t\t | DIFERENTE\n             | EQUALITY\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | var\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | IDENTIFIER LPAREN args RPAREN\n\tboolean : TRUE\n\t\t\t   | FALSE\n\targs : args_list\n\t\t\t| empty\n\targs_list : expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression TIMESX term\n                  | expression LOG term\n                  | expression OU_LOGICO term\n    empty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,40,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,80,81,82,83,84,85,86,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,123,127,128,130,131,132,134,137,139,141,142,147,148,149,150,151,152,],[8,8,-3,-4,-5,-6,-7,8,-2,-14,22,35,42,8,42,42,8,8,8,-22,-66,-67,-44,-52,-58,42,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,42,-16,-18,96,96,-45,-46,-47,-48,-49,-50,-55,-56,-53,-54,96,-59,-60,-13,42,42,96,96,96,96,96,115,42,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,42,42,-65,96,42,-30,42,-35,42,-29,-34,42,42,-36,42,-31,42,-33,-28,-32,]),'PRINT':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,127,128,130,131,134,137,140,141,142,147,148,149,150,151,152,],[9,9,-3,-4,-5,-6,-7,-15,-2,-14,9,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,9,9,-65,9,-30,9,-35,-29,-34,9,9,-36,9,-31,9,-33,-28,-32,]),'IF':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,127,128,130,131,134,137,142,147,148,149,150,151,152,],[10,10,-3,-4,-5,-6,-7,-15,-2,-14,10,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,10,-30,10,-35,-29,-34,-36,10,-31,10,-33,-28,-32,]),'FOR':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,127,128,130,131,134,137,142,147,148,149,150,151,152,],[11,11,-3,-4,-5,-6,-7,-15,-2,-14,11,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,11,-30,11,-35,-29,-34,-36,11,-31,11,-33,-28,-32,]),'WHILE':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,120,127,128,130,131,134,137,142,147,148,149,150,151,152,],[12,12,-3,-4,-5,-6,-7,-15,-2,-14,12,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,126,-65,12,-30,12,-35,-29,-34,-36,12,-31,12,-33,-28,-32,]),'DO':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,127,128,130,131,134,137,142,147,148,149,150,151,152,],[13,13,-3,-4,-5,-6,-7,-15,-2,-14,13,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,13,-30,13,-35,-29,-34,-36,13,-31,13,-33,-28,-32,]),'$end':([1,2,3,4,5,6,7,8,14,15,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,49,50,51,52,53,55,56,67,68,74,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,128,131,134,137,142,148,150,151,152,],[0,-1,-3,-4,-5,-6,-7,-15,-2,-14,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,-13,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,-30,-35,-29,-34,-36,-31,-33,-28,-32,]),'SEMI':([8,15,22,23,24,25,26,27,28,29,30,32,34,39,40,42,43,44,45,47,48,49,50,51,52,53,55,56,67,68,73,74,75,76,77,78,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,128,131,134,137,142,148,150,151,152,],[-15,-14,-21,-17,-19,-22,-66,-67,-44,-52,-58,-62,74,-62,-38,-42,-63,-64,88,90,-27,-23,-24,-25,-26,-20,-16,-18,-53,-54,100,-13,101,102,103,104,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,123,-65,-30,-35,-29,-34,-36,-31,-33,-28,-32,]),'ATRIBUTION':([8,],[16,]),'LPAREN':([9,10,11,12,16,17,18,20,21,22,31,35,42,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,96,115,116,118,123,126,127,130,132,139,141,147,149,],[17,18,19,20,31,31,31,31,31,54,31,54,54,31,31,31,-45,-46,-47,-48,-49,-50,-55,-56,31,-59,-60,31,31,31,31,31,31,31,31,31,54,54,31,31,31,132,31,31,31,31,31,31,31,]),'LBRACE':([13,87,89,133,135,136,],[21,116,118,139,140,141,]),'NUMBER':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[23,36,43,43,43,43,43,43,43,-45,-46,-47,-48,-49,-50,-55,-56,43,-59,-60,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[26,26,26,26,26,26,26,26,26,-45,-46,-47,-48,-49,-50,-55,-56,26,-59,-60,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[27,27,27,27,27,27,27,27,27,-45,-46,-47,-48,-49,-50,-55,-56,27,-59,-60,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([17,],[33,]),'RPAREN':([17,26,27,28,29,30,32,33,35,36,37,38,39,40,41,42,43,44,46,54,67,68,72,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,120,129,138,],[34,-66,-67,-44,-52,-58,-62,73,75,76,77,78,-62,-38,87,-42,-63,-64,89,-78,-53,-54,99,120,-68,-69,-70,-43,-42,-51,-57,-61,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,136,142,]),'MINUSMINUS':([22,23,24,26,27,29,30,32,35,36,37,39,42,43,44,96,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,67,-58,-62,-42,-63,-64,-62,-42,-63,-64,-42,-57,-61,67,67,-42,-65,]),'PLUSPLUS':([22,23,24,26,27,29,30,32,35,36,37,39,42,43,44,96,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,68,-58,-62,-42,-63,-64,-62,-42,-63,-64,-42,-57,-61,68,68,-42,-65,]),'TIMES':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,138,143,145,],[-42,-63,-64,-66,-67,-44,70,-58,-62,-42,-63,-64,83,-62,-38,83,-42,-63,-64,83,83,-53,-54,83,83,-43,-42,70,-57,-61,83,70,83,70,70,70,-73,-74,70,83,-39,83,-65,83,83,83,83,83,]),'DIVIDE':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,138,143,145,],[-42,-63,-64,-66,-67,-44,71,-58,-62,-42,-63,-64,84,-62,-38,84,-42,-63,-64,84,84,-53,-54,84,84,-43,-42,71,-57,-61,84,71,84,71,71,71,-73,-74,71,84,-39,84,-65,84,84,84,84,84,]),'MENOR':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,59,-52,-58,-62,-42,-63,-64,-62,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'MENOREQUALS':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,60,-52,-58,-62,-42,-63,-64,-62,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'MAIOR':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,61,-52,-58,-62,-42,-63,-64,-62,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'MAIOREQUALS':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,62,-52,-58,-62,-42,-63,-64,-62,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'DIFERENTE':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,63,-52,-58,-62,-42,-63,-64,-62,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'EQUALITY':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,96,97,98,99,106,108,115,120,],[-42,-63,-64,-66,-67,64,-52,-58,-62,-42,-63,-64,86,-42,-63,-64,-53,-54,-42,-51,-57,-61,-52,-52,-42,-65,]),'PLUS':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,129,138,143,145,],[-42,-63,-64,-66,-67,65,-52,-58,-62,-42,-63,-64,81,-62,-38,81,-42,-63,-64,81,81,-53,-54,81,81,65,-42,-51,-57,-61,81,-52,81,-52,-71,-72,-73,-74,-75,81,-39,81,-65,81,81,65,81,81,81,]),'MINUS':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,129,138,143,145,],[-42,-63,-64,-66,-67,66,-52,-58,-62,-42,-63,-64,82,-62,-38,82,-42,-63,-64,82,82,-53,-54,82,82,66,-42,-51,-57,-61,82,-52,82,-52,-71,-72,-73,-74,-75,82,-39,82,-65,82,82,66,82,82,82,]),'LOG':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,138,143,145,],[-66,-67,-44,-52,-58,-62,-42,-63,-64,79,-62,-38,79,-42,-63,-64,79,79,-53,-54,79,79,-43,-42,-51,-57,-61,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,79,-65,79,79,79,79,79,]),'OU_LOGICO':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,138,143,145,],[-66,-67,-44,-52,-58,-62,-42,-63,-64,80,-62,-38,80,-42,-63,-64,80,80,-53,-54,80,80,-43,-42,-51,-57,-61,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,80,-65,80,80,80,80,80,]),'TIMESX':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,120,121,124,138,143,145,],[-66,-67,-44,-52,-58,-62,-42,-63,-64,85,-62,-38,85,-42,-63,-64,85,85,-53,-54,85,85,-43,-42,-51,-57,-61,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,85,-65,85,85,85,85,85,]),'RBRACE':([26,27,28,29,30,32,39,40,42,43,44,67,68,74,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,121,122,124,125,143,144,145,146,],[-66,-67,-44,-52,-58,-62,-62,-38,-42,-63,-64,-53,-54,-13,119,-43,-42,-51,-57,-61,-8,-9,-10,-11,-12,-40,-52,-41,-52,-71,-72,-73,-74,-75,-37,-39,-65,127,128,130,131,147,148,149,150,]),'ELSE':([127,128,],[133,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,14,]),'var_declaration':([0,2,8,19,22,23,24,],[4,4,15,45,53,55,56,]),'print_stmt':([0,2,21,116,118,127,130,140,141,147,149,],[5,5,52,122,125,52,52,144,146,52,52,]),'selection_stmt':([0,2,21,127,130,147,149,],[6,6,50,50,50,50,50,]),'iteration_stmt':([0,2,21,127,130,147,149,],[7,7,51,51,51,51,51,]),'boolean':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[24,37,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'simple_expression':([16,17,18,20,21,31,54,79,80,86,88,116,118,127,130,132,139,141,147,149,],[25,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'additive_expression':([16,17,18,20,21,31,54,57,79,80,86,88,116,118,123,127,130,132,139,141,147,149,],[28,28,28,28,28,28,28,95,28,28,28,28,28,28,129,28,28,28,28,28,28,28,]),'term':([16,17,18,20,21,31,54,57,58,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[29,29,29,29,29,29,29,29,97,106,108,109,110,111,112,113,29,29,29,29,29,29,29,29,29,29,29,29,]),'factor':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[30,30,30,30,30,30,30,30,30,98,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'var':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,116,118,123,127,130,132,139,141,147,149,],[32,39,39,39,39,39,39,32,32,32,39,39,32,32,32,32,32,39,39,39,39,32,39,39,39,39,39,39,39,]),'expression':([17,18,20,21,31,54,79,80,86,88,116,118,127,130,132,139,141,147,149,],[38,41,46,48,72,94,105,107,114,117,121,124,48,48,138,143,145,48,48,]),'statement':([21,127,130,147,149,],[47,134,137,151,152,]),'expression_stmt':([21,127,130,147,149,],[49,49,49,49,49,]),'relop':([28,],[57,]),'addop':([28,95,129,],[58,58,58,]),'mulop':([29,97,106,108,109,110,111,112,113,],[69,69,69,69,69,69,69,69,69,]),'args':([54,],[91,]),'args_list':([54,],[92,]),'empty':([54,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parserS.py',16),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parserS.py',20),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parserS.py',21),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parserS.py',26),
  ('declaration -> print_stmt','declaration',1,'p_declaration','parserS.py',27),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','parserS.py',28),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','parserS.py',29),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',34),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',35),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',36),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',37),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',38),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI','print_stmt',4,'p_print_stmt','parserS.py',39),
  ('var_declaration -> IDENTIFIER var_declaration','var_declaration',2,'p_var_declaration','parserS.py',44),
  ('var_declaration -> IDENTIFIER','var_declaration',1,'p_var_declaration','parserS.py',45),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',46),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER','var_declaration',3,'p_var_declaration','parserS.py',47),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration','var_declaration',4,'p_var_declaration','parserS.py',48),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean','var_declaration',3,'p_var_declaration','parserS.py',49),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',50),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER','var_declaration',3,'p_var_declaration','parserS.py',51),
  ('var_declaration -> IDENTIFIER ATRIBUTION simple_expression','var_declaration',3,'p_var_declaration','parserS.py',52),
  ('statement -> expression_stmt','statement',1,'p_statement','parserS.py',57),
  ('statement -> selection_stmt','statement',1,'p_statement','parserS.py',58),
  ('statement -> iteration_stmt','statement',1,'p_statement','parserS.py',59),
  ('statement -> print_stmt','statement',1,'p_statement','parserS.py',60),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','parserS.py',65),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement','selection_stmt',12,'p_selection_stmt_1','parserS.py',69),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement','selection_stmt',8,'p_selection_stmt_1','parserS.py',70),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE','selection_stmt',7,'p_selection_stmt_1','parserS.py',71),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE','selection_stmt',11,'p_selection_stmt_1','parserS.py',72),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',12,'p_iteration_stmt_1','parserS.py',77),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',11,'p_iteration_stmt_1','parserS.py',78),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',8,'p_iteration_stmt_2','parserS.py',82),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',7,'p_iteration_stmt_2','parserS.py',83),
  ('iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN','iteration_stmt',9,'p_iteration_stmt_3','parserS.py',88),
  ('expression -> var EQUALITY expression','expression',3,'p_expression','parserS.py',92),
  ('expression -> simple_expression','expression',1,'p_expression','parserS.py',93),
  ('expression -> var EQUALITY IDENTIFIER','expression',3,'p_expression','parserS.py',94),
  ('expression -> expression LOG expression','expression',3,'p_expression','parserS.py',95),
  ('expression -> expression OU_LOGICO expression','expression',3,'p_expression','parserS.py',96),
  ('var -> IDENTIFIER','var',1,'p_var','parserS.py',101),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','parserS.py',105),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','parserS.py',106),
  ('relop -> MENOR','relop',1,'p_relop','parserS.py',111),
  ('relop -> MENOREQUALS','relop',1,'p_relop','parserS.py',112),
  ('relop -> MAIOR','relop',1,'p_relop','parserS.py',113),
  ('relop -> MAIOREQUALS','relop',1,'p_relop','parserS.py',114),
  ('relop -> DIFERENTE','relop',1,'p_relop','parserS.py',115),
  ('relop -> EQUALITY','relop',1,'p_relop','parserS.py',116),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','parserS.py',121),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','parserS.py',122),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','parserS.py',123),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','parserS.py',124),
  ('addop -> PLUS','addop',1,'p_addop','parserS.py',129),
  ('addop -> MINUS','addop',1,'p_addop','parserS.py',130),
  ('term -> term mulop factor','term',3,'p_term','parserS.py',135),
  ('term -> factor','term',1,'p_term','parserS.py',136),
  ('mulop -> TIMES','mulop',1,'p_mulop','parserS.py',141),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','parserS.py',142),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parserS.py',147),
  ('factor -> var','factor',1,'p_factor','parserS.py',148),
  ('factor -> NUMBER','factor',1,'p_factor','parserS.py',149),
  ('factor -> boolean','factor',1,'p_factor','parserS.py',150),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor','parserS.py',151),
  ('boolean -> TRUE','boolean',1,'p_boolean','parserS.py',156),
  ('boolean -> FALSE','boolean',1,'p_boolean','parserS.py',157),
  ('args -> args_list','args',1,'p_args','parserS.py',163),
  ('args -> empty','args',1,'p_args','parserS.py',164),
  ('args_list -> expression','args_list',1,'p_args_list','parserS.py',169),
  ('expression -> expression PLUS term','expression',3,'p_expressions_all','parserS.py',173),
  ('expression -> expression MINUS term','expression',3,'p_expressions_all','parserS.py',174),
  ('expression -> expression TIMES term','expression',3,'p_expressions_all','parserS.py',175),
  ('expression -> expression DIVIDE term','expression',3,'p_expressions_all','parserS.py',176),
  ('expression -> expression TIMESX term','expression',3,'p_expressions_all','parserS.py',177),
  ('expression -> expression LOG term','expression',3,'p_expressions_all','parserS.py',178),
  ('expression -> expression OU_LOGICO term','expression',3,'p_expressions_all','parserS.py',179),
  ('empty -> <empty>','empty',0,'p_empty','parserS.py',199),
]
