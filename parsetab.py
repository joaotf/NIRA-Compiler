
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLPARENRPARENleftLOGOU_LOGICOleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALITYDIFERENTEleftPLUSMINUSleftTIMESDIVIDEASPAS ATRIBUTION BREAK COMMENT DIFERENTE DIVIDE DO ELSE EQUALITY FALSE FOR IDENTIFIER IF LBRACE LCOLCHETE LOG LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MINUSMINUS NUMBER OU_LOGICO PLUS PLUSPLUS PRINT RBRACE RCOLCHETE READ RETURN RPAREN SEMI STRING STRINGS TIMES TIMESX TRUE WHILE WRITEprogram : declaration_listdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | print_stmt\n\t\t\t\t   | read_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\t\t\t\t   | expression\n\tprint_stmt   : PRINT LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN STRING RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN IDENTIFIER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN IDENTIFIER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN NUMBER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN NUMBER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN boolean RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN boolean RPAREN SEMI \n                    | PRINT LPAREN expression RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN expression RPAREN SEMI \n                    | PRINT LPAREN RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN RPAREN SEMI \n\tvar_declaration : IDENTIFIER var_declaration\n                       | IDENTIFIER \n                       | IDENTIFIER ATRIBUTION NUMBER var_declaration\n                       | IDENTIFIER ATRIBUTION NUMBER\n                       | IDENTIFIER ATRIBUTION boolean var_declaration\n                       | IDENTIFIER ATRIBUTION boolean\n                       | IDENTIFIER ATRIBUTION IDENTIFIER var_declaration\n                       | IDENTIFIER ATRIBUTION IDENTIFIER \n                       | IDENTIFIER ATRIBUTION simple_expression \n\tstatement : expression_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t\t | print_stmt\n\t\t\t\t | read_stmt\n\texpression_stmt : expressionselection_stmt : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE\n\titeration_stmt : FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\t\t\t\t  | DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\n\t\tread_stmt : READ LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t  | READ LPAREN STRING RPAREN SEMI \n\texpression : IDENTIFIER EQUALITY expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | IDENTIFIER EQUALITY IDENTIFIER\n\t\t\t      | expression LOG expression\n\t\t\t\t  | expression OU_LOGICO expression\n\tsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : MENOR\n\t\t\t | MENOREQUALS\n\t\t\t | MAIOR\n\t\t\t | MAIOREQUALS\n\t\t\t | DIFERENTE\n             | EQUALITY\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | IDENTIFIER\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | IDENTIFIER LPAREN args RPAREN\n\tboolean : TRUE\n\t\t\t   | FALSE\n\targs : args_list\n\t\t\t| empty\n\targs_list : expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression TIMESX term\n                  | expression LOG term\n                  | expression OU_LOGICO term\n    empty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,115,119,120,121,122,123,124,125,126,128,131,132,133,134,135,136,139,143,144,145,147,148,149,152,153,156,159,161,163,168,169,170,171,172,173,174,],[10,10,-3,-4,-5,-6,-7,-8,-9,34,-74,-75,-50,41,-55,-63,-69,-77,-78,-2,41,41,67,67,67,67,67,34,-22,72,76,41,84,-73,41,34,67,67,-56,-57,-58,-59,-60,-61,-66,-67,41,41,-64,-65,67,-70,-71,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,34,34,34,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,10,41,10,-20,10,10,10,10,10,41,41,-10,-12,-14,-16,-18,-47,67,41,41,-39,41,-44,41,-38,-34,-43,41,41,-46,-45,41,-40,41,-42,-37,-41,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,126,128,131,132,133,134,135,136,144,145,147,148,152,153,156,160,161,163,168,169,170,171,172,173,174,],[14,14,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,14,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,14,14,-20,14,14,14,14,14,14,14,-10,-12,-14,-16,-18,-47,14,-39,14,-44,-38,-34,-43,14,14,-46,-45,14,-40,14,-42,-37,-41,]),'READ':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,131,132,133,134,135,136,144,145,147,148,152,153,156,163,168,169,170,171,172,173,174,],[16,16,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,16,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,16,16,-20,16,16,16,16,16,-10,-12,-14,-16,-18,-47,16,-39,16,-44,-38,-34,-43,-46,-45,16,-40,16,-42,-37,-41,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,131,132,133,134,135,136,144,145,147,148,152,153,156,163,168,169,170,171,172,173,174,],[17,17,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,17,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,17,17,-20,17,17,17,17,17,-10,-12,-14,-16,-18,-47,17,-39,17,-44,-38,-34,-43,-46,-45,17,-40,17,-42,-37,-41,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,131,132,133,134,135,136,144,145,147,148,152,153,156,163,168,169,170,171,172,173,174,],[18,18,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,18,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,18,18,-20,18,18,18,18,18,-10,-12,-14,-16,-18,-47,18,-39,18,-44,-38,-34,-43,-46,-45,18,-40,18,-42,-37,-41,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,118,119,120,121,122,123,124,125,129,131,132,133,134,135,136,144,145,147,148,152,153,156,163,168,169,170,171,172,173,174,],[20,20,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,20,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,20,130,20,-20,20,20,20,20,20,142,-10,-12,-14,-16,-18,-47,20,-39,20,-44,-38,-34,-43,-46,-45,20,-40,20,-42,-37,-41,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,131,132,133,134,135,136,144,145,147,148,152,153,156,163,168,169,170,171,172,173,174,],[21,21,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,21,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,21,21,-20,21,21,21,21,21,-10,-12,-14,-16,-18,-47,21,-39,21,-44,-38,-34,-43,-46,-45,21,-40,21,-42,-37,-41,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,88,92,93,96,98,99,100,101,102,103,104,105,106,108,115,119,120,121,122,123,124,125,126,128,130,131,132,133,134,135,136,139,142,143,144,145,147,148,149,152,153,156,159,161,163,168,169,170,171,172,173,174,],[15,15,-3,-4,-5,-6,-7,-8,-9,38,-74,-75,-50,39,15,42,43,44,-55,55,-63,-69,-77,-78,-2,15,15,15,15,15,15,15,-23,-22,15,15,15,15,38,15,15,15,-56,-57,-58,-59,-60,-61,-66,-67,15,15,-64,-65,15,-70,-71,-52,-63,-53,-63,-82,38,-83,-84,-85,-86,38,-25,-27,-30,38,-49,38,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,15,15,15,-20,15,15,15,15,15,15,15,143,-10,-12,-14,-16,-18,-47,15,149,15,15,-39,15,-44,15,-38,-34,-43,15,15,-46,-45,15,-40,15,-42,-37,-41,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,115,119,120,121,122,123,124,125,126,128,131,132,133,134,135,136,139,143,144,145,147,148,149,152,153,156,159,161,163,168,169,170,171,172,173,174,],[11,11,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,11,-55,-63,-69,-77,-78,-2,11,11,11,11,11,11,11,-23,-22,73,11,11,85,-73,11,11,11,-56,-57,-58,-59,-60,-61,-66,-67,11,11,-64,-65,11,-70,-71,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,11,11,11,-20,11,11,11,11,11,11,11,-10,-12,-14,-16,-18,-47,11,11,11,-39,11,-44,11,-38,-34,-43,11,11,-46,-45,11,-40,11,-42,-37,-41,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,115,119,120,121,122,123,124,125,126,128,131,132,133,134,135,136,139,143,144,145,147,148,149,152,153,156,159,161,163,168,169,170,171,172,173,174,],[24,24,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,24,-55,-63,-69,-77,-78,-2,24,24,24,24,24,24,24,-23,-22,24,24,24,24,-73,24,24,24,-56,-57,-58,-59,-60,-61,-66,-67,24,24,-64,-65,24,-70,-71,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,24,24,24,-20,24,24,24,24,24,24,24,-10,-12,-14,-16,-18,-47,24,24,24,-39,24,-44,24,-38,-34,-43,24,24,-46,-45,24,-40,24,-42,-37,-41,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,115,119,120,121,122,123,124,125,126,128,131,132,133,134,135,136,139,143,144,145,147,148,149,152,153,156,159,161,163,168,169,170,171,172,173,174,],[25,25,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,25,-55,-63,-69,-77,-78,-2,25,25,25,25,25,25,25,-23,-22,25,25,25,25,-73,25,25,25,-56,-57,-58,-59,-60,-61,-66,-67,25,25,-64,-65,25,-70,-71,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,25,25,25,-20,25,25,25,25,25,25,25,-10,-12,-14,-16,-18,-47,25,25,25,-39,25,-44,25,-38,-34,-43,25,25,-46,-45,25,-40,25,-42,-37,-41,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,34,35,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,98,99,100,101,102,103,104,105,106,108,119,120,121,122,123,124,125,131,132,133,134,135,136,145,148,152,153,156,163,168,170,172,173,174,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-2,-23,-22,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-24,-26,-76,-21,-11,-20,-13,-15,-17,-19,-48,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,-46,-45,-40,-42,-37,-41,]),'RBRACE':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,34,35,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,88,92,93,96,97,98,99,100,101,102,103,104,105,106,108,117,119,120,121,122,123,124,125,131,132,133,134,135,136,137,138,140,141,145,148,152,153,156,163,164,165,166,167,168,170,172,173,174,],[-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-23,-22,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,-72,-54,-62,-36,118,-31,-32,-33,-35,-68,-28,-24,-26,-76,-21,129,-11,-20,-13,-15,-17,-19,-48,-10,-12,-14,-16,-18,-47,144,145,147,148,-39,-44,-38,-34,-43,-46,169,170,171,172,-45,-40,-42,-37,-41,]),'SEMI':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,34,35,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,88,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,119,120,121,122,123,124,125,127,131,132,133,134,135,136,145,148,152,153,156,158,162,163,168,170,172,173,174,],[-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-77,-78,-23,-22,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-29,-25,-27,-30,-51,-49,108,-72,115,-54,-62,117,-36,-34,-31,-32,-33,-35,-68,-28,-24,-26,-76,119,-21,121,122,123,124,125,-11,-20,-13,-15,-17,-19,-48,139,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,163,168,-46,-45,-40,-42,-37,-41,]),'LOG':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,150,157,164,166,],[27,-73,-74,-75,-50,-55,-63,-69,-77,-78,27,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-51,-49,27,-73,-74,-75,27,-72,27,-54,-62,27,27,-68,-76,27,27,27,27,27,27,27,]),'OU_LOGICO':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,150,157,164,166,],[28,-73,-74,-75,-50,-55,-63,-69,-77,-78,28,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-51,-49,28,-73,-74,-75,28,-72,28,-54,-62,28,28,-68,-76,28,28,28,28,28,28,28,]),'PLUS':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,146,150,157,164,166,],[29,-73,-74,-75,-50,53,-63,-69,-77,-78,29,-73,-64,-65,29,-63,29,-63,-82,-73,-83,-84,-85,-86,-73,-74,-75,-51,29,29,-73,-74,-75,29,-72,29,53,-62,29,29,-68,-76,29,29,29,53,29,29,29,29,]),'MINUS':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,146,150,157,164,166,],[30,-73,-74,-75,-50,54,-63,-69,-77,-78,30,-73,-64,-65,30,-63,30,-63,-82,-73,-83,-84,-85,-86,-73,-74,-75,-51,30,30,-73,-74,-75,30,-72,30,54,-62,30,30,-68,-76,30,30,30,54,30,30,30,30,]),'TIMES':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,150,157,164,166,],[31,-73,-74,-75,-50,-55,60,-69,-77,-78,31,-73,-64,-65,31,60,31,60,60,-73,60,-84,-85,60,-73,-74,-75,-51,31,31,-73,-74,-75,31,-72,31,-54,60,31,31,-68,-76,31,31,31,31,31,31,31,]),'DIVIDE':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,150,157,164,166,],[32,-73,-74,-75,-50,-55,61,-69,-77,-78,32,-73,-64,-65,32,61,32,61,61,-73,61,-84,-85,61,-73,-74,-75,-51,32,32,-73,-74,-75,32,-72,32,-54,61,32,32,-68,-76,32,32,32,32,32,32,32,]),'TIMESX':([9,10,11,12,13,19,22,23,24,25,40,41,57,58,62,63,64,65,66,67,68,69,70,71,76,77,81,84,85,86,87,88,90,92,93,94,96,102,106,127,137,140,150,157,164,166,],[33,-73,-74,-75,-50,-55,-63,-69,-77,-78,33,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-51,-49,33,-73,-74,-75,33,-72,33,-54,-62,33,33,-68,-76,33,33,33,33,33,33,33,]),'ATRIBUTION':([10,34,],[36,36,]),'EQUALITY':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[37,-74,-75,52,-63,-69,-77,-78,37,-64,-65,-63,-63,-73,-73,-74,-75,37,37,-74,-75,-72,-62,-68,-76,]),'MINUSMINUS':([10,11,12,22,23,24,25,41,63,65,67,72,73,74,76,84,85,86,88,102,106,],[-73,-74,-75,57,-69,-77,-78,-73,57,57,-73,-73,-74,-75,-73,-73,-74,-75,-72,-68,-76,]),'PLUSPLUS':([10,11,12,22,23,24,25,41,63,65,67,72,73,74,76,84,85,86,88,102,106,],[-73,-74,-75,58,-69,-77,-78,-73,58,58,-73,-73,-74,-75,-73,-73,-74,-75,-72,-68,-76,]),'MENOR':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[-73,-74,-75,47,-63,-69,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MENOREQUALS':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[-73,-74,-75,48,-63,-69,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MAIOR':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[-73,-74,-75,49,-63,-69,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MAIOREQUALS':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[-73,-74,-75,50,-63,-69,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'DIFERENTE':([10,11,12,19,22,23,24,25,41,57,58,63,65,67,72,73,74,76,84,85,86,88,93,102,106,],[-73,-74,-75,51,-63,-69,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'RPAREN':([11,12,13,19,22,23,24,25,38,39,40,41,57,58,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,102,106,146,150,157,],[-74,-75,-50,-55,-63,-69,-77,-78,-89,83,88,-73,-64,-65,-52,-63,-53,-63,-82,-73,-83,-84,-85,-86,-51,-49,106,-79,-80,-81,107,109,110,111,112,-72,113,114,-54,-62,116,-68,-76,155,158,162,]),'LBRACE':([21,114,116,151,154,155,],[56,126,128,159,160,161,]),'STRING':([39,42,],[82,89,]),'ELSE':([144,145,],[151,154,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,108,119,121,122,123,124,125,],[3,26,120,131,132,133,134,135,136,]),'var_declaration':([0,2,10,34,44,72,73,74,108,119,121,122,123,124,125,],[4,4,35,35,91,103,104,105,4,4,4,4,4,4,4,]),'print_stmt':([0,2,56,108,119,121,122,123,124,125,126,128,144,147,160,161,169,171,],[5,5,97,5,5,5,5,5,5,5,138,141,153,153,165,167,153,153,]),'read_stmt':([0,2,56,108,119,121,122,123,124,125,144,147,169,171,],[6,6,101,6,6,6,6,6,6,6,101,101,101,101,]),'selection_stmt':([0,2,56,108,119,121,122,123,124,125,144,147,169,171,],[7,7,99,7,7,7,7,7,7,7,99,99,99,99,]),'iteration_stmt':([0,2,56,108,119,121,122,123,124,125,144,147,169,171,],[8,8,100,8,8,8,8,8,8,8,100,100,100,100,]),'expression':([0,2,15,27,28,37,38,39,43,55,56,108,115,119,121,122,123,124,125,126,128,143,144,147,149,159,161,169,171,],[9,9,40,62,64,77,81,87,90,94,96,9,127,9,9,9,9,9,9,137,140,150,96,96,157,164,166,96,96,]),'boolean':([0,2,15,27,28,29,30,31,32,33,36,37,38,39,43,45,46,55,56,59,108,115,119,121,122,123,124,125,126,128,139,143,144,147,149,159,161,169,171,],[12,12,12,12,12,12,12,12,12,12,74,12,12,86,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'simple_expression':([0,2,15,27,28,36,37,38,39,43,55,56,108,115,119,121,122,123,124,125,126,128,143,144,147,149,159,161,169,171,],[13,13,13,13,13,75,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'additive_expression':([0,2,15,27,28,36,37,38,39,43,45,55,56,108,115,119,121,122,123,124,125,126,128,139,143,144,147,149,159,161,169,171,],[19,19,19,19,19,19,19,19,19,19,92,19,19,19,19,19,19,19,19,19,19,19,19,146,19,19,19,19,19,19,19,19,]),'term':([0,2,15,27,28,29,30,31,32,33,36,37,38,39,43,45,46,55,56,108,115,119,121,122,123,124,125,126,128,139,143,144,147,149,159,161,169,171,],[22,22,22,63,65,66,68,69,70,71,22,22,22,22,22,22,93,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,2,15,27,28,29,30,31,32,33,36,37,38,39,43,45,46,55,56,59,108,115,119,121,122,123,124,125,126,128,139,143,144,147,149,159,161,169,171,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,102,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'relop':([19,],[45,]),'addop':([19,92,146,],[46,46,46,]),'mulop':([22,63,65,66,68,69,70,71,93,],[59,59,59,59,59,59,59,59,59,]),'args':([38,],[78,]),'args_list':([38,],[79,]),'empty':([38,],[80,]),'statement':([56,144,147,169,171,],[95,152,156,173,174,]),'expression_stmt':([56,144,147,169,171,],[98,98,98,98,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parserS.py',16),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parserS.py',20),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parserS.py',21),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parserS.py',26),
  ('declaration -> print_stmt','declaration',1,'p_declaration','parserS.py',27),
  ('declaration -> read_stmt','declaration',1,'p_declaration','parserS.py',28),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','parserS.py',29),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','parserS.py',30),
  ('declaration -> expression','declaration',1,'p_declaration','parserS.py',31),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','parserS.py',36),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',37),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','parserS.py',38),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',39),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','parserS.py',40),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',41),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','parserS.py',42),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',43),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','parserS.py',44),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',45),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI declaration','print_stmt',5,'p_print_stmt','parserS.py',46),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI','print_stmt',4,'p_print_stmt','parserS.py',47),
  ('var_declaration -> IDENTIFIER var_declaration','var_declaration',2,'p_var_declaration','parserS.py',52),
  ('var_declaration -> IDENTIFIER','var_declaration',1,'p_var_declaration','parserS.py',53),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',54),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER','var_declaration',3,'p_var_declaration','parserS.py',55),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration','var_declaration',4,'p_var_declaration','parserS.py',56),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean','var_declaration',3,'p_var_declaration','parserS.py',57),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',58),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER','var_declaration',3,'p_var_declaration','parserS.py',59),
  ('var_declaration -> IDENTIFIER ATRIBUTION simple_expression','var_declaration',3,'p_var_declaration','parserS.py',60),
  ('statement -> expression_stmt','statement',1,'p_statement','parserS.py',65),
  ('statement -> selection_stmt','statement',1,'p_statement','parserS.py',66),
  ('statement -> iteration_stmt','statement',1,'p_statement','parserS.py',67),
  ('statement -> print_stmt','statement',1,'p_statement','parserS.py',68),
  ('statement -> read_stmt','statement',1,'p_statement','parserS.py',69),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','parserS.py',74),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement','selection_stmt',12,'p_selection_stmt_1','parserS.py',78),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement','selection_stmt',8,'p_selection_stmt_1','parserS.py',79),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE','selection_stmt',7,'p_selection_stmt_1','parserS.py',80),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE','selection_stmt',11,'p_selection_stmt_1','parserS.py',81),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',12,'p_iteration_stmt_1','parserS.py',86),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',11,'p_iteration_stmt_1','parserS.py',87),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',8,'p_iteration_stmt_2','parserS.py',91),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',7,'p_iteration_stmt_2','parserS.py',92),
  ('iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',10,'p_iteration_stmt_3','parserS.py',97),
  ('iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',9,'p_iteration_stmt_3','parserS.py',98),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI declaration','read_stmt',6,'p_read_stmt','parserS.py',104),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI','read_stmt',5,'p_read_stmt','parserS.py',105),
  ('expression -> IDENTIFIER EQUALITY expression','expression',3,'p_expression','parserS.py',110),
  ('expression -> simple_expression','expression',1,'p_expression','parserS.py',111),
  ('expression -> IDENTIFIER EQUALITY IDENTIFIER','expression',3,'p_expression','parserS.py',112),
  ('expression -> expression LOG expression','expression',3,'p_expression','parserS.py',113),
  ('expression -> expression OU_LOGICO expression','expression',3,'p_expression','parserS.py',114),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','parserS.py',120),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','parserS.py',121),
  ('relop -> MENOR','relop',1,'p_relop','parserS.py',126),
  ('relop -> MENOREQUALS','relop',1,'p_relop','parserS.py',127),
  ('relop -> MAIOR','relop',1,'p_relop','parserS.py',128),
  ('relop -> MAIOREQUALS','relop',1,'p_relop','parserS.py',129),
  ('relop -> DIFERENTE','relop',1,'p_relop','parserS.py',130),
  ('relop -> EQUALITY','relop',1,'p_relop','parserS.py',131),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','parserS.py',136),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','parserS.py',137),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','parserS.py',138),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','parserS.py',139),
  ('addop -> PLUS','addop',1,'p_addop','parserS.py',144),
  ('addop -> MINUS','addop',1,'p_addop','parserS.py',145),
  ('term -> term mulop factor','term',3,'p_term','parserS.py',150),
  ('term -> factor','term',1,'p_term','parserS.py',151),
  ('mulop -> TIMES','mulop',1,'p_mulop','parserS.py',156),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','parserS.py',157),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parserS.py',162),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parserS.py',163),
  ('factor -> NUMBER','factor',1,'p_factor','parserS.py',164),
  ('factor -> boolean','factor',1,'p_factor','parserS.py',165),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor','parserS.py',166),
  ('boolean -> TRUE','boolean',1,'p_boolean','parserS.py',171),
  ('boolean -> FALSE','boolean',1,'p_boolean','parserS.py',172),
  ('args -> args_list','args',1,'p_args','parserS.py',178),
  ('args -> empty','args',1,'p_args','parserS.py',179),
  ('args_list -> expression','args_list',1,'p_args_list','parserS.py',184),
  ('expression -> expression PLUS term','expression',3,'p_expressions_all','parserS.py',188),
  ('expression -> expression MINUS term','expression',3,'p_expressions_all','parserS.py',189),
  ('expression -> expression TIMES term','expression',3,'p_expressions_all','parserS.py',190),
  ('expression -> expression DIVIDE term','expression',3,'p_expressions_all','parserS.py',191),
  ('expression -> expression TIMESX term','expression',3,'p_expressions_all','parserS.py',192),
  ('expression -> expression LOG term','expression',3,'p_expressions_all','parserS.py',193),
  ('expression -> expression OU_LOGICO term','expression',3,'p_expressions_all','parserS.py',194),
  ('empty -> <empty>','empty',0,'p_empty','parserS.py',216),
]
