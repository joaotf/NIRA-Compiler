
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLPARENRPARENleftLOGOU_LOGICOleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALITYDIFERENTEleftPLUSMINUSleftTIMESDIVIDEASPAS ATRIBUTION BREAK COMMENT DIFERENTE DIVIDE DO ELSE EQUALITY FALSE FLOAT FOR IDENTIFIER IF INTEGER LBRACE LCOLCHETE LOG LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MINUSMINUS OU_LOGICO PLUS PLUSPLUS PRINT RBRACE RCOLCHETE READ RETURN RPAREN SEMI STRING STRINGS TIMES TIMESX TRUE WHILE WRITEprogram : declaration_listdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | print_stmt\n\t\t\t\t   | read_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\t\t\t\t   | expression\n\tprint_stmt   : PRINT LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN STRING RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN IDENTIFIER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN IDENTIFIER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN NUMBER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN NUMBER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN boolean RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN boolean RPAREN SEMI \n                    | PRINT LPAREN expression RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN expression RPAREN SEMI \n                    | PRINT LPAREN RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN RPAREN SEMI \n\tvar_declaration : IDENTIFIER var_declaration\n                       | IDENTIFIER \n                       | IDENTIFIER ATRIBUTION NUMBER var_declaration\n                       | IDENTIFIER ATRIBUTION NUMBER SEMI\n                       | IDENTIFIER ATRIBUTION boolean var_declaration\n                       | IDENTIFIER ATRIBUTION boolean SEMI\n                       | IDENTIFIER ATRIBUTION IDENTIFIER var_declaration\n                       | IDENTIFIER ATRIBUTION IDENTIFIER SEMI\n                       | IDENTIFIER ATRIBUTION simple_expression SEMI\n\tstatement : expression_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t\t | print_stmt\n\t\t\t\t | read_stmt\n\texpression_stmt : expressionselection_stmt : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE\n\titeration_stmt : FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\t\t\t\t  | DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\n\t\tread_stmt : READ LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t  | READ LPAREN STRING RPAREN SEMI \n\texpression : IDENTIFIER EQUALITY expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | IDENTIFIER EQUALITY IDENTIFIER\n\t\t\t      | expression LOG expression\n\t\t\t\t  | expression OU_LOGICO expression\n\tsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : MENOR\n\t\t\t | MENOREQUALS\n\t\t\t | MAIOR\n\t\t\t | MAIOREQUALS\n\t\t\t | DIFERENTE\n             | EQUALITY\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term \n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | IDENTIFIER\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | IDENTIFIER LPAREN args RPAREN\n\tboolean : TRUE\n\t\t\t   | FALSE\n\tNUMBER : INTEGER\n\t\t\t  | FLOAT\n\targs : args_list\n\t\t\t| empty\n\targs_list : expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression TIMESX term\n                  | expression LOG term\n                  | expression OU_LOGICO term\n    empty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[10,10,-3,-4,-5,-6,-7,-8,-9,36,-74,-75,-50,43,-55,-63,-69,-79,-80,-77,-78,-2,43,43,69,69,69,69,69,36,-22,74,78,43,86,-73,43,36,69,69,-56,-57,-58,-59,-60,-61,-66,-67,43,43,-64,-65,69,-70,-71,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,36,36,36,-51,-49,-72,43,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,10,10,-20,10,10,10,10,10,43,69,43,-10,-12,-14,-16,-18,-47,43,43,-39,43,-44,43,-38,-34,43,-43,43,-46,43,-42,-45,43,-40,-41,-37,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,134,137,138,139,140,141,142,150,151,153,154,158,159,161,162,166,170,173,174,175,176,177,178,179,],[14,14,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,14,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,14,14,-20,14,14,14,14,14,14,14,-10,-12,-14,-16,-18,-47,14,-39,14,-44,-38,-34,14,-43,14,-46,14,-42,-45,14,-40,-41,-37,]),'READ':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,137,138,139,140,141,142,150,151,153,154,158,159,162,170,173,174,175,176,177,178,179,],[16,16,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,16,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,16,16,-20,16,16,16,16,16,-10,-12,-14,-16,-18,-47,16,-39,16,-44,-38,-34,-43,-46,16,-42,-45,16,-40,-41,-37,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,137,138,139,140,141,142,150,151,153,154,158,159,162,170,173,174,175,176,177,178,179,],[17,17,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,17,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,17,17,-20,17,17,17,17,17,-10,-12,-14,-16,-18,-47,17,-39,17,-44,-38,-34,-43,-46,17,-42,-45,17,-40,-41,-37,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,137,138,139,140,141,142,150,151,153,154,158,159,162,170,173,174,175,176,177,178,179,],[18,18,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,18,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,18,18,-20,18,18,18,18,18,-10,-12,-14,-16,-18,-47,18,-39,18,-44,-38,-34,-43,-46,18,-42,-45,18,-40,-41,-37,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,126,127,128,129,130,131,135,137,138,139,140,141,142,150,151,153,154,158,159,162,170,173,174,175,176,177,178,179,],[20,20,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,20,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,20,136,20,-20,20,20,20,20,20,148,-10,-12,-14,-16,-18,-47,20,-39,20,-44,-38,-34,-43,-46,20,-42,-45,20,-40,-41,-37,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,137,138,139,140,141,142,150,151,153,154,158,159,162,170,173,174,175,176,177,178,179,],[21,21,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,21,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,21,21,-20,21,21,21,21,21,-10,-12,-14,-16,-18,-47,21,-39,21,-44,-38,-34,-43,-46,21,-42,-45,21,-40,-41,-37,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,86,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,148,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[15,15,-3,-4,-5,-6,-7,-8,-9,40,-74,-75,-50,41,15,44,45,46,-55,57,-63,-69,-79,-80,-77,-78,-2,15,15,15,15,15,15,15,-23,-22,15,15,15,15,40,15,15,15,-56,-57,-58,-59,-60,-61,-66,-67,15,15,-64,-65,15,-70,-71,-52,-63,-53,-63,-84,40,-85,-86,-87,-88,40,40,-49,40,-72,15,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,15,15,-20,15,15,15,15,15,15,15,15,149,-10,-12,-14,-16,-18,-47,155,15,15,-39,15,-44,15,-38,-34,15,-43,15,-46,15,-42,-45,15,-40,-41,-37,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[24,24,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,24,-55,-63,-69,-79,-80,-77,-78,-2,24,24,24,24,24,24,24,-23,-22,24,24,24,24,-73,24,24,24,-56,-57,-58,-59,-60,-61,-66,-67,24,24,-64,-65,24,-70,-71,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,24,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,24,24,-20,24,24,24,24,24,24,24,24,-10,-12,-14,-16,-18,-47,24,24,-39,24,-44,24,-38,-34,24,-43,24,-46,24,-42,-45,24,-40,-41,-37,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[25,25,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,25,-55,-63,-69,-79,-80,-77,-78,-2,25,25,25,25,25,25,25,-23,-22,25,25,25,25,-73,25,25,25,-56,-57,-58,-59,-60,-61,-66,-67,25,25,-64,-65,25,-70,-71,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,25,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,25,25,-20,25,25,25,25,25,25,25,25,-10,-12,-14,-16,-18,-47,25,25,-39,25,-44,25,-38,-34,25,-43,25,-46,25,-42,-45,25,-40,-41,-37,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[26,26,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,26,-55,-63,-69,-79,-80,-77,-78,-2,26,26,26,26,26,26,26,-23,-22,26,26,26,26,-73,26,26,26,-56,-57,-58,-59,-60,-61,-66,-67,26,26,-64,-65,26,-70,-71,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,26,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,26,26,-20,26,26,26,26,26,26,26,26,-10,-12,-14,-16,-18,-47,26,26,-39,26,-44,26,-38,-34,26,-43,26,-46,26,-42,-45,26,-40,-41,-37,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,90,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,149,150,151,153,154,155,158,159,161,162,165,170,173,174,175,176,177,178,179,],[27,27,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,27,-55,-63,-69,-79,-80,-77,-78,-2,27,27,27,27,27,27,27,-23,-22,27,27,27,27,-73,27,27,27,-56,-57,-58,-59,-60,-61,-66,-67,27,27,-64,-65,27,-70,-71,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,27,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,27,27,-20,27,27,27,27,27,27,27,27,-10,-12,-14,-16,-18,-47,27,27,-39,27,-44,27,-38,-34,27,-43,27,-46,27,-42,-45,27,-40,-41,-37,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,126,127,128,129,130,131,137,138,139,140,141,142,151,154,158,159,162,170,174,175,177,178,179,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-2,-23,-22,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,-21,-11,-20,-13,-15,-17,-19,-48,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,-46,-42,-45,-40,-41,-37,]),'RBRACE':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,36,37,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,90,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,123,125,126,127,128,129,130,131,137,138,139,140,141,142,143,144,146,147,151,154,158,159,162,167,168,170,171,172,174,175,177,178,179,],[-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-23,-22,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,-72,-54,-62,-36,124,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,-21,135,-11,-20,-13,-15,-17,-19,-48,-10,-12,-14,-16,-18,-47,150,151,153,154,-39,-44,-38,-34,-43,173,174,-46,176,177,-42,-45,-40,-41,-37,]),'SEMI':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,36,37,43,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,125,126,127,128,129,130,131,137,138,139,140,141,142,151,154,158,159,162,164,169,170,174,175,177,178,179,],[-4,-5,-6,-7,-8,-9,-23,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-23,-22,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,106,108,110,111,-51,-49,114,-72,-54,-62,123,-36,-34,-31,-32,-33,-35,-68,-28,-29,-24,-25,-26,-27,-30,-76,125,-21,127,128,129,130,131,133,-11,-20,-13,-15,-17,-19,-48,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,170,175,-46,-42,-45,-40,-41,-37,]),'LOG':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,146,156,163,167,171,],[29,-73,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,29,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,29,-73,-74,-75,29,-72,29,-54,-62,29,29,-68,-76,29,29,29,29,29,29,29,]),'OU_LOGICO':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,146,156,163,167,171,],[30,-73,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,30,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,30,-73,-74,-75,30,-72,30,-54,-62,30,30,-68,-76,30,30,30,30,30,30,30,]),'PLUS':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,145,146,156,163,167,171,],[31,-73,-74,-75,-50,55,-63,-69,-79,-80,-77,-78,31,-73,-64,-65,31,-63,31,-63,-84,-73,-85,-86,-87,-88,-73,-74,-75,-51,31,31,-73,-74,-75,31,-72,31,55,-62,31,31,-68,-76,31,31,55,31,31,31,31,31,]),'MINUS':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,145,146,156,163,167,171,],[32,-73,-74,-75,-50,56,-63,-69,-79,-80,-77,-78,32,-73,-64,-65,32,-63,32,-63,-84,-73,-85,-86,-87,-88,-73,-74,-75,-51,32,32,-73,-74,-75,32,-72,32,56,-62,32,32,-68,-76,32,32,56,32,32,32,32,32,]),'TIMES':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,146,156,163,167,171,],[33,-73,-74,-75,-50,-55,62,-69,-79,-80,-77,-78,33,-73,-64,-65,33,62,33,62,62,-73,62,-86,-87,62,-73,-74,-75,-51,33,33,-73,-74,-75,33,-72,33,-54,62,33,33,-68,-76,33,33,33,33,33,33,33,]),'DIVIDE':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,146,156,163,167,171,],[34,-73,-74,-75,-50,-55,63,-69,-79,-80,-77,-78,34,-73,-64,-65,34,63,34,63,63,-73,63,-86,-87,63,-73,-74,-75,-51,34,34,-73,-74,-75,34,-72,34,-54,63,34,34,-68,-76,34,34,34,34,34,34,34,]),'TIMESX':([9,10,11,12,13,19,22,23,24,25,26,27,42,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,83,86,87,88,89,90,92,94,95,96,98,104,112,121,143,146,156,163,167,171,],[35,-73,-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,35,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,35,-73,-74,-75,35,-72,35,-54,-62,35,35,-68,-76,35,35,35,35,35,35,35,]),'ATRIBUTION':([10,36,],[38,38,]),'EQUALITY':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[39,-74,-75,54,-63,-69,-79,-80,-77,-78,39,-64,-65,-63,-63,-73,-73,-74,-75,39,39,-74,-75,-72,-62,-68,-76,]),'MINUSMINUS':([10,11,12,22,23,24,25,26,27,43,65,67,69,74,75,76,78,86,87,88,90,104,112,],[-73,-74,-75,59,-69,-79,-80,-77,-78,-73,59,59,-73,-73,-74,-75,-73,-73,-74,-75,-72,-68,-76,]),'PLUSPLUS':([10,11,12,22,23,24,25,26,27,43,65,67,69,74,75,76,78,86,87,88,90,104,112,],[-73,-74,-75,60,-69,-79,-80,-77,-78,-73,60,60,-73,-73,-74,-75,-73,-73,-74,-75,-72,-68,-76,]),'MENOR':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[-73,-74,-75,49,-63,-69,-79,-80,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MENOREQUALS':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[-73,-74,-75,50,-63,-69,-79,-80,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MAIOR':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[-73,-74,-75,51,-63,-69,-79,-80,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'MAIOREQUALS':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[-73,-74,-75,52,-63,-69,-79,-80,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'DIFERENTE':([10,11,12,19,22,23,24,25,26,27,43,59,60,65,67,69,74,75,76,78,86,87,88,90,95,104,112,],[-73,-74,-75,53,-63,-69,-79,-80,-77,-78,-73,-64,-65,-63,-63,-73,-73,-74,-75,-73,-73,-74,-75,-72,-62,-68,-76,]),'RPAREN':([11,12,13,19,22,23,24,25,26,27,40,41,42,43,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,86,87,88,89,90,91,92,94,95,96,104,112,145,156,163,],[-74,-75,-50,-55,-63,-69,-79,-80,-77,-78,-91,85,90,-73,-64,-65,-52,-63,-53,-63,-84,-73,-85,-86,-87,-88,-51,-49,112,-81,-82,-83,113,115,116,117,118,-72,119,120,-54,-62,122,-68,-76,152,164,169,]),'LBRACE':([21,120,122,152,157,160,],[58,132,134,161,165,166,]),'STRING':([41,44,],[84,91,]),'ELSE':([150,151,],[157,160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,114,125,127,128,129,130,131,],[3,28,126,137,138,139,140,141,142,]),'var_declaration':([0,2,10,36,46,74,75,76,114,125,127,128,129,130,131,],[4,4,37,37,93,105,107,109,4,4,4,4,4,4,4,]),'print_stmt':([0,2,58,114,125,127,128,129,130,131,132,134,150,153,161,166,173,176,],[5,5,99,5,5,5,5,5,5,5,144,147,159,159,168,172,159,159,]),'read_stmt':([0,2,58,114,125,127,128,129,130,131,150,153,173,176,],[6,6,103,6,6,6,6,6,6,6,103,103,103,103,]),'selection_stmt':([0,2,58,114,125,127,128,129,130,131,150,153,173,176,],[7,7,101,7,7,7,7,7,7,7,101,101,101,101,]),'iteration_stmt':([0,2,58,114,125,127,128,129,130,131,150,153,173,176,],[8,8,102,8,8,8,8,8,8,8,102,102,102,102,]),'expression':([0,2,15,29,30,39,40,41,45,57,58,93,114,125,127,128,129,130,131,132,134,149,150,153,155,161,165,173,176,],[9,9,42,64,66,79,83,89,92,96,98,121,9,9,9,9,9,9,9,143,146,156,98,98,163,167,171,98,98,]),'NUMBER':([0,2,15,29,30,31,32,33,34,35,38,39,40,41,45,47,48,57,58,61,93,114,125,127,128,129,130,131,132,133,134,149,150,153,155,161,165,173,176,],[11,11,11,11,11,11,11,11,11,11,75,11,11,87,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'boolean':([0,2,15,29,30,31,32,33,34,35,38,39,40,41,45,47,48,57,58,61,93,114,125,127,128,129,130,131,132,133,134,149,150,153,155,161,165,173,176,],[12,12,12,12,12,12,12,12,12,12,76,12,12,88,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'simple_expression':([0,2,15,29,30,38,39,40,41,45,57,58,93,114,125,127,128,129,130,131,132,134,149,150,153,155,161,165,173,176,],[13,13,13,13,13,77,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'additive_expression':([0,2,15,29,30,38,39,40,41,45,47,57,58,93,114,125,127,128,129,130,131,132,133,134,149,150,153,155,161,165,173,176,],[19,19,19,19,19,19,19,19,19,19,94,19,19,19,19,19,19,19,19,19,19,19,145,19,19,19,19,19,19,19,19,19,]),'term':([0,2,15,29,30,31,32,33,34,35,38,39,40,41,45,47,48,57,58,93,114,125,127,128,129,130,131,132,133,134,149,150,153,155,161,165,173,176,],[22,22,22,65,67,68,70,71,72,73,22,22,22,22,22,22,95,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,2,15,29,30,31,32,33,34,35,38,39,40,41,45,47,48,57,58,61,93,114,125,127,128,129,130,131,132,133,134,149,150,153,155,161,165,173,176,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,104,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'relop':([19,],[47,]),'addop':([19,94,145,],[48,48,48,]),'mulop':([22,65,67,68,70,71,72,73,95,],[61,61,61,61,61,61,61,61,61,]),'args':([40,],[80,]),'args_list':([40,],[81,]),'empty':([40,],[82,]),'statement':([58,150,153,173,176,],[97,158,162,178,179,]),'expression_stmt':([58,150,153,173,176,],[100,100,100,100,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','NIRA_Parser.py',16),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','NIRA_Parser.py',20),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','NIRA_Parser.py',21),
  ('declaration -> var_declaration','declaration',1,'p_declaration','NIRA_Parser.py',26),
  ('declaration -> print_stmt','declaration',1,'p_declaration','NIRA_Parser.py',27),
  ('declaration -> read_stmt','declaration',1,'p_declaration','NIRA_Parser.py',28),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','NIRA_Parser.py',29),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','NIRA_Parser.py',30),
  ('declaration -> expression','declaration',1,'p_declaration','NIRA_Parser.py',31),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',36),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',37),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',38),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',39),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',40),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',41),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',42),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',43),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',44),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',45),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI declaration','print_stmt',5,'p_print_stmt','NIRA_Parser.py',46),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI','print_stmt',4,'p_print_stmt','NIRA_Parser.py',47),
  ('var_declaration -> IDENTIFIER var_declaration','var_declaration',2,'p_var_declaration','NIRA_Parser.py',52),
  ('var_declaration -> IDENTIFIER','var_declaration',1,'p_var_declaration','NIRA_Parser.py',53),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',54),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',55),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',56),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',57),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',58),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',59),
  ('var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',60),
  ('statement -> expression_stmt','statement',1,'p_statement','NIRA_Parser.py',65),
  ('statement -> selection_stmt','statement',1,'p_statement','NIRA_Parser.py',66),
  ('statement -> iteration_stmt','statement',1,'p_statement','NIRA_Parser.py',67),
  ('statement -> print_stmt','statement',1,'p_statement','NIRA_Parser.py',68),
  ('statement -> read_stmt','statement',1,'p_statement','NIRA_Parser.py',69),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','NIRA_Parser.py',74),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement','selection_stmt',12,'p_selection_stmt_1','NIRA_Parser.py',78),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement','selection_stmt',8,'p_selection_stmt_1','NIRA_Parser.py',79),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE','selection_stmt',7,'p_selection_stmt_1','NIRA_Parser.py',80),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE','selection_stmt',11,'p_selection_stmt_1','NIRA_Parser.py',81),
  ('iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',11,'p_iteration_stmt_1','NIRA_Parser.py',86),
  ('iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',10,'p_iteration_stmt_1','NIRA_Parser.py',87),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',8,'p_iteration_stmt_2','NIRA_Parser.py',91),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',7,'p_iteration_stmt_2','NIRA_Parser.py',92),
  ('iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',10,'p_iteration_stmt_3','NIRA_Parser.py',97),
  ('iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',9,'p_iteration_stmt_3','NIRA_Parser.py',98),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI declaration','read_stmt',6,'p_read_stmt','NIRA_Parser.py',104),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI','read_stmt',5,'p_read_stmt','NIRA_Parser.py',105),
  ('expression -> IDENTIFIER EQUALITY expression','expression',3,'p_expression','NIRA_Parser.py',110),
  ('expression -> simple_expression','expression',1,'p_expression','NIRA_Parser.py',111),
  ('expression -> IDENTIFIER EQUALITY IDENTIFIER','expression',3,'p_expression','NIRA_Parser.py',112),
  ('expression -> expression LOG expression','expression',3,'p_expression','NIRA_Parser.py',113),
  ('expression -> expression OU_LOGICO expression','expression',3,'p_expression','NIRA_Parser.py',114),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','NIRA_Parser.py',120),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','NIRA_Parser.py',121),
  ('relop -> MENOR','relop',1,'p_relop','NIRA_Parser.py',126),
  ('relop -> MENOREQUALS','relop',1,'p_relop','NIRA_Parser.py',127),
  ('relop -> MAIOR','relop',1,'p_relop','NIRA_Parser.py',128),
  ('relop -> MAIOREQUALS','relop',1,'p_relop','NIRA_Parser.py',129),
  ('relop -> DIFERENTE','relop',1,'p_relop','NIRA_Parser.py',130),
  ('relop -> EQUALITY','relop',1,'p_relop','NIRA_Parser.py',131),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','NIRA_Parser.py',136),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','NIRA_Parser.py',137),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','NIRA_Parser.py',138),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','NIRA_Parser.py',139),
  ('addop -> PLUS','addop',1,'p_addop','NIRA_Parser.py',144),
  ('addop -> MINUS','addop',1,'p_addop','NIRA_Parser.py',145),
  ('term -> term mulop factor','term',3,'p_term','NIRA_Parser.py',150),
  ('term -> factor','term',1,'p_term','NIRA_Parser.py',151),
  ('mulop -> TIMES','mulop',1,'p_mulop','NIRA_Parser.py',156),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','NIRA_Parser.py',157),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','NIRA_Parser.py',162),
  ('factor -> IDENTIFIER','factor',1,'p_factor','NIRA_Parser.py',163),
  ('factor -> NUMBER','factor',1,'p_factor','NIRA_Parser.py',164),
  ('factor -> boolean','factor',1,'p_factor','NIRA_Parser.py',165),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor','NIRA_Parser.py',166),
  ('boolean -> TRUE','boolean',1,'p_boolean','NIRA_Parser.py',171),
  ('boolean -> FALSE','boolean',1,'p_boolean','NIRA_Parser.py',172),
  ('NUMBER -> INTEGER','NUMBER',1,'p_number','NIRA_Parser.py',178),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number','NIRA_Parser.py',179),
  ('args -> args_list','args',1,'p_args','NIRA_Parser.py',185),
  ('args -> empty','args',1,'p_args','NIRA_Parser.py',186),
  ('args_list -> expression','args_list',1,'p_args_list','NIRA_Parser.py',191),
  ('expression -> expression PLUS term','expression',3,'p_expressions_all','NIRA_Parser.py',195),
  ('expression -> expression MINUS term','expression',3,'p_expressions_all','NIRA_Parser.py',196),
  ('expression -> expression TIMES term','expression',3,'p_expressions_all','NIRA_Parser.py',197),
  ('expression -> expression DIVIDE term','expression',3,'p_expressions_all','NIRA_Parser.py',198),
  ('expression -> expression TIMESX term','expression',3,'p_expressions_all','NIRA_Parser.py',199),
  ('expression -> expression LOG term','expression',3,'p_expressions_all','NIRA_Parser.py',200),
  ('expression -> expression OU_LOGICO term','expression',3,'p_expressions_all','NIRA_Parser.py',201),
  ('empty -> <empty>','empty',0,'p_empty','NIRA_Parser.py',223),
]
