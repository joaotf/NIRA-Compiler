
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLPARENRPARENleftLOGOU_LOGICOleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALITYDIFERENTEleftPLUSMINUSleftTIMESDIVIDEASPAS ATRIBUTION BREAK COMMENT DIFERENTE DIVIDE DO ELSE EQUALITY FALSE FLOAT FOR IDENTIFIER IF INTEGER LBRACE LCOLCHETE LOG LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MINUSMINUS OU_LOGICO PLUS PLUSPLUS PRINT RBRACE RCOLCHETE READ RETURN RPAREN SEMI STRING STRINGS TIMES TIMESX TRUE WHILE WRITEprogram : declaration_listdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | print_stmt\n\t\t\t\t   | read_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\t\t\t\t   | expression\n\tprint_stmt   : PRINT LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN STRING RPAREN SEMI\n\t\t\t\t    | PRINT LPAREN IDENTIFIER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN IDENTIFIER RPAREN SEMI\n\t\t\t\t    | PRINT LPAREN NUMBER RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN NUMBER RPAREN SEMI\n\t\t\t\t    | PRINT LPAREN boolean RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN boolean RPAREN SEMI\n                    | PRINT LPAREN expression RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN expression RPAREN SEMI\n                    | PRINT LPAREN RPAREN SEMI declaration\n\t\t\t\t\t| PRINT LPAREN RPAREN SEMI\n\tvar_declaration : IDENTIFIER var_declaration\n                       | IDENTIFIER\n                       | IDENTIFIER ATRIBUTION NUMBER var_declaration\n                       | IDENTIFIER ATRIBUTION NUMBER SEMI\n                       | IDENTIFIER ATRIBUTION boolean var_declaration\n                       | IDENTIFIER ATRIBUTION boolean SEMI\n                       | IDENTIFIER ATRIBUTION IDENTIFIER var_declaration\n                       | IDENTIFIER ATRIBUTION IDENTIFIER SEMI\n                       | IDENTIFIER ATRIBUTION simple_expression SEMI\n\tstatement : expression_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t\t | print_stmt\n\t\t\t\t | read_stmt\n\texpression_stmt : expressionselection_stmt : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE\n\titeration_stmt : FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE statement RBRACE\n\titeration_stmt : WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\t\t\t\t  | DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\n\t\tread_stmt : READ LPAREN STRING RPAREN SEMI declaration\n\t\t\t\t  | READ LPAREN STRING RPAREN SEMI\n\t\t\t      | IDENTIFIER READ LPAREN STRING RPAREN SEMI\n\t\t\t\t  | IDENTIFIER READ LPAREN RPAREN SEMI\n\texpression : IDENTIFIER EQUALITY expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | IDENTIFIER EQUALITY IDENTIFIER\n\t\t\t      | expression LOG expression\n\t\t\t\t  | expression OU_LOGICO expression\n\tsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : MENOR\n\t\t\t | MENOREQUALS\n\t\t\t | MAIOR\n\t\t\t | MAIOREQUALS\n\t\t\t | DIFERENTE\n             | EQUALITY\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | IDENTIFIER\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | IDENTIFIER LPAREN args RPAREN\n\tboolean : TRUE\n\t\t\t   | FALSE\n\tNUMBER : INTEGER\n\t\t\t  | FLOAT\n\targs : args_list\n\t\t\t| empty\n\targs_list : expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression TIMESX term\n                  | expression LOG term\n                  | expression OU_LOGICO term\n    empty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,153,157,158,159,161,162,163,166,167,170,173,175,177,183,184,185,186,187,188,189,],[10,10,-3,-4,-5,-6,-7,-8,-9,36,-76,-77,-52,44,-57,-65,-71,-81,-82,-79,-80,-2,44,44,70,70,70,70,70,36,-22,75,44,84,88,-75,44,36,70,70,-58,-59,-60,-61,-62,-63,-68,-69,44,106,-66,-67,70,-72,-73,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,36,36,36,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,10,44,-50,10,-20,10,10,10,10,10,44,44,-49,-10,-12,-14,-16,-18,-47,70,44,106,-39,106,-44,44,-38,-34,-43,44,182,-46,-45,106,-40,106,-42,-37,-41,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,158,159,161,162,166,167,170,174,175,177,183,184,185,186,187,188,189,],[14,14,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,14,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,14,-50,14,-20,14,14,14,14,14,14,14,-49,-10,-12,-14,-16,-18,-47,14,-39,14,-44,-38,-34,-43,14,14,-46,-45,14,-40,14,-42,-37,-41,]),'READ':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,158,159,161,162,166,167,170,175,177,182,183,184,185,186,187,188,189,],[16,16,-3,-4,-5,-6,-7,-8,-9,39,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,16,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,39,-70,-28,-29,-24,-25,-26,-27,-30,-78,16,-50,16,-20,16,16,16,16,16,-49,-10,-12,-14,-16,-18,-47,16,-39,16,-44,-38,-34,-43,16,-46,39,-45,16,-40,16,-42,-37,-41,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,158,159,161,162,166,167,170,175,177,183,184,185,186,187,188,189,],[17,17,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,17,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,17,-50,17,-20,17,17,17,17,17,-49,-10,-12,-14,-16,-18,-47,17,-39,17,-44,-38,-34,-43,17,-46,-45,17,-40,17,-42,-37,-41,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,158,159,161,162,166,167,170,175,177,183,184,185,186,187,188,189,],[18,18,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,18,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,18,-50,18,-20,18,18,18,18,18,-49,-10,-12,-14,-16,-18,-47,18,-39,18,-44,-38,-34,-43,18,-46,-45,18,-40,18,-42,-37,-41,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,129,131,132,133,134,135,136,137,138,142,144,145,146,147,148,149,150,158,159,161,162,166,167,170,175,177,183,184,185,186,187,188,189,],[20,20,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,20,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,20,143,-50,20,-20,20,20,20,20,20,156,-49,-10,-12,-14,-16,-18,-47,20,-39,20,-44,-38,-34,-43,20,-46,-45,20,-40,20,-42,-37,-41,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,59,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,158,159,161,162,166,167,170,175,177,183,184,185,186,187,188,189,],[21,21,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,21,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,21,-50,21,-20,21,21,21,21,21,-49,-10,-12,-14,-16,-18,-47,21,-39,21,-44,-38,-34,-43,21,-46,-45,21,-40,21,-42,-37,-41,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,84,85,88,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,143,144,145,146,147,148,149,150,153,156,157,158,159,161,162,163,166,167,170,173,175,177,182,183,184,185,186,187,188,189,],[15,15,-3,-4,-5,-6,-7,-8,-9,40,-76,-77,-52,42,15,45,46,47,-57,58,-65,-71,-81,-82,-79,-80,-2,15,15,15,15,15,15,15,-23,-22,15,79,15,15,15,40,15,15,15,-58,-59,-60,-61,-62,-63,-68,-69,15,15,-66,-67,15,-72,-73,-54,-65,-55,-65,-86,40,-87,-88,-89,-90,40,40,-51,40,-74,-56,-64,-36,-31,-32,-33,-35,40,-70,-28,-29,-24,-25,-26,-27,-30,-78,15,15,-50,15,-20,15,15,15,15,15,15,15,157,-49,-10,-12,-14,-16,-18,-47,15,163,15,15,-39,15,-44,15,-38,-34,-43,15,15,-46,40,-45,15,-40,15,-42,-37,-41,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,153,157,158,159,161,162,163,166,167,170,173,175,177,183,184,185,186,187,188,189,],[24,24,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,24,-57,-65,-71,-81,-82,-79,-80,-2,24,24,24,24,24,24,24,-23,-22,24,24,24,24,-75,24,24,24,-58,-59,-60,-61,-62,-63,-68,-69,24,24,-66,-67,24,-72,-73,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,24,24,-50,24,-20,24,24,24,24,24,24,24,-49,-10,-12,-14,-16,-18,-47,24,24,24,-39,24,-44,24,-38,-34,-43,24,24,-46,-45,24,-40,24,-42,-37,-41,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,153,157,158,159,161,162,163,166,167,170,173,175,177,183,184,185,186,187,188,189,],[25,25,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,25,-57,-65,-71,-81,-82,-79,-80,-2,25,25,25,25,25,25,25,-23,-22,25,25,25,25,-75,25,25,25,-58,-59,-60,-61,-62,-63,-68,-69,25,25,-66,-67,25,-72,-73,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,25,25,-50,25,-20,25,25,25,25,25,25,25,-49,-10,-12,-14,-16,-18,-47,25,25,25,-39,25,-44,25,-38,-34,-43,25,25,-46,-45,25,-40,25,-42,-37,-41,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,153,157,158,159,161,162,163,166,167,170,173,175,177,183,184,185,186,187,188,189,],[26,26,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,26,-57,-65,-71,-81,-82,-79,-80,-2,26,26,26,26,26,26,26,-23,-22,26,26,26,26,-75,26,26,26,-58,-59,-60,-61,-62,-63,-68,-69,26,26,-66,-67,26,-72,-73,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,26,26,-50,26,-20,26,26,26,26,26,26,26,-49,-10,-12,-14,-16,-18,-47,26,26,26,-39,26,-44,26,-38,-34,-43,26,26,-46,-45,26,-40,26,-42,-37,-41,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,126,131,132,133,134,135,136,137,138,139,141,144,145,146,147,148,149,150,153,157,158,159,161,162,163,166,167,170,173,175,177,183,184,185,186,187,188,189,],[27,27,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,27,-57,-65,-71,-81,-82,-79,-80,-2,27,27,27,27,27,27,27,-23,-22,27,27,27,27,-75,27,27,27,-58,-59,-60,-61,-62,-63,-68,-69,27,27,-66,-67,27,-72,-73,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,27,27,-50,27,-20,27,27,27,27,27,27,27,-49,-10,-12,-14,-16,-18,-47,27,27,27,-39,27,-44,27,-38,-34,-43,27,27,-46,-45,27,-40,27,-42,-37,-41,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,28,36,37,44,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,159,162,166,167,170,177,183,185,187,188,189,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-2,-23,-22,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,-21,-50,-11,-20,-13,-15,-17,-19,-48,-49,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,-46,-45,-40,-42,-37,-41,]),'RBRACE':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,36,37,44,60,61,65,66,67,68,69,70,71,72,73,74,84,85,92,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,128,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,154,155,159,162,166,167,170,177,178,179,180,181,182,183,185,187,188,189,],[-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-23,-22,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,-53,-51,-74,-56,-64,-36,129,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,-78,-21,142,-50,-11,-20,-13,-15,-17,-19,-48,-49,-10,-12,-14,-16,-18,-47,158,159,161,162,-39,-44,-38,-34,-43,-46,184,185,186,187,-75,-45,-40,-42,-37,-41,]),'SEMI':([4,5,6,7,8,9,10,11,12,13,19,22,23,24,25,26,27,36,37,44,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,85,87,92,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,130,131,132,133,134,135,136,137,138,140,144,145,146,147,148,149,150,159,162,166,167,170,172,176,177,183,185,187,188,189,],[-4,-5,-6,-7,-8,-9,-23,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-23,-22,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,109,111,113,114,-53,-51,119,-74,126,-56,-64,128,-36,-34,-31,-32,-33,-35,-75,-70,-28,-29,-24,-25,-26,-27,-30,131,-78,132,-21,134,135,136,137,138,144,-50,-11,-20,-13,-15,-17,-19,-48,153,-49,-10,-12,-14,-16,-18,-47,-39,-44,-38,-34,-43,177,183,-46,-45,-40,-42,-37,-41,]),'LOG':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,164,171,178,180,182,],[29,-75,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,29,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,29,-53,-51,-75,-76,-77,29,-74,29,-56,-64,29,29,-75,-70,-78,29,29,29,29,29,29,29,-75,]),'OU_LOGICO':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,164,171,178,180,182,],[30,-75,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,30,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,30,-53,-51,-75,-76,-77,30,-74,30,-56,-64,30,30,-75,-70,-78,30,30,30,30,30,30,30,-75,]),'PLUS':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,160,164,171,178,180,182,],[31,-75,-76,-77,-52,56,-65,-71,-81,-82,-79,-80,31,-75,-66,-67,31,-65,31,-65,-86,-75,-87,-88,-89,-90,-75,-76,-77,31,-53,31,-75,-76,-77,31,-74,31,56,-64,31,31,-75,-70,-78,31,31,31,56,31,31,31,31,-75,]),'MINUS':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,160,164,171,178,180,182,],[32,-75,-76,-77,-52,57,-65,-71,-81,-82,-79,-80,32,-75,-66,-67,32,-65,32,-65,-86,-75,-87,-88,-89,-90,-75,-76,-77,32,-53,32,-75,-76,-77,32,-74,32,57,-64,32,32,-75,-70,-78,32,32,32,57,32,32,32,32,-75,]),'TIMES':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,164,171,178,180,182,],[33,-75,-76,-77,-52,-57,63,-71,-81,-82,-79,-80,33,-75,-66,-67,33,63,33,63,63,-75,63,-88,-89,63,-75,-76,-77,33,-53,33,-75,-76,-77,33,-74,33,-56,63,33,33,-75,-70,-78,33,33,33,33,33,33,33,-75,]),'DIVIDE':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,164,171,178,180,182,],[34,-75,-76,-77,-52,-57,64,-71,-81,-82,-79,-80,34,-75,-66,-67,34,64,34,64,64,-75,64,-88,-89,64,-75,-76,-77,34,-53,34,-75,-76,-77,34,-74,34,-56,64,34,34,-75,-70,-78,34,34,34,34,34,34,34,-75,]),'TIMESX':([9,10,11,12,13,19,22,23,24,25,26,27,43,44,60,61,65,66,67,68,69,70,71,72,73,74,83,84,85,88,89,90,91,92,94,96,97,98,100,106,107,117,140,151,154,164,171,178,180,182,],[35,-75,-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,35,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,35,-53,-51,-75,-76,-77,35,-74,35,-56,-64,35,35,-75,-70,-78,35,35,35,35,35,35,35,-75,]),'ATRIBUTION':([10,36,],[38,38,]),'EQUALITY':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[41,-76,-77,55,-65,-71,-81,-82,-79,-80,41,-66,-67,-65,-65,-75,-75,-76,-77,41,41,-76,-77,-74,-64,41,-70,-78,41,]),'MINUSMINUS':([10,11,12,22,23,24,25,26,27,44,66,68,70,75,76,77,84,88,89,90,92,106,107,117,182,],[-75,-76,-77,60,-71,-81,-82,-79,-80,-75,60,60,-75,-75,-76,-77,-75,-75,-76,-77,-74,-75,-70,-78,-75,]),'PLUSPLUS':([10,11,12,22,23,24,25,26,27,44,66,68,70,75,76,77,84,88,89,90,92,106,107,117,182,],[-75,-76,-77,61,-71,-81,-82,-79,-80,-75,61,61,-75,-75,-76,-77,-75,-75,-76,-77,-74,-75,-70,-78,-75,]),'MENOR':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[-75,-76,-77,50,-65,-71,-81,-82,-79,-80,-75,-66,-67,-65,-65,-75,-75,-76,-77,-75,-75,-76,-77,-74,-64,-75,-70,-78,-75,]),'MENOREQUALS':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[-75,-76,-77,51,-65,-71,-81,-82,-79,-80,-75,-66,-67,-65,-65,-75,-75,-76,-77,-75,-75,-76,-77,-74,-64,-75,-70,-78,-75,]),'MAIOR':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[-75,-76,-77,52,-65,-71,-81,-82,-79,-80,-75,-66,-67,-65,-65,-75,-75,-76,-77,-75,-75,-76,-77,-74,-64,-75,-70,-78,-75,]),'MAIOREQUALS':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[-75,-76,-77,53,-65,-71,-81,-82,-79,-80,-75,-66,-67,-65,-65,-75,-75,-76,-77,-75,-75,-76,-77,-74,-64,-75,-70,-78,-75,]),'DIFERENTE':([10,11,12,19,22,23,24,25,26,27,44,60,61,66,68,70,75,76,77,84,88,89,90,92,97,106,107,117,182,],[-75,-76,-77,54,-65,-71,-81,-82,-79,-80,-75,-66,-67,-65,-65,-75,-75,-76,-77,-75,-75,-76,-77,-74,-64,-75,-70,-78,-75,]),'RPAREN':([11,12,13,19,22,23,24,25,26,27,40,42,43,44,60,61,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,107,115,117,160,164,171,],[-76,-77,-52,-57,-65,-71,-81,-82,-79,-80,-93,87,92,-75,-66,-67,-54,-65,-55,-65,-86,-75,-87,-88,-89,-90,116,117,-83,-84,-85,-53,-51,118,120,121,122,123,-74,124,125,-56,-64,127,-70,130,-78,169,172,176,]),'LBRACE':([21,125,127,165,168,169,],[59,139,141,173,174,175,]),'STRING':([42,45,79,],[86,93,115,]),'ELSE':([158,159,],[165,168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,119,132,134,135,136,137,138,],[3,28,133,145,146,147,148,149,150,]),'var_declaration':([0,2,10,36,47,75,76,77,119,132,134,135,136,137,138,],[4,4,37,37,95,108,110,112,4,4,4,4,4,4,4,]),'print_stmt':([0,2,59,119,132,134,135,136,137,138,139,141,158,161,174,175,184,186,],[5,5,101,5,5,5,5,5,5,5,152,155,167,167,179,167,167,167,]),'read_stmt':([0,2,59,119,132,134,135,136,137,138,158,161,175,184,186,],[6,6,105,6,6,6,6,6,6,6,105,105,105,105,105,]),'selection_stmt':([0,2,59,119,132,134,135,136,137,138,158,161,175,184,186,],[7,7,103,7,7,7,7,7,7,7,103,103,103,103,103,]),'iteration_stmt':([0,2,59,119,132,134,135,136,137,138,158,161,175,184,186,],[8,8,104,8,8,8,8,8,8,8,104,104,104,104,104,]),'expression':([0,2,15,29,30,40,41,42,46,58,59,119,126,132,134,135,136,137,138,139,141,157,158,161,163,173,175,184,186,],[9,9,43,65,67,83,85,91,94,98,100,9,140,9,9,9,9,9,9,151,154,164,100,100,171,178,180,100,100,]),'NUMBER':([0,2,15,29,30,31,32,33,34,35,38,40,41,42,46,48,49,58,59,62,119,126,132,134,135,136,137,138,139,141,153,157,158,161,163,173,175,184,186,],[11,11,11,11,11,11,11,11,11,11,76,11,11,89,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'boolean':([0,2,15,29,30,31,32,33,34,35,38,40,41,42,46,48,49,58,59,62,119,126,132,134,135,136,137,138,139,141,153,157,158,161,163,173,175,184,186,],[12,12,12,12,12,12,12,12,12,12,77,12,12,90,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'simple_expression':([0,2,15,29,30,38,40,41,42,46,58,59,119,126,132,134,135,136,137,138,139,141,157,158,161,163,173,175,184,186,],[13,13,13,13,13,78,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'additive_expression':([0,2,15,29,30,38,40,41,42,46,48,58,59,119,126,132,134,135,136,137,138,139,141,153,157,158,161,163,173,175,184,186,],[19,19,19,19,19,19,19,19,19,19,96,19,19,19,19,19,19,19,19,19,19,19,19,160,19,19,19,19,19,19,19,19,]),'term':([0,2,15,29,30,31,32,33,34,35,38,40,41,42,46,48,49,58,59,119,126,132,134,135,136,137,138,139,141,153,157,158,161,163,173,175,184,186,],[22,22,22,66,68,69,71,72,73,74,22,22,22,22,22,22,97,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,2,15,29,30,31,32,33,34,35,38,40,41,42,46,48,49,58,59,62,119,126,132,134,135,136,137,138,139,141,153,157,158,161,163,173,175,184,186,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,107,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'relop':([19,],[48,]),'addop':([19,96,160,],[49,49,49,]),'mulop':([22,66,68,69,71,72,73,74,97,],[62,62,62,62,62,62,62,62,62,]),'args':([40,],[80,]),'args_list':([40,],[81,]),'empty':([40,],[82,]),'statement':([59,158,161,175,184,186,],[99,166,170,181,188,189,]),'expression_stmt':([59,158,161,175,184,186,],[102,102,102,102,102,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','NIRA_Parser.py',18),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','NIRA_Parser.py',23),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','NIRA_Parser.py',24),
  ('declaration -> var_declaration','declaration',1,'p_declaration','NIRA_Parser.py',30),
  ('declaration -> print_stmt','declaration',1,'p_declaration','NIRA_Parser.py',31),
  ('declaration -> read_stmt','declaration',1,'p_declaration','NIRA_Parser.py',32),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','NIRA_Parser.py',33),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','NIRA_Parser.py',34),
  ('declaration -> expression','declaration',1,'p_declaration','NIRA_Parser.py',35),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',41),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',42),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',43),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',44),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',45),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',46),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',47),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',48),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration','print_stmt',6,'p_print_stmt','NIRA_Parser.py',49),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI','print_stmt',5,'p_print_stmt','NIRA_Parser.py',50),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI declaration','print_stmt',5,'p_print_stmt','NIRA_Parser.py',51),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI','print_stmt',4,'p_print_stmt','NIRA_Parser.py',52),
  ('var_declaration -> IDENTIFIER var_declaration','var_declaration',2,'p_var_declaration','NIRA_Parser.py',58),
  ('var_declaration -> IDENTIFIER','var_declaration',1,'p_var_declaration','NIRA_Parser.py',59),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',60),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',61),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',62),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',63),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration','var_declaration',4,'p_var_declaration','NIRA_Parser.py',64),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',65),
  ('var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI','var_declaration',4,'p_var_declaration','NIRA_Parser.py',66),
  ('statement -> expression_stmt','statement',1,'p_statement','NIRA_Parser.py',72),
  ('statement -> selection_stmt','statement',1,'p_statement','NIRA_Parser.py',73),
  ('statement -> iteration_stmt','statement',1,'p_statement','NIRA_Parser.py',74),
  ('statement -> print_stmt','statement',1,'p_statement','NIRA_Parser.py',75),
  ('statement -> read_stmt','statement',1,'p_statement','NIRA_Parser.py',76),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','NIRA_Parser.py',82),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement','selection_stmt',12,'p_selection_stmt_1','NIRA_Parser.py',87),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement','selection_stmt',8,'p_selection_stmt_1','NIRA_Parser.py',88),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE','selection_stmt',7,'p_selection_stmt_1','NIRA_Parser.py',89),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE','selection_stmt',11,'p_selection_stmt_1','NIRA_Parser.py',90),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',12,'p_iteration_stmt_1','NIRA_Parser.py',96),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE statement RBRACE','iteration_stmt',11,'p_iteration_stmt_1','NIRA_Parser.py',97),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',8,'p_iteration_stmt_2','NIRA_Parser.py',103),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',7,'p_iteration_stmt_2','NIRA_Parser.py',104),
  ('iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',10,'p_iteration_stmt_3','NIRA_Parser.py',110),
  ('iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',9,'p_iteration_stmt_3','NIRA_Parser.py',111),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI declaration','read_stmt',6,'p_read_stmt','NIRA_Parser.py',118),
  ('read_stmt -> READ LPAREN STRING RPAREN SEMI','read_stmt',5,'p_read_stmt','NIRA_Parser.py',119),
  ('read_stmt -> IDENTIFIER READ LPAREN STRING RPAREN SEMI','read_stmt',6,'p_read_stmt','NIRA_Parser.py',120),
  ('read_stmt -> IDENTIFIER READ LPAREN RPAREN SEMI','read_stmt',5,'p_read_stmt','NIRA_Parser.py',121),
  ('expression -> IDENTIFIER EQUALITY expression','expression',3,'p_expression','NIRA_Parser.py',127),
  ('expression -> simple_expression','expression',1,'p_expression','NIRA_Parser.py',128),
  ('expression -> IDENTIFIER EQUALITY IDENTIFIER','expression',3,'p_expression','NIRA_Parser.py',129),
  ('expression -> expression LOG expression','expression',3,'p_expression','NIRA_Parser.py',130),
  ('expression -> expression OU_LOGICO expression','expression',3,'p_expression','NIRA_Parser.py',131),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','NIRA_Parser.py',137),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','NIRA_Parser.py',138),
  ('relop -> MENOR','relop',1,'p_relop','NIRA_Parser.py',144),
  ('relop -> MENOREQUALS','relop',1,'p_relop','NIRA_Parser.py',145),
  ('relop -> MAIOR','relop',1,'p_relop','NIRA_Parser.py',146),
  ('relop -> MAIOREQUALS','relop',1,'p_relop','NIRA_Parser.py',147),
  ('relop -> DIFERENTE','relop',1,'p_relop','NIRA_Parser.py',148),
  ('relop -> EQUALITY','relop',1,'p_relop','NIRA_Parser.py',149),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','NIRA_Parser.py',155),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','NIRA_Parser.py',156),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','NIRA_Parser.py',157),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','NIRA_Parser.py',158),
  ('addop -> PLUS','addop',1,'p_addop','NIRA_Parser.py',164),
  ('addop -> MINUS','addop',1,'p_addop','NIRA_Parser.py',165),
  ('term -> term mulop factor','term',3,'p_term','NIRA_Parser.py',171),
  ('term -> factor','term',1,'p_term','NIRA_Parser.py',172),
  ('mulop -> TIMES','mulop',1,'p_mulop','NIRA_Parser.py',178),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','NIRA_Parser.py',179),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','NIRA_Parser.py',185),
  ('factor -> IDENTIFIER','factor',1,'p_factor','NIRA_Parser.py',186),
  ('factor -> NUMBER','factor',1,'p_factor','NIRA_Parser.py',187),
  ('factor -> boolean','factor',1,'p_factor','NIRA_Parser.py',188),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor','NIRA_Parser.py',189),
  ('boolean -> TRUE','boolean',1,'p_boolean','NIRA_Parser.py',195),
  ('boolean -> FALSE','boolean',1,'p_boolean','NIRA_Parser.py',196),
  ('NUMBER -> INTEGER','NUMBER',1,'p_number','NIRA_Parser.py',202),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number','NIRA_Parser.py',203),
  ('args -> args_list','args',1,'p_args','NIRA_Parser.py',209),
  ('args -> empty','args',1,'p_args','NIRA_Parser.py',210),
  ('args_list -> expression','args_list',1,'p_args_list','NIRA_Parser.py',216),
  ('expression -> expression PLUS term','expression',3,'p_expressions_all','NIRA_Parser.py',221),
  ('expression -> expression MINUS term','expression',3,'p_expressions_all','NIRA_Parser.py',222),
  ('expression -> expression TIMES term','expression',3,'p_expressions_all','NIRA_Parser.py',223),
  ('expression -> expression DIVIDE term','expression',3,'p_expressions_all','NIRA_Parser.py',224),
  ('expression -> expression TIMESX term','expression',3,'p_expressions_all','NIRA_Parser.py',225),
  ('expression -> expression LOG term','expression',3,'p_expressions_all','NIRA_Parser.py',226),
  ('expression -> expression OU_LOGICO term','expression',3,'p_expressions_all','NIRA_Parser.py',227),
  ('empty -> <empty>','empty',0,'p_empty','NIRA_Parser.py',248),
]
