
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLPARENRPARENleftLOGOU_LOGICOleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALITYDIFERENTEleftPLUSMINUSleftTIMESDIVIDEASPAS ATRIBUTION BREAK COMENTARIO DIFERENTE DIVIDE DO ELSE EQUALITY FALSE FOR IDENTIFIER IF LBRACE LCOLCHETE LOG LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MINUSMINUS NUMBER OU_LOGICO PLUS PLUSPLUS PRINT RBRACE RCOLCHETE READ RETURN RPAREN SEMI STRING STRINGS TIMES TIMESX TRUE WHILE WRITEprogram : declaration_listdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | print_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\tprint_stmt   : PRINT LPAREN STRING RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN IDENTIFIER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN NUMBER RPAREN SEMI \n\t\t\t\t    | PRINT LPAREN boolean RPAREN SEMI \n                    | PRINT LPAREN expression RPAREN SEMI \n                    | PRINT LPAREN RPAREN SEMI \n\tvar_declaration : IDENTIFIER var_declaration\n                       | IDENTIFIER \n                       | IDENTIFIER ATRIBUTION NUMBER var_declaration\n                       | IDENTIFIER ATRIBUTION NUMBER\n                       | IDENTIFIER ATRIBUTION boolean var_declaration\n                       | IDENTIFIER ATRIBUTION boolean\n                       | IDENTIFIER ATRIBUTION IDENTIFIER var_declaration\n                       | IDENTIFIER ATRIBUTION IDENTIFIER \n                       | IDENTIFIER ATRIBUTION simple_expression \n\tstatement : expression_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t\t | print_stmt\n\texpression_stmt : expressionselection_stmt : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\t\t\t\t\t  | IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE\n\titeration_stmt : FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement \n\t\t\t\t\t  | FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement\n\t\t\t\t\t  | WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE\n\titeration_stmt : DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI\n\t\t\t\t\t  | DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI\n\texpression : var EQUALITY expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | var EQUALITY IDENTIFIER\n\t\t\t      | expression LOG expression\n\t\t\t\t  | expression OU_LOGICO expression\n\tvar : IDENTIFIERsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : MENOR\n\t\t\t | MENOREQUALS\n\t\t\t | MAIOR\n\t\t\t | MAIOREQUALS\n\t\t\t | DIFERENTE\n             | EQUALITY\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | var\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | IDENTIFIER LPAREN args RPAREN\n\tboolean : TRUE\n\t\t\t   | FALSE\n\targs : args_list\n\t\t\t| empty\n\targs_list : expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression TIMESX term\n                  | expression LOG term\n                  | expression OU_LOGICO term\n    empty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,40,42,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,80,81,82,83,84,85,86,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,125,129,130,131,133,134,135,138,139,142,145,147,149,154,155,156,157,158,159,160,],[8,8,-3,-4,-5,-6,-7,8,-2,-14,22,35,42,8,42,42,8,8,8,-22,-67,-68,-45,-53,-59,42,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,42,-16,-18,97,97,-46,-47,-48,-49,-50,-51,-56,-57,-54,-55,97,-60,-61,-13,42,42,97,97,97,97,97,116,42,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,42,42,-66,97,42,42,-30,42,-35,42,-29,-26,-34,42,42,-37,-36,42,-31,42,-33,-28,-32,]),'PRINT':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,130,131,133,134,138,139,142,146,147,149,154,155,156,157,158,159,160,],[9,9,-3,-4,-5,-6,-7,-15,-2,-14,9,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,9,9,-66,9,-30,9,-35,-29,-26,-34,9,9,-37,-36,9,-31,9,-33,-28,-32,]),'IF':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,130,131,133,134,138,139,142,149,154,155,156,157,158,159,160,],[10,10,-3,-4,-5,-6,-7,-15,-2,-14,10,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,10,-30,10,-35,-29,-26,-34,-37,-36,10,-31,10,-33,-28,-32,]),'FOR':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,130,131,133,134,138,139,142,149,154,155,156,157,158,159,160,],[11,11,-3,-4,-5,-6,-7,-15,-2,-14,11,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,11,-30,11,-35,-29,-26,-34,-37,-36,11,-31,11,-33,-28,-32,]),'WHILE':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,122,130,131,133,134,138,139,142,149,154,155,156,157,158,159,160,],[12,12,-3,-4,-5,-6,-7,-15,-2,-14,12,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,121,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,128,-66,12,-30,12,-35,-29,-26,-34,-37,-36,12,-31,12,-33,-28,-32,]),'DO':([0,2,3,4,5,6,7,8,14,15,21,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,130,131,133,134,138,139,142,149,154,155,156,157,158,159,160,],[13,13,-3,-4,-5,-6,-7,-15,-2,-14,13,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,13,-30,13,-35,-29,-26,-34,-37,-36,13,-31,13,-33,-28,-32,]),'$end':([1,2,3,4,5,6,7,8,14,15,22,23,24,25,26,27,28,29,30,32,39,40,42,43,44,48,50,51,52,53,55,56,67,68,74,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,131,134,138,139,142,149,154,156,158,159,160,],[0,-1,-3,-4,-5,-6,-7,-15,-2,-14,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,-27,-23,-24,-25,-20,-16,-18,-54,-55,-13,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,-30,-35,-29,-26,-34,-37,-36,-31,-33,-28,-32,]),'SEMI':([8,15,22,23,24,25,26,27,28,29,30,32,34,39,40,42,43,44,45,47,48,49,50,51,52,53,55,56,67,68,73,74,75,76,77,78,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,122,131,134,138,139,142,144,148,149,154,156,158,159,160,],[-15,-14,-21,-17,-19,-22,-67,-68,-45,-53,-59,-63,74,-63,-39,-43,-64,-65,88,90,-27,-26,-23,-24,-25,-20,-16,-18,-54,-55,101,-13,102,103,104,105,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,125,-66,-30,-35,-29,-26,-34,149,154,-37,-36,-31,-33,-28,-32,]),'ATRIBUTION':([8,],[16,]),'LPAREN':([9,10,11,12,16,17,18,20,21,22,31,35,42,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,97,116,117,119,121,125,128,129,130,133,135,145,147,155,157,],[17,18,19,20,31,31,31,31,31,54,31,54,54,31,31,31,-46,-47,-48,-49,-50,-51,-56,-57,31,-60,-61,31,31,31,31,31,31,31,31,31,54,54,31,31,129,31,135,31,31,31,31,31,31,31,31,]),'LBRACE':([13,87,89,137,140,141,],[21,117,119,145,146,147,]),'NUMBER':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[23,36,43,43,43,43,43,43,43,-46,-47,-48,-49,-50,-51,-56,-57,43,-60,-61,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[26,26,26,26,26,26,26,26,26,-46,-47,-48,-49,-50,-51,-56,-57,26,-60,-61,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([16,17,18,20,21,31,54,57,58,59,60,61,62,63,64,65,66,69,70,71,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[27,27,27,27,27,27,27,27,27,-46,-47,-48,-49,-50,-51,-56,-57,27,-60,-61,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([17,],[33,]),'RPAREN':([17,26,27,28,29,30,32,33,35,36,37,38,39,40,41,42,43,44,46,54,67,68,72,92,93,94,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,122,132,136,143,],[34,-67,-68,-45,-53,-59,-63,73,75,76,77,78,-63,-39,87,-43,-64,-65,89,-79,-54,-55,100,122,-69,-70,-71,-44,-43,-52,-58,-62,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,141,144,148,]),'MINUSMINUS':([22,23,24,26,27,29,30,32,35,36,37,39,42,43,44,97,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,67,-59,-63,-43,-64,-65,-63,-43,-64,-65,-43,-58,-62,67,67,-43,-66,]),'PLUSPLUS':([22,23,24,26,27,29,30,32,35,36,37,39,42,43,44,97,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,68,-59,-63,-43,-64,-65,-63,-43,-64,-65,-43,-58,-62,68,68,-43,-66,]),'TIMES':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,136,143,150,152,],[-43,-64,-65,-67,-68,-45,70,-59,-63,-43,-64,-65,83,-63,-39,83,-43,-64,-65,83,83,-54,-55,83,83,-44,-43,70,-58,-62,83,70,83,70,70,70,-74,-75,70,83,-40,83,-66,83,83,83,83,83,83,]),'DIVIDE':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,136,143,150,152,],[-43,-64,-65,-67,-68,-45,71,-59,-63,-43,-64,-65,84,-63,-39,84,-43,-64,-65,84,84,-54,-55,84,84,-44,-43,71,-58,-62,84,71,84,71,71,71,-74,-75,71,84,-40,84,-66,84,84,84,84,84,84,]),'MENOR':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,59,-53,-59,-63,-43,-64,-65,-63,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'MENOREQUALS':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,60,-53,-59,-63,-43,-64,-65,-63,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'MAIOR':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,61,-53,-59,-63,-43,-64,-65,-63,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'MAIOREQUALS':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,62,-53,-59,-63,-43,-64,-65,-63,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'DIFERENTE':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,63,-53,-59,-63,-43,-64,-65,-63,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'EQUALITY':([22,23,24,26,27,28,29,30,32,35,36,37,39,42,43,44,67,68,97,98,99,100,107,109,116,122,],[-43,-64,-65,-67,-68,64,-53,-59,-63,-43,-64,-65,86,-43,-64,-65,-54,-55,-43,-52,-58,-62,-53,-53,-43,-66,]),'PLUS':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,132,136,143,150,152,],[-43,-64,-65,-67,-68,65,-53,-59,-63,-43,-64,-65,81,-63,-39,81,-43,-64,-65,81,81,-54,-55,81,81,65,-43,-52,-58,-62,81,-53,81,-53,-72,-73,-74,-75,-76,81,-40,81,-66,81,81,65,81,81,81,81,]),'MINUS':([22,23,24,26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,132,136,143,150,152,],[-43,-64,-65,-67,-68,66,-53,-59,-63,-43,-64,-65,82,-63,-39,82,-43,-64,-65,82,82,-54,-55,82,82,66,-43,-52,-58,-62,82,-53,82,-53,-72,-73,-74,-75,-76,82,-40,82,-66,82,82,66,82,82,82,82,]),'LOG':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,136,143,150,152,],[-67,-68,-45,-53,-59,-63,-43,-64,-65,79,-63,-39,79,-43,-64,-65,79,79,-54,-55,79,79,-44,-43,-52,-58,-62,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,79,-66,79,79,79,79,79,79,]),'OU_LOGICO':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,136,143,150,152,],[-67,-68,-45,-53,-59,-63,-43,-64,-65,80,-63,-39,80,-43,-64,-65,80,80,-54,-55,80,80,-44,-43,-52,-58,-62,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,80,-66,80,80,80,80,80,80,]),'TIMESX':([26,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,46,48,67,68,72,95,96,97,98,99,100,106,107,108,109,110,111,112,113,114,115,116,118,122,123,126,136,143,150,152,],[-67,-68,-45,-53,-59,-63,-43,-64,-65,85,-63,-39,85,-43,-64,-65,85,85,-54,-55,85,85,-44,-43,-52,-58,-62,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,85,-66,85,85,85,85,85,85,]),'RBRACE':([26,27,28,29,30,32,39,40,42,43,44,49,67,68,74,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,123,124,126,127,150,151,152,153,],[-67,-68,-45,-53,-59,-63,-63,-39,-43,-64,-65,91,-54,-55,-13,120,-44,-43,-52,-58,-62,-8,-9,-10,-11,-12,-41,-53,-42,-53,-72,-73,-74,-75,-76,-38,-40,-66,130,131,133,134,155,156,157,158,]),'ELSE':([130,131,],[137,140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,14,]),'var_declaration':([0,2,8,19,22,23,24,],[4,4,15,45,53,55,56,]),'print_stmt':([0,2,21,117,119,130,133,146,147,155,157,],[5,5,49,124,127,139,139,151,153,139,139,]),'selection_stmt':([0,2,21,130,133,155,157,],[6,6,51,51,51,51,51,]),'iteration_stmt':([0,2,21,130,133,155,157,],[7,7,52,52,52,52,52,]),'boolean':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[24,37,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'simple_expression':([16,17,18,20,21,31,54,79,80,86,88,117,119,129,130,133,135,145,147,155,157,],[25,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'additive_expression':([16,17,18,20,21,31,54,57,79,80,86,88,117,119,125,129,130,133,135,145,147,155,157,],[28,28,28,28,28,28,28,96,28,28,28,28,28,28,132,28,28,28,28,28,28,28,28,]),'term':([16,17,18,20,21,31,54,57,58,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[29,29,29,29,29,29,29,29,98,107,109,110,111,112,113,114,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'factor':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[30,30,30,30,30,30,30,30,30,99,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'var':([16,17,18,20,21,31,54,57,58,69,79,80,81,82,83,84,85,86,88,117,119,125,129,130,133,135,145,147,155,157,],[32,39,39,39,39,39,39,32,32,32,39,39,32,32,32,32,32,39,39,39,39,32,39,39,39,39,39,39,39,39,]),'expression':([17,18,20,21,31,54,79,80,86,88,117,119,129,130,133,135,145,147,155,157,],[38,41,46,48,72,95,106,108,115,118,123,126,136,48,48,143,150,152,48,48,]),'statement':([21,130,133,155,157,],[47,138,142,159,160,]),'expression_stmt':([21,130,133,155,157,],[50,50,50,50,50,]),'relop':([28,],[57,]),'addop':([28,96,132,],[58,58,58,]),'mulop':([29,98,107,109,110,111,112,113,114,],[69,69,69,69,69,69,69,69,69,]),'args':([54,],[92,]),'args_list':([54,],[93,]),'empty':([54,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parserS.py',16),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parserS.py',20),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parserS.py',21),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parserS.py',26),
  ('declaration -> print_stmt','declaration',1,'p_declaration','parserS.py',27),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','parserS.py',28),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','parserS.py',29),
  ('print_stmt -> PRINT LPAREN STRING RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',34),
  ('print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',35),
  ('print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',36),
  ('print_stmt -> PRINT LPAREN boolean RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',37),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMI','print_stmt',5,'p_print_stmt','parserS.py',38),
  ('print_stmt -> PRINT LPAREN RPAREN SEMI','print_stmt',4,'p_print_stmt','parserS.py',39),
  ('var_declaration -> IDENTIFIER var_declaration','var_declaration',2,'p_var_declaration','parserS.py',44),
  ('var_declaration -> IDENTIFIER','var_declaration',1,'p_var_declaration','parserS.py',45),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',46),
  ('var_declaration -> IDENTIFIER ATRIBUTION NUMBER','var_declaration',3,'p_var_declaration','parserS.py',47),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration','var_declaration',4,'p_var_declaration','parserS.py',48),
  ('var_declaration -> IDENTIFIER ATRIBUTION boolean','var_declaration',3,'p_var_declaration','parserS.py',49),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration','var_declaration',4,'p_var_declaration','parserS.py',50),
  ('var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER','var_declaration',3,'p_var_declaration','parserS.py',51),
  ('var_declaration -> IDENTIFIER ATRIBUTION simple_expression','var_declaration',3,'p_var_declaration','parserS.py',52),
  ('statement -> expression_stmt','statement',1,'p_statement','parserS.py',57),
  ('statement -> selection_stmt','statement',1,'p_statement','parserS.py',58),
  ('statement -> iteration_stmt','statement',1,'p_statement','parserS.py',59),
  ('statement -> print_stmt','statement',1,'p_statement','parserS.py',60),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','parserS.py',65),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement','selection_stmt',12,'p_selection_stmt_1','parserS.py',69),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement','selection_stmt',8,'p_selection_stmt_1','parserS.py',70),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE','selection_stmt',7,'p_selection_stmt_1','parserS.py',71),
  ('selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE','selection_stmt',11,'p_selection_stmt_1','parserS.py',72),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',12,'p_iteration_stmt_1','parserS.py',77),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',11,'p_iteration_stmt_1','parserS.py',78),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement','iteration_stmt',8,'p_iteration_stmt_2','parserS.py',82),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE','iteration_stmt',7,'p_iteration_stmt_2','parserS.py',83),
  ('iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',10,'p_iteration_stmt_3','parserS.py',88),
  ('iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI','iteration_stmt',9,'p_iteration_stmt_3','parserS.py',89),
  ('expression -> var EQUALITY expression','expression',3,'p_expression','parserS.py',94),
  ('expression -> simple_expression','expression',1,'p_expression','parserS.py',95),
  ('expression -> var EQUALITY IDENTIFIER','expression',3,'p_expression','parserS.py',96),
  ('expression -> expression LOG expression','expression',3,'p_expression','parserS.py',97),
  ('expression -> expression OU_LOGICO expression','expression',3,'p_expression','parserS.py',98),
  ('var -> IDENTIFIER','var',1,'p_var','parserS.py',103),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','parserS.py',107),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','parserS.py',108),
  ('relop -> MENOR','relop',1,'p_relop','parserS.py',113),
  ('relop -> MENOREQUALS','relop',1,'p_relop','parserS.py',114),
  ('relop -> MAIOR','relop',1,'p_relop','parserS.py',115),
  ('relop -> MAIOREQUALS','relop',1,'p_relop','parserS.py',116),
  ('relop -> DIFERENTE','relop',1,'p_relop','parserS.py',117),
  ('relop -> EQUALITY','relop',1,'p_relop','parserS.py',118),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','parserS.py',123),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','parserS.py',124),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','parserS.py',125),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','parserS.py',126),
  ('addop -> PLUS','addop',1,'p_addop','parserS.py',131),
  ('addop -> MINUS','addop',1,'p_addop','parserS.py',132),
  ('term -> term mulop factor','term',3,'p_term','parserS.py',137),
  ('term -> factor','term',1,'p_term','parserS.py',138),
  ('mulop -> TIMES','mulop',1,'p_mulop','parserS.py',143),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','parserS.py',144),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parserS.py',149),
  ('factor -> var','factor',1,'p_factor','parserS.py',150),
  ('factor -> NUMBER','factor',1,'p_factor','parserS.py',151),
  ('factor -> boolean','factor',1,'p_factor','parserS.py',152),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor','parserS.py',153),
  ('boolean -> TRUE','boolean',1,'p_boolean','parserS.py',158),
  ('boolean -> FALSE','boolean',1,'p_boolean','parserS.py',159),
  ('args -> args_list','args',1,'p_args','parserS.py',165),
  ('args -> empty','args',1,'p_args','parserS.py',166),
  ('args_list -> expression','args_list',1,'p_args_list','parserS.py',171),
  ('expression -> expression PLUS term','expression',3,'p_expressions_all','parserS.py',175),
  ('expression -> expression MINUS term','expression',3,'p_expressions_all','parserS.py',176),
  ('expression -> expression TIMES term','expression',3,'p_expressions_all','parserS.py',177),
  ('expression -> expression DIVIDE term','expression',3,'p_expressions_all','parserS.py',178),
  ('expression -> expression TIMESX term','expression',3,'p_expressions_all','parserS.py',179),
  ('expression -> expression LOG term','expression',3,'p_expressions_all','parserS.py',180),
  ('expression -> expression OU_LOGICO term','expression',3,'p_expressions_all','parserS.py',181),
  ('empty -> <empty>','empty',0,'p_empty','parserS.py',201),
]
