Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASPAS
    BREAK
    COMMENT
    LCOLCHETE
    RCOLCHETE
    RETURN
    STRINGS
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> print_stmt
Rule 6     declaration -> read_stmt
Rule 7     declaration -> selection_stmt
Rule 8     declaration -> iteration_stmt
Rule 9     declaration -> expression
Rule 10    print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration
Rule 11    print_stmt -> PRINT LPAREN STRING RPAREN SEMI
Rule 12    print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
Rule 13    print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI
Rule 14    print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration
Rule 15    print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI
Rule 16    print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration
Rule 17    print_stmt -> PRINT LPAREN boolean RPAREN SEMI
Rule 18    print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration
Rule 19    print_stmt -> PRINT LPAREN expression RPAREN SEMI
Rule 20    print_stmt -> PRINT LPAREN RPAREN SEMI declaration
Rule 21    print_stmt -> PRINT LPAREN RPAREN SEMI
Rule 22    var_declaration -> IDENTIFIER var_declaration
Rule 23    var_declaration -> IDENTIFIER
Rule 24    var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration
Rule 25    var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI
Rule 26    var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration
Rule 27    var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI
Rule 28    var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
Rule 29    var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI
Rule 30    var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI
Rule 31    statement -> expression_stmt
Rule 32    statement -> selection_stmt
Rule 33    statement -> iteration_stmt
Rule 34    statement -> print_stmt
Rule 35    statement -> read_stmt
Rule 36    expression_stmt -> expression
Rule 37    selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
Rule 38    selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement
Rule 39    selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE
Rule 40    selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
Rule 41    iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
Rule 42    iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
Rule 43    iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
Rule 44    iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE
Rule 45    iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 46    iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 47    iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 48    iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
Rule 49    iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 50    read_stmt -> READ LPAREN STRING RPAREN SEMI declaration
Rule 51    read_stmt -> READ LPAREN STRING RPAREN SEMI
Rule 52    read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
Rule 53    read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
Rule 54    expression -> IDENTIFIER EQUALITY expression
Rule 55    expression -> simple_expression
Rule 56    expression -> IDENTIFIER EQUALITY IDENTIFIER
Rule 57    expression -> expression LOG expression
Rule 58    expression -> expression OU_LOGICO expression
Rule 59    simple_expression -> additive_expression relop additive_expression
Rule 60    simple_expression -> additive_expression
Rule 61    relop -> MENOR
Rule 62    relop -> MENOREQUALS
Rule 63    relop -> MAIOR
Rule 64    relop -> MAIOREQUALS
Rule 65    relop -> DIFERENTE
Rule 66    relop -> EQUALITY
Rule 67    additive_expression -> additive_expression addop term
Rule 68    additive_expression -> term
Rule 69    additive_expression -> term MINUSMINUS
Rule 70    additive_expression -> term PLUSPLUS
Rule 71    addop -> PLUS
Rule 72    addop -> MINUS
Rule 73    term -> term mulop factor
Rule 74    term -> factor
Rule 75    mulop -> TIMES
Rule 76    mulop -> DIVIDE
Rule 77    factor -> LPAREN expression RPAREN
Rule 78    factor -> IDENTIFIER
Rule 79    factor -> NUMBER
Rule 80    factor -> boolean
Rule 81    factor -> IDENTIFIER LPAREN args RPAREN
Rule 82    boolean -> TRUE
Rule 83    boolean -> FALSE
Rule 84    NUMBER -> INTEGER
Rule 85    NUMBER -> FLOAT
Rule 86    args -> args_list
Rule 87    args -> empty
Rule 88    args_list -> expression
Rule 89    expression -> expression PLUS term
Rule 90    expression -> expression MINUS term
Rule 91    expression -> expression TIMES term
Rule 92    expression -> expression DIVIDE term
Rule 93    expression -> expression TIMESX term
Rule 94    expression -> expression LOG term
Rule 95    expression -> expression OU_LOGICO term
Rule 96    empty -> <empty>

Terminals, with rules where they appear

ASPAS                : 
ATRIBUTION           : 24 25 26 27 28 29 30 52 53
BREAK                : 
COMMENT              : 
DIFERENTE            : 65
DIVIDE               : 76 92
DO                   : 45 46 47 48 49
ELSE                 : 37 40
EQUALITY             : 54 56 66
FALSE                : 83
FLOAT                : 85
FOR                  : 41 42
IDENTIFIER           : 12 13 22 23 24 25 26 27 28 28 29 29 30 52 53 54 56 56 78 81
IF                   : 37 38 39 40
INTEGER              : 84
LBRACE               : 37 37 38 39 40 40 41 42 43 44 45 46 47 48 49
LCOLCHETE            : 
LOG                  : 57 94
LPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 77 81
MAIOR                : 63
MAIOREQUALS          : 64
MENOR                : 61
MENOREQUALS          : 62
MINUS                : 72 90
MINUSMINUS           : 69
OU_LOGICO            : 58 95
PLUS                 : 71 89
PLUSPLUS             : 70
PRINT                : 10 11 12 13 14 15 16 17 18 19 20 21
RBRACE               : 37 37 38 39 40 40 41 42 43 44 45 46 47 48 49
RCOLCHETE            : 
READ                 : 50 51 52 53
RETURN               : 
RPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 77 81
SEMI                 : 10 11 12 13 14 15 16 17 18 19 20 21 25 27 29 30 41 42 45 45 46 47 48 49 50 51 52 53
STRING               : 10 11 50 51 52
STRINGS              : 
TIMES                : 75 91
TIMESX               : 93
TRUE                 : 82
WHILE                : 43 44 45 46 47 48 49
WRITE                : 
error                : 

Nonterminals, with rules where they appear

NUMBER               : 14 15 24 25 79
additive_expression  : 41 42 59 59 60 67
addop                : 67
args                 : 81
args_list            : 86
boolean              : 16 17 26 27 80
declaration          : 2 3 10 12 14 16 18 20 39 40 40 50
declaration_list     : 1 2
empty                : 87
expression           : 9 18 19 36 37 37 37 38 38 39 40 41 41 42 43 43 44 45 46 47 48 49 54 57 57 58 58 77 88 89 90 91 92 93 94 95
expression_stmt      : 31
factor               : 73 74
iteration_stmt       : 8 33
mulop                : 73
print_stmt           : 5 34 42 46
program              : 0
read_stmt            : 6 35 47
relop                : 59
selection_stmt       : 7 32 48 49
simple_expression    : 30 55
statement            : 37 38 41 43 44 45 48
term                 : 67 68 69 70 73 89 90 91 92 93 94 95
var_declaration      : 4 22 24 26 28 41 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    $end            reduce using rule 1 (program -> declaration_list .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    declaration                    shift and go to state 28
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 3

    (3) declaration_list -> declaration .

    IDENTIFIER      reduce using rule 3 (declaration_list -> declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration .)
    READ            reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    DO              reduce using rule 3 (declaration_list -> declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration .)
    INTEGER         reduce using rule 3 (declaration_list -> declaration .)
    FLOAT           reduce using rule 3 (declaration_list -> declaration .)
    TRUE            reduce using rule 3 (declaration_list -> declaration .)
    FALSE           reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    IDENTIFIER      reduce using rule 4 (declaration -> var_declaration .)
    PRINT           reduce using rule 4 (declaration -> var_declaration .)
    READ            reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    LPAREN          reduce using rule 4 (declaration -> var_declaration .)
    INTEGER         reduce using rule 4 (declaration -> var_declaration .)
    FLOAT           reduce using rule 4 (declaration -> var_declaration .)
    TRUE            reduce using rule 4 (declaration -> var_declaration .)
    FALSE           reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)
    RBRACE          reduce using rule 4 (declaration -> var_declaration .)
    SEMI            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> print_stmt .

    IDENTIFIER      reduce using rule 5 (declaration -> print_stmt .)
    PRINT           reduce using rule 5 (declaration -> print_stmt .)
    READ            reduce using rule 5 (declaration -> print_stmt .)
    IF              reduce using rule 5 (declaration -> print_stmt .)
    FOR             reduce using rule 5 (declaration -> print_stmt .)
    WHILE           reduce using rule 5 (declaration -> print_stmt .)
    DO              reduce using rule 5 (declaration -> print_stmt .)
    LPAREN          reduce using rule 5 (declaration -> print_stmt .)
    INTEGER         reduce using rule 5 (declaration -> print_stmt .)
    FLOAT           reduce using rule 5 (declaration -> print_stmt .)
    TRUE            reduce using rule 5 (declaration -> print_stmt .)
    FALSE           reduce using rule 5 (declaration -> print_stmt .)
    $end            reduce using rule 5 (declaration -> print_stmt .)
    RBRACE          reduce using rule 5 (declaration -> print_stmt .)
    SEMI            reduce using rule 5 (declaration -> print_stmt .)


state 6

    (6) declaration -> read_stmt .

    IDENTIFIER      reduce using rule 6 (declaration -> read_stmt .)
    PRINT           reduce using rule 6 (declaration -> read_stmt .)
    READ            reduce using rule 6 (declaration -> read_stmt .)
    IF              reduce using rule 6 (declaration -> read_stmt .)
    FOR             reduce using rule 6 (declaration -> read_stmt .)
    WHILE           reduce using rule 6 (declaration -> read_stmt .)
    DO              reduce using rule 6 (declaration -> read_stmt .)
    LPAREN          reduce using rule 6 (declaration -> read_stmt .)
    INTEGER         reduce using rule 6 (declaration -> read_stmt .)
    FLOAT           reduce using rule 6 (declaration -> read_stmt .)
    TRUE            reduce using rule 6 (declaration -> read_stmt .)
    FALSE           reduce using rule 6 (declaration -> read_stmt .)
    $end            reduce using rule 6 (declaration -> read_stmt .)
    RBRACE          reduce using rule 6 (declaration -> read_stmt .)
    SEMI            reduce using rule 6 (declaration -> read_stmt .)


state 7

    (7) declaration -> selection_stmt .

    IDENTIFIER      reduce using rule 7 (declaration -> selection_stmt .)
    PRINT           reduce using rule 7 (declaration -> selection_stmt .)
    READ            reduce using rule 7 (declaration -> selection_stmt .)
    IF              reduce using rule 7 (declaration -> selection_stmt .)
    FOR             reduce using rule 7 (declaration -> selection_stmt .)
    WHILE           reduce using rule 7 (declaration -> selection_stmt .)
    DO              reduce using rule 7 (declaration -> selection_stmt .)
    LPAREN          reduce using rule 7 (declaration -> selection_stmt .)
    INTEGER         reduce using rule 7 (declaration -> selection_stmt .)
    FLOAT           reduce using rule 7 (declaration -> selection_stmt .)
    TRUE            reduce using rule 7 (declaration -> selection_stmt .)
    FALSE           reduce using rule 7 (declaration -> selection_stmt .)
    $end            reduce using rule 7 (declaration -> selection_stmt .)
    RBRACE          reduce using rule 7 (declaration -> selection_stmt .)
    SEMI            reduce using rule 7 (declaration -> selection_stmt .)


state 8

    (8) declaration -> iteration_stmt .

    IDENTIFIER      reduce using rule 8 (declaration -> iteration_stmt .)
    PRINT           reduce using rule 8 (declaration -> iteration_stmt .)
    READ            reduce using rule 8 (declaration -> iteration_stmt .)
    IF              reduce using rule 8 (declaration -> iteration_stmt .)
    FOR             reduce using rule 8 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 8 (declaration -> iteration_stmt .)
    DO              reduce using rule 8 (declaration -> iteration_stmt .)
    LPAREN          reduce using rule 8 (declaration -> iteration_stmt .)
    INTEGER         reduce using rule 8 (declaration -> iteration_stmt .)
    FLOAT           reduce using rule 8 (declaration -> iteration_stmt .)
    TRUE            reduce using rule 8 (declaration -> iteration_stmt .)
    FALSE           reduce using rule 8 (declaration -> iteration_stmt .)
    $end            reduce using rule 8 (declaration -> iteration_stmt .)
    RBRACE          reduce using rule 8 (declaration -> iteration_stmt .)
    SEMI            reduce using rule 8 (declaration -> iteration_stmt .)


state 9

    (9) declaration -> expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    IDENTIFIER      reduce using rule 9 (declaration -> expression .)
    PRINT           reduce using rule 9 (declaration -> expression .)
    READ            reduce using rule 9 (declaration -> expression .)
    IF              reduce using rule 9 (declaration -> expression .)
    FOR             reduce using rule 9 (declaration -> expression .)
    WHILE           reduce using rule 9 (declaration -> expression .)
    DO              reduce using rule 9 (declaration -> expression .)
    LPAREN          reduce using rule 9 (declaration -> expression .)
    INTEGER         reduce using rule 9 (declaration -> expression .)
    FLOAT           reduce using rule 9 (declaration -> expression .)
    TRUE            reduce using rule 9 (declaration -> expression .)
    FALSE           reduce using rule 9 (declaration -> expression .)
    $end            reduce using rule 9 (declaration -> expression .)
    RBRACE          reduce using rule 9 (declaration -> expression .)
    SEMI            reduce using rule 9 (declaration -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 10

    (22) var_declaration -> IDENTIFIER . var_declaration
    (23) var_declaration -> IDENTIFIER .
    (24) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER SEMI
    (26) var_declaration -> IDENTIFIER . ATRIBUTION boolean var_declaration
    (27) var_declaration -> IDENTIFIER . ATRIBUTION boolean SEMI
    (28) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER . ATRIBUTION simple_expression SEMI
    (52) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for READ resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for IF resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for DO resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for SEMI resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    PRINT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    READ            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    IF              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FOR             reduce using rule 23 (var_declaration -> IDENTIFIER .)
    WHILE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    DO              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    TRUE            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FALSE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    $end            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    RBRACE          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    SEMI            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    ATRIBUTION      shift and go to state 38
    EQUALITY        shift and go to state 40
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 36

  ! IDENTIFIER      [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]
  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! IDENTIFIER      [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! PRINT           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! READ            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! IF              [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FOR             [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! WHILE           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! DO              [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! INTEGER         [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FLOAT           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! TRUE            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FALSE           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! SEMI            [ reduce using rule 78 (factor -> IDENTIFIER .) ]

    var_declaration                shift and go to state 37

state 11

    (79) factor -> NUMBER .

    MINUSMINUS      reduce using rule 79 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 79 (factor -> NUMBER .)
    TIMES           reduce using rule 79 (factor -> NUMBER .)
    DIVIDE          reduce using rule 79 (factor -> NUMBER .)
    MENOR           reduce using rule 79 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    MAIOR           reduce using rule 79 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 79 (factor -> NUMBER .)
    EQUALITY        reduce using rule 79 (factor -> NUMBER .)
    PLUS            reduce using rule 79 (factor -> NUMBER .)
    MINUS           reduce using rule 79 (factor -> NUMBER .)
    LOG             reduce using rule 79 (factor -> NUMBER .)
    OU_LOGICO       reduce using rule 79 (factor -> NUMBER .)
    TIMESX          reduce using rule 79 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 79 (factor -> NUMBER .)
    PRINT           reduce using rule 79 (factor -> NUMBER .)
    READ            reduce using rule 79 (factor -> NUMBER .)
    IF              reduce using rule 79 (factor -> NUMBER .)
    FOR             reduce using rule 79 (factor -> NUMBER .)
    WHILE           reduce using rule 79 (factor -> NUMBER .)
    DO              reduce using rule 79 (factor -> NUMBER .)
    LPAREN          reduce using rule 79 (factor -> NUMBER .)
    INTEGER         reduce using rule 79 (factor -> NUMBER .)
    FLOAT           reduce using rule 79 (factor -> NUMBER .)
    TRUE            reduce using rule 79 (factor -> NUMBER .)
    FALSE           reduce using rule 79 (factor -> NUMBER .)
    $end            reduce using rule 79 (factor -> NUMBER .)
    RPAREN          reduce using rule 79 (factor -> NUMBER .)
    SEMI            reduce using rule 79 (factor -> NUMBER .)
    RBRACE          reduce using rule 79 (factor -> NUMBER .)


state 12

    (80) factor -> boolean .

    MINUSMINUS      reduce using rule 80 (factor -> boolean .)
    PLUSPLUS        reduce using rule 80 (factor -> boolean .)
    TIMES           reduce using rule 80 (factor -> boolean .)
    DIVIDE          reduce using rule 80 (factor -> boolean .)
    MENOR           reduce using rule 80 (factor -> boolean .)
    MENOREQUALS     reduce using rule 80 (factor -> boolean .)
    MAIOR           reduce using rule 80 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 80 (factor -> boolean .)
    DIFERENTE       reduce using rule 80 (factor -> boolean .)
    EQUALITY        reduce using rule 80 (factor -> boolean .)
    PLUS            reduce using rule 80 (factor -> boolean .)
    MINUS           reduce using rule 80 (factor -> boolean .)
    LOG             reduce using rule 80 (factor -> boolean .)
    OU_LOGICO       reduce using rule 80 (factor -> boolean .)
    TIMESX          reduce using rule 80 (factor -> boolean .)
    IDENTIFIER      reduce using rule 80 (factor -> boolean .)
    PRINT           reduce using rule 80 (factor -> boolean .)
    READ            reduce using rule 80 (factor -> boolean .)
    IF              reduce using rule 80 (factor -> boolean .)
    FOR             reduce using rule 80 (factor -> boolean .)
    WHILE           reduce using rule 80 (factor -> boolean .)
    DO              reduce using rule 80 (factor -> boolean .)
    LPAREN          reduce using rule 80 (factor -> boolean .)
    INTEGER         reduce using rule 80 (factor -> boolean .)
    FLOAT           reduce using rule 80 (factor -> boolean .)
    TRUE            reduce using rule 80 (factor -> boolean .)
    FALSE           reduce using rule 80 (factor -> boolean .)
    $end            reduce using rule 80 (factor -> boolean .)
    RPAREN          reduce using rule 80 (factor -> boolean .)
    SEMI            reduce using rule 80 (factor -> boolean .)
    RBRACE          reduce using rule 80 (factor -> boolean .)


state 13

    (55) expression -> simple_expression .

    LOG             reduce using rule 55 (expression -> simple_expression .)
    OU_LOGICO       reduce using rule 55 (expression -> simple_expression .)
    PLUS            reduce using rule 55 (expression -> simple_expression .)
    MINUS           reduce using rule 55 (expression -> simple_expression .)
    TIMES           reduce using rule 55 (expression -> simple_expression .)
    DIVIDE          reduce using rule 55 (expression -> simple_expression .)
    TIMESX          reduce using rule 55 (expression -> simple_expression .)
    IDENTIFIER      reduce using rule 55 (expression -> simple_expression .)
    PRINT           reduce using rule 55 (expression -> simple_expression .)
    READ            reduce using rule 55 (expression -> simple_expression .)
    IF              reduce using rule 55 (expression -> simple_expression .)
    FOR             reduce using rule 55 (expression -> simple_expression .)
    WHILE           reduce using rule 55 (expression -> simple_expression .)
    DO              reduce using rule 55 (expression -> simple_expression .)
    LPAREN          reduce using rule 55 (expression -> simple_expression .)
    INTEGER         reduce using rule 55 (expression -> simple_expression .)
    FLOAT           reduce using rule 55 (expression -> simple_expression .)
    TRUE            reduce using rule 55 (expression -> simple_expression .)
    FALSE           reduce using rule 55 (expression -> simple_expression .)
    $end            reduce using rule 55 (expression -> simple_expression .)
    RPAREN          reduce using rule 55 (expression -> simple_expression .)
    SEMI            reduce using rule 55 (expression -> simple_expression .)
    RBRACE          reduce using rule 55 (expression -> simple_expression .)


state 14

    (10) print_stmt -> PRINT . LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> PRINT . LPAREN STRING RPAREN SEMI
    (12) print_stmt -> PRINT . LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> PRINT . LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> PRINT . LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> PRINT . LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> PRINT . LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> PRINT . LPAREN boolean RPAREN SEMI
    (18) print_stmt -> PRINT . LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> PRINT . LPAREN expression RPAREN SEMI
    (20) print_stmt -> PRINT . LPAREN RPAREN SEMI declaration
    (21) print_stmt -> PRINT . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 41


state 15

    (77) factor -> LPAREN . expression RPAREN
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 42
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 16

    (50) read_stmt -> READ . LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> READ . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 44


state 17

    (37) selection_stmt -> IF . LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF . LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF . LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> IF . LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE

    LPAREN          shift and go to state 45


state 18

    (41) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE

    LPAREN          shift and go to state 46


state 19

    (59) simple_expression -> additive_expression . relop additive_expression
    (60) simple_expression -> additive_expression .
    (67) additive_expression -> additive_expression . addop term
    (61) relop -> . MENOR
    (62) relop -> . MENOREQUALS
    (63) relop -> . MAIOR
    (64) relop -> . MAIOREQUALS
    (65) relop -> . DIFERENTE
    (66) relop -> . EQUALITY
    (71) addop -> . PLUS
    (72) addop -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOG             reduce using rule 60 (simple_expression -> additive_expression .)
    OU_LOGICO       reduce using rule 60 (simple_expression -> additive_expression .)
    TIMES           reduce using rule 60 (simple_expression -> additive_expression .)
    DIVIDE          reduce using rule 60 (simple_expression -> additive_expression .)
    TIMESX          reduce using rule 60 (simple_expression -> additive_expression .)
    IDENTIFIER      reduce using rule 60 (simple_expression -> additive_expression .)
    PRINT           reduce using rule 60 (simple_expression -> additive_expression .)
    READ            reduce using rule 60 (simple_expression -> additive_expression .)
    IF              reduce using rule 60 (simple_expression -> additive_expression .)
    FOR             reduce using rule 60 (simple_expression -> additive_expression .)
    WHILE           reduce using rule 60 (simple_expression -> additive_expression .)
    DO              reduce using rule 60 (simple_expression -> additive_expression .)
    LPAREN          reduce using rule 60 (simple_expression -> additive_expression .)
    INTEGER         reduce using rule 60 (simple_expression -> additive_expression .)
    FLOAT           reduce using rule 60 (simple_expression -> additive_expression .)
    TRUE            reduce using rule 60 (simple_expression -> additive_expression .)
    FALSE           reduce using rule 60 (simple_expression -> additive_expression .)
    $end            reduce using rule 60 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 60 (simple_expression -> additive_expression .)
    SEMI            reduce using rule 60 (simple_expression -> additive_expression .)
    RBRACE          reduce using rule 60 (simple_expression -> additive_expression .)
    MENOR           shift and go to state 49
    MENOREQUALS     shift and go to state 50
    MAIOR           shift and go to state 51
    MAIOREQUALS     shift and go to state 52
    DIFERENTE       shift and go to state 53
    EQUALITY        shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

  ! PLUS            [ reduce using rule 60 (simple_expression -> additive_expression .) ]
  ! MINUS           [ reduce using rule 60 (simple_expression -> additive_expression .) ]

    relop                          shift and go to state 47
    addop                          shift and go to state 48

state 20

    (43) iteration_stmt -> WHILE . LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE . LPAREN expression RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 57


state 21

    (45) iteration_stmt -> DO . LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> DO . LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> DO . LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> DO . LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> DO . LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI

    LBRACE          shift and go to state 58


state 22

    (68) additive_expression -> term .
    (69) additive_expression -> term . MINUSMINUS
    (70) additive_expression -> term . PLUSPLUS
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 68 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 68 (additive_expression -> term .)
    MAIOR           reduce using rule 68 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 68 (additive_expression -> term .)
    DIFERENTE       reduce using rule 68 (additive_expression -> term .)
    EQUALITY        reduce using rule 68 (additive_expression -> term .)
    PLUS            reduce using rule 68 (additive_expression -> term .)
    MINUS           reduce using rule 68 (additive_expression -> term .)
    LOG             reduce using rule 68 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 68 (additive_expression -> term .)
    TIMESX          reduce using rule 68 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 68 (additive_expression -> term .)
    PRINT           reduce using rule 68 (additive_expression -> term .)
    READ            reduce using rule 68 (additive_expression -> term .)
    IF              reduce using rule 68 (additive_expression -> term .)
    FOR             reduce using rule 68 (additive_expression -> term .)
    WHILE           reduce using rule 68 (additive_expression -> term .)
    DO              reduce using rule 68 (additive_expression -> term .)
    LPAREN          reduce using rule 68 (additive_expression -> term .)
    INTEGER         reduce using rule 68 (additive_expression -> term .)
    FLOAT           reduce using rule 68 (additive_expression -> term .)
    TRUE            reduce using rule 68 (additive_expression -> term .)
    FALSE           reduce using rule 68 (additive_expression -> term .)
    $end            reduce using rule 68 (additive_expression -> term .)
    RPAREN          reduce using rule 68 (additive_expression -> term .)
    SEMI            reduce using rule 68 (additive_expression -> term .)
    RBRACE          reduce using rule 68 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 68 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 68 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 23

    (74) term -> factor .

    MINUSMINUS      reduce using rule 74 (term -> factor .)
    PLUSPLUS        reduce using rule 74 (term -> factor .)
    TIMES           reduce using rule 74 (term -> factor .)
    DIVIDE          reduce using rule 74 (term -> factor .)
    MENOR           reduce using rule 74 (term -> factor .)
    MENOREQUALS     reduce using rule 74 (term -> factor .)
    MAIOR           reduce using rule 74 (term -> factor .)
    MAIOREQUALS     reduce using rule 74 (term -> factor .)
    DIFERENTE       reduce using rule 74 (term -> factor .)
    EQUALITY        reduce using rule 74 (term -> factor .)
    PLUS            reduce using rule 74 (term -> factor .)
    MINUS           reduce using rule 74 (term -> factor .)
    LOG             reduce using rule 74 (term -> factor .)
    OU_LOGICO       reduce using rule 74 (term -> factor .)
    TIMESX          reduce using rule 74 (term -> factor .)
    IDENTIFIER      reduce using rule 74 (term -> factor .)
    PRINT           reduce using rule 74 (term -> factor .)
    READ            reduce using rule 74 (term -> factor .)
    IF              reduce using rule 74 (term -> factor .)
    FOR             reduce using rule 74 (term -> factor .)
    WHILE           reduce using rule 74 (term -> factor .)
    DO              reduce using rule 74 (term -> factor .)
    LPAREN          reduce using rule 74 (term -> factor .)
    INTEGER         reduce using rule 74 (term -> factor .)
    FLOAT           reduce using rule 74 (term -> factor .)
    TRUE            reduce using rule 74 (term -> factor .)
    FALSE           reduce using rule 74 (term -> factor .)
    $end            reduce using rule 74 (term -> factor .)
    RPAREN          reduce using rule 74 (term -> factor .)
    SEMI            reduce using rule 74 (term -> factor .)
    RBRACE          reduce using rule 74 (term -> factor .)


state 24

    (84) NUMBER -> INTEGER .

    MINUSMINUS      reduce using rule 84 (NUMBER -> INTEGER .)
    PLUSPLUS        reduce using rule 84 (NUMBER -> INTEGER .)
    TIMES           reduce using rule 84 (NUMBER -> INTEGER .)
    DIVIDE          reduce using rule 84 (NUMBER -> INTEGER .)
    MENOR           reduce using rule 84 (NUMBER -> INTEGER .)
    MENOREQUALS     reduce using rule 84 (NUMBER -> INTEGER .)
    MAIOR           reduce using rule 84 (NUMBER -> INTEGER .)
    MAIOREQUALS     reduce using rule 84 (NUMBER -> INTEGER .)
    DIFERENTE       reduce using rule 84 (NUMBER -> INTEGER .)
    EQUALITY        reduce using rule 84 (NUMBER -> INTEGER .)
    PLUS            reduce using rule 84 (NUMBER -> INTEGER .)
    MINUS           reduce using rule 84 (NUMBER -> INTEGER .)
    LOG             reduce using rule 84 (NUMBER -> INTEGER .)
    OU_LOGICO       reduce using rule 84 (NUMBER -> INTEGER .)
    TIMESX          reduce using rule 84 (NUMBER -> INTEGER .)
    IDENTIFIER      reduce using rule 84 (NUMBER -> INTEGER .)
    PRINT           reduce using rule 84 (NUMBER -> INTEGER .)
    READ            reduce using rule 84 (NUMBER -> INTEGER .)
    IF              reduce using rule 84 (NUMBER -> INTEGER .)
    FOR             reduce using rule 84 (NUMBER -> INTEGER .)
    WHILE           reduce using rule 84 (NUMBER -> INTEGER .)
    DO              reduce using rule 84 (NUMBER -> INTEGER .)
    LPAREN          reduce using rule 84 (NUMBER -> INTEGER .)
    INTEGER         reduce using rule 84 (NUMBER -> INTEGER .)
    FLOAT           reduce using rule 84 (NUMBER -> INTEGER .)
    TRUE            reduce using rule 84 (NUMBER -> INTEGER .)
    FALSE           reduce using rule 84 (NUMBER -> INTEGER .)
    $end            reduce using rule 84 (NUMBER -> INTEGER .)
    RPAREN          reduce using rule 84 (NUMBER -> INTEGER .)
    SEMI            reduce using rule 84 (NUMBER -> INTEGER .)
    RBRACE          reduce using rule 84 (NUMBER -> INTEGER .)


state 25

    (85) NUMBER -> FLOAT .

    MINUSMINUS      reduce using rule 85 (NUMBER -> FLOAT .)
    PLUSPLUS        reduce using rule 85 (NUMBER -> FLOAT .)
    TIMES           reduce using rule 85 (NUMBER -> FLOAT .)
    DIVIDE          reduce using rule 85 (NUMBER -> FLOAT .)
    MENOR           reduce using rule 85 (NUMBER -> FLOAT .)
    MENOREQUALS     reduce using rule 85 (NUMBER -> FLOAT .)
    MAIOR           reduce using rule 85 (NUMBER -> FLOAT .)
    MAIOREQUALS     reduce using rule 85 (NUMBER -> FLOAT .)
    DIFERENTE       reduce using rule 85 (NUMBER -> FLOAT .)
    EQUALITY        reduce using rule 85 (NUMBER -> FLOAT .)
    PLUS            reduce using rule 85 (NUMBER -> FLOAT .)
    MINUS           reduce using rule 85 (NUMBER -> FLOAT .)
    LOG             reduce using rule 85 (NUMBER -> FLOAT .)
    OU_LOGICO       reduce using rule 85 (NUMBER -> FLOAT .)
    TIMESX          reduce using rule 85 (NUMBER -> FLOAT .)
    IDENTIFIER      reduce using rule 85 (NUMBER -> FLOAT .)
    PRINT           reduce using rule 85 (NUMBER -> FLOAT .)
    READ            reduce using rule 85 (NUMBER -> FLOAT .)
    IF              reduce using rule 85 (NUMBER -> FLOAT .)
    FOR             reduce using rule 85 (NUMBER -> FLOAT .)
    WHILE           reduce using rule 85 (NUMBER -> FLOAT .)
    DO              reduce using rule 85 (NUMBER -> FLOAT .)
    LPAREN          reduce using rule 85 (NUMBER -> FLOAT .)
    INTEGER         reduce using rule 85 (NUMBER -> FLOAT .)
    FLOAT           reduce using rule 85 (NUMBER -> FLOAT .)
    TRUE            reduce using rule 85 (NUMBER -> FLOAT .)
    FALSE           reduce using rule 85 (NUMBER -> FLOAT .)
    $end            reduce using rule 85 (NUMBER -> FLOAT .)
    RPAREN          reduce using rule 85 (NUMBER -> FLOAT .)
    SEMI            reduce using rule 85 (NUMBER -> FLOAT .)
    RBRACE          reduce using rule 85 (NUMBER -> FLOAT .)


state 26

    (82) boolean -> TRUE .

    MINUSMINUS      reduce using rule 82 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 82 (boolean -> TRUE .)
    TIMES           reduce using rule 82 (boolean -> TRUE .)
    DIVIDE          reduce using rule 82 (boolean -> TRUE .)
    MENOR           reduce using rule 82 (boolean -> TRUE .)
    MENOREQUALS     reduce using rule 82 (boolean -> TRUE .)
    MAIOR           reduce using rule 82 (boolean -> TRUE .)
    MAIOREQUALS     reduce using rule 82 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 82 (boolean -> TRUE .)
    EQUALITY        reduce using rule 82 (boolean -> TRUE .)
    PLUS            reduce using rule 82 (boolean -> TRUE .)
    MINUS           reduce using rule 82 (boolean -> TRUE .)
    LOG             reduce using rule 82 (boolean -> TRUE .)
    OU_LOGICO       reduce using rule 82 (boolean -> TRUE .)
    TIMESX          reduce using rule 82 (boolean -> TRUE .)
    IDENTIFIER      reduce using rule 82 (boolean -> TRUE .)
    PRINT           reduce using rule 82 (boolean -> TRUE .)
    READ            reduce using rule 82 (boolean -> TRUE .)
    IF              reduce using rule 82 (boolean -> TRUE .)
    FOR             reduce using rule 82 (boolean -> TRUE .)
    WHILE           reduce using rule 82 (boolean -> TRUE .)
    DO              reduce using rule 82 (boolean -> TRUE .)
    LPAREN          reduce using rule 82 (boolean -> TRUE .)
    INTEGER         reduce using rule 82 (boolean -> TRUE .)
    FLOAT           reduce using rule 82 (boolean -> TRUE .)
    TRUE            reduce using rule 82 (boolean -> TRUE .)
    FALSE           reduce using rule 82 (boolean -> TRUE .)
    $end            reduce using rule 82 (boolean -> TRUE .)
    RPAREN          reduce using rule 82 (boolean -> TRUE .)
    SEMI            reduce using rule 82 (boolean -> TRUE .)
    RBRACE          reduce using rule 82 (boolean -> TRUE .)


state 27

    (83) boolean -> FALSE .

    MINUSMINUS      reduce using rule 83 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 83 (boolean -> FALSE .)
    TIMES           reduce using rule 83 (boolean -> FALSE .)
    DIVIDE          reduce using rule 83 (boolean -> FALSE .)
    MENOR           reduce using rule 83 (boolean -> FALSE .)
    MENOREQUALS     reduce using rule 83 (boolean -> FALSE .)
    MAIOR           reduce using rule 83 (boolean -> FALSE .)
    MAIOREQUALS     reduce using rule 83 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 83 (boolean -> FALSE .)
    EQUALITY        reduce using rule 83 (boolean -> FALSE .)
    PLUS            reduce using rule 83 (boolean -> FALSE .)
    MINUS           reduce using rule 83 (boolean -> FALSE .)
    LOG             reduce using rule 83 (boolean -> FALSE .)
    OU_LOGICO       reduce using rule 83 (boolean -> FALSE .)
    TIMESX          reduce using rule 83 (boolean -> FALSE .)
    IDENTIFIER      reduce using rule 83 (boolean -> FALSE .)
    PRINT           reduce using rule 83 (boolean -> FALSE .)
    READ            reduce using rule 83 (boolean -> FALSE .)
    IF              reduce using rule 83 (boolean -> FALSE .)
    FOR             reduce using rule 83 (boolean -> FALSE .)
    WHILE           reduce using rule 83 (boolean -> FALSE .)
    DO              reduce using rule 83 (boolean -> FALSE .)
    LPAREN          reduce using rule 83 (boolean -> FALSE .)
    INTEGER         reduce using rule 83 (boolean -> FALSE .)
    FLOAT           reduce using rule 83 (boolean -> FALSE .)
    TRUE            reduce using rule 83 (boolean -> FALSE .)
    FALSE           reduce using rule 83 (boolean -> FALSE .)
    $end            reduce using rule 83 (boolean -> FALSE .)
    RPAREN          reduce using rule 83 (boolean -> FALSE .)
    SEMI            reduce using rule 83 (boolean -> FALSE .)
    RBRACE          reduce using rule 83 (boolean -> FALSE .)


state 28

    (2) declaration_list -> declaration_list declaration .

    IDENTIFIER      reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    READ            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DO              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INTEGER         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    TRUE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FALSE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 29

    (57) expression -> expression LOG . expression
    (94) expression -> expression LOG . term
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 64
    term                           shift and go to state 65
    simple_expression              shift and go to state 13
    factor                         shift and go to state 23
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 30

    (58) expression -> expression OU_LOGICO . expression
    (95) expression -> expression OU_LOGICO . term
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 66
    term                           shift and go to state 67
    simple_expression              shift and go to state 13
    factor                         shift and go to state 23
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 31

    (89) expression -> expression PLUS . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 68
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 32

    (90) expression -> expression MINUS . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 70
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 33

    (91) expression -> expression TIMES . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 71
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 34

    (92) expression -> expression DIVIDE . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 72
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 35

    (93) expression -> expression TIMESX . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 73
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 36

    (22) var_declaration -> IDENTIFIER . var_declaration
    (23) var_declaration -> IDENTIFIER .
    (24) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER SEMI
    (26) var_declaration -> IDENTIFIER . ATRIBUTION boolean var_declaration
    (27) var_declaration -> IDENTIFIER . ATRIBUTION boolean SEMI
    (28) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER . ATRIBUTION simple_expression SEMI
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    PRINT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    READ            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    IF              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FOR             reduce using rule 23 (var_declaration -> IDENTIFIER .)
    WHILE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    DO              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    TRUE            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FALSE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    $end            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    RBRACE          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    SEMI            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    ATRIBUTION      shift and go to state 74
    IDENTIFIER      shift and go to state 36

  ! IDENTIFIER      [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]

    var_declaration                shift and go to state 37

state 37

    (22) var_declaration -> IDENTIFIER var_declaration .

    IDENTIFIER      reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    PRINT           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    READ            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    IF              reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FOR             reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    WHILE           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    DO              reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    LPAREN          reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    INTEGER         reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FLOAT           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    TRUE            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FALSE           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    $end            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    RBRACE          reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    SEMI            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)


state 38

    (24) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER SEMI
    (26) var_declaration -> IDENTIFIER ATRIBUTION . boolean var_declaration
    (27) var_declaration -> IDENTIFIER ATRIBUTION . boolean SEMI
    (28) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER ATRIBUTION . simple_expression SEMI
    (52) read_stmt -> IDENTIFIER ATRIBUTION . READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER ATRIBUTION . READ LPAREN RPAREN SEMI
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN

    IDENTIFIER      shift and go to state 75
    READ            shift and go to state 79
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    LPAREN          shift and go to state 15

    NUMBER                         shift and go to state 76
    boolean                        shift and go to state 77
    simple_expression              shift and go to state 78
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 39

    (81) factor -> IDENTIFIER LPAREN . args RPAREN
    (86) args -> . args_list
    (87) args -> . empty
    (88) args_list -> . expression
    (96) empty -> .
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    RPAREN          reduce using rule 96 (empty -> .)
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    args                           shift and go to state 80
    args_list                      shift and go to state 81
    empty                          shift and go to state 82
    expression                     shift and go to state 83
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 40

    (54) expression -> IDENTIFIER EQUALITY . expression
    (56) expression -> IDENTIFIER EQUALITY . IDENTIFIER
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 84
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 85
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 41

    (10) print_stmt -> PRINT LPAREN . STRING RPAREN SEMI declaration
    (11) print_stmt -> PRINT LPAREN . STRING RPAREN SEMI
    (12) print_stmt -> PRINT LPAREN . IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> PRINT LPAREN . IDENTIFIER RPAREN SEMI
    (14) print_stmt -> PRINT LPAREN . NUMBER RPAREN SEMI declaration
    (15) print_stmt -> PRINT LPAREN . NUMBER RPAREN SEMI
    (16) print_stmt -> PRINT LPAREN . boolean RPAREN SEMI declaration
    (17) print_stmt -> PRINT LPAREN . boolean RPAREN SEMI
    (18) print_stmt -> PRINT LPAREN . expression RPAREN SEMI declaration
    (19) print_stmt -> PRINT LPAREN . expression RPAREN SEMI
    (20) print_stmt -> PRINT LPAREN . RPAREN SEMI declaration
    (21) print_stmt -> PRINT LPAREN . RPAREN SEMI
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN

    STRING          shift and go to state 86
    IDENTIFIER      shift and go to state 88
    RPAREN          shift and go to state 87
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    LPAREN          shift and go to state 15

    NUMBER                         shift and go to state 89
    boolean                        shift and go to state 90
    expression                     shift and go to state 91
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23

state 42

    (77) factor -> LPAREN expression . RPAREN
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 92
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 43

    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    EQUALITY        shift and go to state 40
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 78 (factor -> IDENTIFIER .)
    PRINT           reduce using rule 78 (factor -> IDENTIFIER .)
    READ            reduce using rule 78 (factor -> IDENTIFIER .)
    IF              reduce using rule 78 (factor -> IDENTIFIER .)
    FOR             reduce using rule 78 (factor -> IDENTIFIER .)
    WHILE           reduce using rule 78 (factor -> IDENTIFIER .)
    DO              reduce using rule 78 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 78 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 78 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 78 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 78 (factor -> IDENTIFIER .)
    $end            reduce using rule 78 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 78 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 44

    (50) read_stmt -> READ LPAREN . STRING RPAREN SEMI declaration
    (51) read_stmt -> READ LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 93


state 45

    (37) selection_stmt -> IF LPAREN . expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN . expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN . expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> IF LPAREN . expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 94
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 46

    (41) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

    IDENTIFIER      shift and go to state 36

    var_declaration                shift and go to state 95

state 47

    (59) simple_expression -> additive_expression relop . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    additive_expression            shift and go to state 96
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 48

    (67) additive_expression -> additive_expression addop . term
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 97
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 49

    (61) relop -> MENOR .

    LPAREN          reduce using rule 61 (relop -> MENOR .)
    IDENTIFIER      reduce using rule 61 (relop -> MENOR .)
    INTEGER         reduce using rule 61 (relop -> MENOR .)
    FLOAT           reduce using rule 61 (relop -> MENOR .)
    TRUE            reduce using rule 61 (relop -> MENOR .)
    FALSE           reduce using rule 61 (relop -> MENOR .)


state 50

    (62) relop -> MENOREQUALS .

    LPAREN          reduce using rule 62 (relop -> MENOREQUALS .)
    IDENTIFIER      reduce using rule 62 (relop -> MENOREQUALS .)
    INTEGER         reduce using rule 62 (relop -> MENOREQUALS .)
    FLOAT           reduce using rule 62 (relop -> MENOREQUALS .)
    TRUE            reduce using rule 62 (relop -> MENOREQUALS .)
    FALSE           reduce using rule 62 (relop -> MENOREQUALS .)


state 51

    (63) relop -> MAIOR .

    LPAREN          reduce using rule 63 (relop -> MAIOR .)
    IDENTIFIER      reduce using rule 63 (relop -> MAIOR .)
    INTEGER         reduce using rule 63 (relop -> MAIOR .)
    FLOAT           reduce using rule 63 (relop -> MAIOR .)
    TRUE            reduce using rule 63 (relop -> MAIOR .)
    FALSE           reduce using rule 63 (relop -> MAIOR .)


state 52

    (64) relop -> MAIOREQUALS .

    LPAREN          reduce using rule 64 (relop -> MAIOREQUALS .)
    IDENTIFIER      reduce using rule 64 (relop -> MAIOREQUALS .)
    INTEGER         reduce using rule 64 (relop -> MAIOREQUALS .)
    FLOAT           reduce using rule 64 (relop -> MAIOREQUALS .)
    TRUE            reduce using rule 64 (relop -> MAIOREQUALS .)
    FALSE           reduce using rule 64 (relop -> MAIOREQUALS .)


state 53

    (65) relop -> DIFERENTE .

    LPAREN          reduce using rule 65 (relop -> DIFERENTE .)
    IDENTIFIER      reduce using rule 65 (relop -> DIFERENTE .)
    INTEGER         reduce using rule 65 (relop -> DIFERENTE .)
    FLOAT           reduce using rule 65 (relop -> DIFERENTE .)
    TRUE            reduce using rule 65 (relop -> DIFERENTE .)
    FALSE           reduce using rule 65 (relop -> DIFERENTE .)


state 54

    (66) relop -> EQUALITY .

    LPAREN          reduce using rule 66 (relop -> EQUALITY .)
    IDENTIFIER      reduce using rule 66 (relop -> EQUALITY .)
    INTEGER         reduce using rule 66 (relop -> EQUALITY .)
    FLOAT           reduce using rule 66 (relop -> EQUALITY .)
    TRUE            reduce using rule 66 (relop -> EQUALITY .)
    FALSE           reduce using rule 66 (relop -> EQUALITY .)


state 55

    (71) addop -> PLUS .

    LPAREN          reduce using rule 71 (addop -> PLUS .)
    IDENTIFIER      reduce using rule 71 (addop -> PLUS .)
    INTEGER         reduce using rule 71 (addop -> PLUS .)
    FLOAT           reduce using rule 71 (addop -> PLUS .)
    TRUE            reduce using rule 71 (addop -> PLUS .)
    FALSE           reduce using rule 71 (addop -> PLUS .)


state 56

    (72) addop -> MINUS .

    LPAREN          reduce using rule 72 (addop -> MINUS .)
    IDENTIFIER      reduce using rule 72 (addop -> MINUS .)
    INTEGER         reduce using rule 72 (addop -> MINUS .)
    FLOAT           reduce using rule 72 (addop -> MINUS .)
    TRUE            reduce using rule 72 (addop -> MINUS .)
    FALSE           reduce using rule 72 (addop -> MINUS .)


state 57

    (43) iteration_stmt -> WHILE LPAREN . expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN . expression RPAREN LBRACE statement RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 98
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 58

    (45) iteration_stmt -> DO LBRACE . statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> DO LBRACE . print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> DO LBRACE . read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> DO LBRACE . selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE . selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (36) expression_stmt -> . expression
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    statement                      shift and go to state 99
    expression                     shift and go to state 100
    print_stmt                     shift and go to state 101
    read_stmt                      shift and go to state 102
    selection_stmt                 shift and go to state 103
    expression_stmt                shift and go to state 104
    iteration_stmt                 shift and go to state 105
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    additive_expression            shift and go to state 19
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 59

    (69) additive_expression -> term MINUSMINUS .

    MENOR           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    MENOREQUALS     reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    MAIOR           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    MAIOREQUALS     reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    DIFERENTE       reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    EQUALITY        reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    LOG             reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    OU_LOGICO       reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    TIMES           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    DIVIDE          reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    TIMESX          reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    IDENTIFIER      reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    PRINT           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    READ            reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    IF              reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    FOR             reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    WHILE           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    DO              reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    LPAREN          reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    INTEGER         reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    FLOAT           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    TRUE            reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    FALSE           reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    $end            reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 69 (additive_expression -> term MINUSMINUS .)
    RBRACE          reduce using rule 69 (additive_expression -> term MINUSMINUS .)


state 60

    (70) additive_expression -> term PLUSPLUS .

    MENOR           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    MENOREQUALS     reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    MAIOR           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    MAIOREQUALS     reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    DIFERENTE       reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    EQUALITY        reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    LOG             reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    OU_LOGICO       reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    TIMES           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    DIVIDE          reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    TIMESX          reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    IDENTIFIER      reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    PRINT           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    READ            reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    IF              reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    FOR             reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    WHILE           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    DO              reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    LPAREN          reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    INTEGER         reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    FLOAT           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    TRUE            reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    FALSE           reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    $end            reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 70 (additive_expression -> term PLUSPLUS .)
    RBRACE          reduce using rule 70 (additive_expression -> term PLUSPLUS .)


state 61

    (73) term -> term mulop . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    factor                         shift and go to state 107
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 62

    (75) mulop -> TIMES .

    LPAREN          reduce using rule 75 (mulop -> TIMES .)
    IDENTIFIER      reduce using rule 75 (mulop -> TIMES .)
    INTEGER         reduce using rule 75 (mulop -> TIMES .)
    FLOAT           reduce using rule 75 (mulop -> TIMES .)
    TRUE            reduce using rule 75 (mulop -> TIMES .)
    FALSE           reduce using rule 75 (mulop -> TIMES .)


state 63

    (76) mulop -> DIVIDE .

    LPAREN          reduce using rule 76 (mulop -> DIVIDE .)
    IDENTIFIER      reduce using rule 76 (mulop -> DIVIDE .)
    INTEGER         reduce using rule 76 (mulop -> DIVIDE .)
    FLOAT           reduce using rule 76 (mulop -> DIVIDE .)
    TRUE            reduce using rule 76 (mulop -> DIVIDE .)
    FALSE           reduce using rule 76 (mulop -> DIVIDE .)


state 64

    (57) expression -> expression LOG expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 57 (expression -> expression LOG expression .)
    OU_LOGICO       reduce using rule 57 (expression -> expression LOG expression .)
    TIMESX          reduce using rule 57 (expression -> expression LOG expression .)
    IDENTIFIER      reduce using rule 57 (expression -> expression LOG expression .)
    PRINT           reduce using rule 57 (expression -> expression LOG expression .)
    READ            reduce using rule 57 (expression -> expression LOG expression .)
    IF              reduce using rule 57 (expression -> expression LOG expression .)
    FOR             reduce using rule 57 (expression -> expression LOG expression .)
    WHILE           reduce using rule 57 (expression -> expression LOG expression .)
    DO              reduce using rule 57 (expression -> expression LOG expression .)
    LPAREN          reduce using rule 57 (expression -> expression LOG expression .)
    INTEGER         reduce using rule 57 (expression -> expression LOG expression .)
    FLOAT           reduce using rule 57 (expression -> expression LOG expression .)
    TRUE            reduce using rule 57 (expression -> expression LOG expression .)
    FALSE           reduce using rule 57 (expression -> expression LOG expression .)
    $end            reduce using rule 57 (expression -> expression LOG expression .)
    RPAREN          reduce using rule 57 (expression -> expression LOG expression .)
    SEMI            reduce using rule 57 (expression -> expression LOG expression .)
    RBRACE          reduce using rule 57 (expression -> expression LOG expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 57 (expression -> expression LOG expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression LOG expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression LOG expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression LOG expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 65

    (94) expression -> expression LOG term .
    (73) term -> term . mulop factor
    (68) additive_expression -> term .
    (69) additive_expression -> term . MINUSMINUS
    (70) additive_expression -> term . PLUSPLUS
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

  ! reduce/reduce conflict for PLUS resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for LOG resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMES resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMESX resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for PRINT resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for READ resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for IF resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FOR resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for WHILE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for DO resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for INTEGER resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FLOAT resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TRUE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FALSE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for $end resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for SEMI resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for RBRACE resolved using rule 68 (additive_expression -> term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 68 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 68 (additive_expression -> term .)
    MAIOR           reduce using rule 68 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 68 (additive_expression -> term .)
    DIFERENTE       reduce using rule 68 (additive_expression -> term .)
    EQUALITY        reduce using rule 68 (additive_expression -> term .)
    PLUS            reduce using rule 68 (additive_expression -> term .)
    MINUS           reduce using rule 68 (additive_expression -> term .)
    LOG             reduce using rule 68 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 68 (additive_expression -> term .)
    TIMESX          reduce using rule 68 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 68 (additive_expression -> term .)
    PRINT           reduce using rule 68 (additive_expression -> term .)
    READ            reduce using rule 68 (additive_expression -> term .)
    IF              reduce using rule 68 (additive_expression -> term .)
    FOR             reduce using rule 68 (additive_expression -> term .)
    WHILE           reduce using rule 68 (additive_expression -> term .)
    DO              reduce using rule 68 (additive_expression -> term .)
    LPAREN          reduce using rule 68 (additive_expression -> term .)
    INTEGER         reduce using rule 68 (additive_expression -> term .)
    FLOAT           reduce using rule 68 (additive_expression -> term .)
    TRUE            reduce using rule 68 (additive_expression -> term .)
    FALSE           reduce using rule 68 (additive_expression -> term .)
    $end            reduce using rule 68 (additive_expression -> term .)
    RPAREN          reduce using rule 68 (additive_expression -> term .)
    SEMI            reduce using rule 68 (additive_expression -> term .)
    RBRACE          reduce using rule 68 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! LOG             [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! OU_LOGICO       [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! PLUS            [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! MINUS           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! TIMES           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! DIVIDE          [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! TIMESX          [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! IDENTIFIER      [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! PRINT           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! READ            [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! IF              [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! FOR             [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! WHILE           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! DO              [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! LPAREN          [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! INTEGER         [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! FLOAT           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! TRUE            [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! FALSE           [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! $end            [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! RPAREN          [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! SEMI            [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! RBRACE          [ reduce using rule 94 (expression -> expression LOG term .) ]
  ! TIMES           [ reduce using rule 68 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 68 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 66

    (58) expression -> expression OU_LOGICO expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    OU_LOGICO       reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    TIMESX          reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    IDENTIFIER      reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    PRINT           reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    READ            reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    IF              reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    FOR             reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    WHILE           reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    DO              reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    LPAREN          reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    INTEGER         reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    FLOAT           reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    TRUE            reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    FALSE           reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    $end            reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    RPAREN          reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    SEMI            reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    RBRACE          reduce using rule 58 (expression -> expression OU_LOGICO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 58 (expression -> expression OU_LOGICO expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression OU_LOGICO expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression OU_LOGICO expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression OU_LOGICO expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 67

    (95) expression -> expression OU_LOGICO term .
    (73) term -> term . mulop factor
    (68) additive_expression -> term .
    (69) additive_expression -> term . MINUSMINUS
    (70) additive_expression -> term . PLUSPLUS
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

  ! reduce/reduce conflict for PLUS resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for LOG resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMES resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMESX resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for PRINT resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for READ resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for IF resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FOR resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for WHILE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for DO resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for INTEGER resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FLOAT resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for TRUE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for FALSE resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for $end resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for SEMI resolved using rule 68 (additive_expression -> term .)
  ! reduce/reduce conflict for RBRACE resolved using rule 68 (additive_expression -> term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 68 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 68 (additive_expression -> term .)
    MAIOR           reduce using rule 68 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 68 (additive_expression -> term .)
    DIFERENTE       reduce using rule 68 (additive_expression -> term .)
    EQUALITY        reduce using rule 68 (additive_expression -> term .)
    PLUS            reduce using rule 68 (additive_expression -> term .)
    MINUS           reduce using rule 68 (additive_expression -> term .)
    LOG             reduce using rule 68 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 68 (additive_expression -> term .)
    TIMESX          reduce using rule 68 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 68 (additive_expression -> term .)
    PRINT           reduce using rule 68 (additive_expression -> term .)
    READ            reduce using rule 68 (additive_expression -> term .)
    IF              reduce using rule 68 (additive_expression -> term .)
    FOR             reduce using rule 68 (additive_expression -> term .)
    WHILE           reduce using rule 68 (additive_expression -> term .)
    DO              reduce using rule 68 (additive_expression -> term .)
    LPAREN          reduce using rule 68 (additive_expression -> term .)
    INTEGER         reduce using rule 68 (additive_expression -> term .)
    FLOAT           reduce using rule 68 (additive_expression -> term .)
    TRUE            reduce using rule 68 (additive_expression -> term .)
    FALSE           reduce using rule 68 (additive_expression -> term .)
    $end            reduce using rule 68 (additive_expression -> term .)
    RPAREN          reduce using rule 68 (additive_expression -> term .)
    SEMI            reduce using rule 68 (additive_expression -> term .)
    RBRACE          reduce using rule 68 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! LOG             [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! OU_LOGICO       [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! PLUS            [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! MINUS           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! TIMES           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! DIVIDE          [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! TIMESX          [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! IDENTIFIER      [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! PRINT           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! READ            [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! IF              [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! FOR             [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! WHILE           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! DO              [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! LPAREN          [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! INTEGER         [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! FLOAT           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! TRUE            [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! FALSE           [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! $end            [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! RPAREN          [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! SEMI            [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! RBRACE          [ reduce using rule 95 (expression -> expression OU_LOGICO term .) ]
  ! TIMES           [ reduce using rule 68 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 68 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 68

    (89) expression -> expression PLUS term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

    LOG             reduce using rule 89 (expression -> expression PLUS term .)
    OU_LOGICO       reduce using rule 89 (expression -> expression PLUS term .)
    PLUS            reduce using rule 89 (expression -> expression PLUS term .)
    MINUS           reduce using rule 89 (expression -> expression PLUS term .)
    TIMESX          reduce using rule 89 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 89 (expression -> expression PLUS term .)
    PRINT           reduce using rule 89 (expression -> expression PLUS term .)
    READ            reduce using rule 89 (expression -> expression PLUS term .)
    IF              reduce using rule 89 (expression -> expression PLUS term .)
    FOR             reduce using rule 89 (expression -> expression PLUS term .)
    WHILE           reduce using rule 89 (expression -> expression PLUS term .)
    DO              reduce using rule 89 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 89 (expression -> expression PLUS term .)
    INTEGER         reduce using rule 89 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 89 (expression -> expression PLUS term .)
    TRUE            reduce using rule 89 (expression -> expression PLUS term .)
    FALSE           reduce using rule 89 (expression -> expression PLUS term .)
    $end            reduce using rule 89 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 89 (expression -> expression PLUS term .)
    SEMI            reduce using rule 89 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 89 (expression -> expression PLUS term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 89 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression PLUS term .) ]

    mulop                          shift and go to state 61

state 69

    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 78 (factor -> IDENTIFIER .)
    PRINT           reduce using rule 78 (factor -> IDENTIFIER .)
    READ            reduce using rule 78 (factor -> IDENTIFIER .)
    IF              reduce using rule 78 (factor -> IDENTIFIER .)
    FOR             reduce using rule 78 (factor -> IDENTIFIER .)
    WHILE           reduce using rule 78 (factor -> IDENTIFIER .)
    DO              reduce using rule 78 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 78 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 78 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 78 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 78 (factor -> IDENTIFIER .)
    $end            reduce using rule 78 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 78 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 78 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 78 (factor -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    EQUALITY        reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! LPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 70

    (90) expression -> expression MINUS term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

    LOG             reduce using rule 90 (expression -> expression MINUS term .)
    OU_LOGICO       reduce using rule 90 (expression -> expression MINUS term .)
    PLUS            reduce using rule 90 (expression -> expression MINUS term .)
    MINUS           reduce using rule 90 (expression -> expression MINUS term .)
    TIMESX          reduce using rule 90 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 90 (expression -> expression MINUS term .)
    PRINT           reduce using rule 90 (expression -> expression MINUS term .)
    READ            reduce using rule 90 (expression -> expression MINUS term .)
    IF              reduce using rule 90 (expression -> expression MINUS term .)
    FOR             reduce using rule 90 (expression -> expression MINUS term .)
    WHILE           reduce using rule 90 (expression -> expression MINUS term .)
    DO              reduce using rule 90 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 90 (expression -> expression MINUS term .)
    INTEGER         reduce using rule 90 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 90 (expression -> expression MINUS term .)
    TRUE            reduce using rule 90 (expression -> expression MINUS term .)
    FALSE           reduce using rule 90 (expression -> expression MINUS term .)
    $end            reduce using rule 90 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 90 (expression -> expression MINUS term .)
    SEMI            reduce using rule 90 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 90 (expression -> expression MINUS term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 90 (expression -> expression MINUS term .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression MINUS term .) ]

    mulop                          shift and go to state 61

state 71

    (91) expression -> expression TIMES term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

    LOG             reduce using rule 91 (expression -> expression TIMES term .)
    OU_LOGICO       reduce using rule 91 (expression -> expression TIMES term .)
    PLUS            reduce using rule 91 (expression -> expression TIMES term .)
    MINUS           reduce using rule 91 (expression -> expression TIMES term .)
    TIMES           reduce using rule 91 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 91 (expression -> expression TIMES term .)
    TIMESX          reduce using rule 91 (expression -> expression TIMES term .)
    IDENTIFIER      reduce using rule 91 (expression -> expression TIMES term .)
    PRINT           reduce using rule 91 (expression -> expression TIMES term .)
    READ            reduce using rule 91 (expression -> expression TIMES term .)
    IF              reduce using rule 91 (expression -> expression TIMES term .)
    FOR             reduce using rule 91 (expression -> expression TIMES term .)
    WHILE           reduce using rule 91 (expression -> expression TIMES term .)
    DO              reduce using rule 91 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 91 (expression -> expression TIMES term .)
    INTEGER         reduce using rule 91 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 91 (expression -> expression TIMES term .)
    TRUE            reduce using rule 91 (expression -> expression TIMES term .)
    FALSE           reduce using rule 91 (expression -> expression TIMES term .)
    $end            reduce using rule 91 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 91 (expression -> expression TIMES term .)
    SEMI            reduce using rule 91 (expression -> expression TIMES term .)
    RBRACE          reduce using rule 91 (expression -> expression TIMES term .)

  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]

    mulop                          shift and go to state 61

state 72

    (92) expression -> expression DIVIDE term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

    LOG             reduce using rule 92 (expression -> expression DIVIDE term .)
    OU_LOGICO       reduce using rule 92 (expression -> expression DIVIDE term .)
    PLUS            reduce using rule 92 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 92 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 92 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 92 (expression -> expression DIVIDE term .)
    TIMESX          reduce using rule 92 (expression -> expression DIVIDE term .)
    IDENTIFIER      reduce using rule 92 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 92 (expression -> expression DIVIDE term .)
    READ            reduce using rule 92 (expression -> expression DIVIDE term .)
    IF              reduce using rule 92 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 92 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 92 (expression -> expression DIVIDE term .)
    DO              reduce using rule 92 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 92 (expression -> expression DIVIDE term .)
    INTEGER         reduce using rule 92 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 92 (expression -> expression DIVIDE term .)
    TRUE            reduce using rule 92 (expression -> expression DIVIDE term .)
    FALSE           reduce using rule 92 (expression -> expression DIVIDE term .)
    $end            reduce using rule 92 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 92 (expression -> expression DIVIDE term .)
    SEMI            reduce using rule 92 (expression -> expression DIVIDE term .)
    RBRACE          reduce using rule 92 (expression -> expression DIVIDE term .)

  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]

    mulop                          shift and go to state 61

state 73

    (93) expression -> expression TIMESX term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LOG             reduce using rule 93 (expression -> expression TIMESX term .)
    OU_LOGICO       reduce using rule 93 (expression -> expression TIMESX term .)
    PLUS            reduce using rule 93 (expression -> expression TIMESX term .)
    MINUS           reduce using rule 93 (expression -> expression TIMESX term .)
    TIMESX          reduce using rule 93 (expression -> expression TIMESX term .)
    IDENTIFIER      reduce using rule 93 (expression -> expression TIMESX term .)
    PRINT           reduce using rule 93 (expression -> expression TIMESX term .)
    READ            reduce using rule 93 (expression -> expression TIMESX term .)
    IF              reduce using rule 93 (expression -> expression TIMESX term .)
    FOR             reduce using rule 93 (expression -> expression TIMESX term .)
    WHILE           reduce using rule 93 (expression -> expression TIMESX term .)
    DO              reduce using rule 93 (expression -> expression TIMESX term .)
    LPAREN          reduce using rule 93 (expression -> expression TIMESX term .)
    INTEGER         reduce using rule 93 (expression -> expression TIMESX term .)
    FLOAT           reduce using rule 93 (expression -> expression TIMESX term .)
    TRUE            reduce using rule 93 (expression -> expression TIMESX term .)
    FALSE           reduce using rule 93 (expression -> expression TIMESX term .)
    $end            reduce using rule 93 (expression -> expression TIMESX term .)
    RPAREN          reduce using rule 93 (expression -> expression TIMESX term .)
    SEMI            reduce using rule 93 (expression -> expression TIMESX term .)
    RBRACE          reduce using rule 93 (expression -> expression TIMESX term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 93 (expression -> expression TIMESX term .) ]
  ! DIVIDE          [ reduce using rule 93 (expression -> expression TIMESX term .) ]

    mulop                          shift and go to state 61

state 74

    (24) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER SEMI
    (26) var_declaration -> IDENTIFIER ATRIBUTION . boolean var_declaration
    (27) var_declaration -> IDENTIFIER ATRIBUTION . boolean SEMI
    (28) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER ATRIBUTION . simple_expression SEMI
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN

    IDENTIFIER      shift and go to state 75
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    LPAREN          shift and go to state 15

    NUMBER                         shift and go to state 76
    boolean                        shift and go to state 77
    simple_expression              shift and go to state 78
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 75

    (28) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER . var_declaration
    (29) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER . SEMI
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 109
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    EQUALITY        reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 78 (factor -> IDENTIFIER .) ]

    var_declaration                shift and go to state 108

state 76

    (24) var_declaration -> IDENTIFIER ATRIBUTION NUMBER . var_declaration
    (25) var_declaration -> IDENTIFIER ATRIBUTION NUMBER . SEMI
    (79) factor -> NUMBER .
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 111
    MINUSMINUS      reduce using rule 79 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 79 (factor -> NUMBER .)
    TIMES           reduce using rule 79 (factor -> NUMBER .)
    DIVIDE          reduce using rule 79 (factor -> NUMBER .)
    MENOR           reduce using rule 79 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    MAIOR           reduce using rule 79 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 79 (factor -> NUMBER .)
    EQUALITY        reduce using rule 79 (factor -> NUMBER .)
    PLUS            reduce using rule 79 (factor -> NUMBER .)
    MINUS           reduce using rule 79 (factor -> NUMBER .)
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 79 (factor -> NUMBER .) ]

    var_declaration                shift and go to state 110

state 77

    (26) var_declaration -> IDENTIFIER ATRIBUTION boolean . var_declaration
    (27) var_declaration -> IDENTIFIER ATRIBUTION boolean . SEMI
    (80) factor -> boolean .
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 113
    MINUSMINUS      reduce using rule 80 (factor -> boolean .)
    PLUSPLUS        reduce using rule 80 (factor -> boolean .)
    TIMES           reduce using rule 80 (factor -> boolean .)
    DIVIDE          reduce using rule 80 (factor -> boolean .)
    MENOR           reduce using rule 80 (factor -> boolean .)
    MENOREQUALS     reduce using rule 80 (factor -> boolean .)
    MAIOR           reduce using rule 80 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 80 (factor -> boolean .)
    DIFERENTE       reduce using rule 80 (factor -> boolean .)
    EQUALITY        reduce using rule 80 (factor -> boolean .)
    PLUS            reduce using rule 80 (factor -> boolean .)
    MINUS           reduce using rule 80 (factor -> boolean .)
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 80 (factor -> boolean .) ]

    var_declaration                shift and go to state 112

state 78

    (30) var_declaration -> IDENTIFIER ATRIBUTION simple_expression . SEMI

    SEMI            shift and go to state 114


state 79

    (52) read_stmt -> IDENTIFIER ATRIBUTION READ . LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER ATRIBUTION READ . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 115


state 80

    (81) factor -> IDENTIFIER LPAREN args . RPAREN

    RPAREN          shift and go to state 116


state 81

    (86) args -> args_list .

    RPAREN          reduce using rule 86 (args -> args_list .)


state 82

    (87) args -> empty .

    RPAREN          reduce using rule 87 (args -> empty .)


state 83

    (88) args_list -> expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          reduce using rule 88 (args_list -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 84

    (56) expression -> IDENTIFIER EQUALITY IDENTIFIER .
    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! reduce/reduce conflict for TIMES resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! shift/reduce conflict for EQUALITY resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for LOG resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for TIMESX resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for READ resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for IF resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for DO resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for TRUE resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FALSE resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for SEMI resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! shift/reduce conflict for LPAREN resolved as shift
    LOG             reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    OU_LOGICO       reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    PLUS            reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    MINUS           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TIMES           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    DIVIDE          reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TIMESX          reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    IDENTIFIER      reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    PRINT           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    READ            reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    IF              reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FOR             reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    WHILE           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    DO              reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    INTEGER         reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FLOAT           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TRUE            reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FALSE           reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    $end            reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    RPAREN          reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    SEMI            reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    RBRACE          reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    EQUALITY        shift and go to state 40
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! LPAREN          [ reduce using rule 56 (expression -> IDENTIFIER EQUALITY IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! LOG             [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! OU_LOGICO       [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! TIMESX          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! IDENTIFIER      [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! PRINT           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! READ            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! IF              [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FOR             [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! WHILE           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! DO              [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! INTEGER         [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FLOAT           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! TRUE            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! FALSE           [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! SEMI            [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 85

    (54) expression -> IDENTIFIER EQUALITY expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    OU_LOGICO       reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    TIMESX          reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    IDENTIFIER      reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    PRINT           reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    READ            reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    IF              reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    FOR             reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    WHILE           reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    DO              reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    LPAREN          reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    INTEGER         reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    FLOAT           reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    TRUE            reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    FALSE           reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    $end            reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    RPAREN          reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    SEMI            reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    RBRACE          reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 86

    (10) print_stmt -> PRINT LPAREN STRING . RPAREN SEMI declaration
    (11) print_stmt -> PRINT LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 117


state 87

    (20) print_stmt -> PRINT LPAREN RPAREN . SEMI declaration
    (21) print_stmt -> PRINT LPAREN RPAREN . SEMI

    SEMI            shift and go to state 118


state 88

    (12) print_stmt -> PRINT LPAREN IDENTIFIER . RPAREN SEMI declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER . RPAREN SEMI
    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 119
    EQUALITY        shift and go to state 40
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 89

    (14) print_stmt -> PRINT LPAREN NUMBER . RPAREN SEMI declaration
    (15) print_stmt -> PRINT LPAREN NUMBER . RPAREN SEMI
    (79) factor -> NUMBER .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 120
    MINUSMINUS      reduce using rule 79 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 79 (factor -> NUMBER .)
    TIMES           reduce using rule 79 (factor -> NUMBER .)
    DIVIDE          reduce using rule 79 (factor -> NUMBER .)
    MENOR           reduce using rule 79 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    MAIOR           reduce using rule 79 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 79 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 79 (factor -> NUMBER .)
    EQUALITY        reduce using rule 79 (factor -> NUMBER .)
    PLUS            reduce using rule 79 (factor -> NUMBER .)
    MINUS           reduce using rule 79 (factor -> NUMBER .)
    LOG             reduce using rule 79 (factor -> NUMBER .)
    OU_LOGICO       reduce using rule 79 (factor -> NUMBER .)
    TIMESX          reduce using rule 79 (factor -> NUMBER .)

  ! RPAREN          [ reduce using rule 79 (factor -> NUMBER .) ]


state 90

    (16) print_stmt -> PRINT LPAREN boolean . RPAREN SEMI declaration
    (17) print_stmt -> PRINT LPAREN boolean . RPAREN SEMI
    (80) factor -> boolean .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 121
    MINUSMINUS      reduce using rule 80 (factor -> boolean .)
    PLUSPLUS        reduce using rule 80 (factor -> boolean .)
    TIMES           reduce using rule 80 (factor -> boolean .)
    DIVIDE          reduce using rule 80 (factor -> boolean .)
    MENOR           reduce using rule 80 (factor -> boolean .)
    MENOREQUALS     reduce using rule 80 (factor -> boolean .)
    MAIOR           reduce using rule 80 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 80 (factor -> boolean .)
    DIFERENTE       reduce using rule 80 (factor -> boolean .)
    EQUALITY        reduce using rule 80 (factor -> boolean .)
    PLUS            reduce using rule 80 (factor -> boolean .)
    MINUS           reduce using rule 80 (factor -> boolean .)
    LOG             reduce using rule 80 (factor -> boolean .)
    OU_LOGICO       reduce using rule 80 (factor -> boolean .)
    TIMESX          reduce using rule 80 (factor -> boolean .)

  ! RPAREN          [ reduce using rule 80 (factor -> boolean .) ]


state 91

    (18) print_stmt -> PRINT LPAREN expression . RPAREN SEMI declaration
    (19) print_stmt -> PRINT LPAREN expression . RPAREN SEMI
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 122
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 92

    (77) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MENOR           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MENOREQUALS     reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MAIOR           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MAIOREQUALS     reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DIFERENTE       reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    LOG             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    OU_LOGICO       reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TIMESX          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    READ            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 77 (factor -> LPAREN expression RPAREN .)


state 93

    (50) read_stmt -> READ LPAREN STRING . RPAREN SEMI declaration
    (51) read_stmt -> READ LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 123


state 94

    (37) selection_stmt -> IF LPAREN expression . RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression . RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression . RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> IF LPAREN expression . RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 124
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 95

    (41) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 125
    additive_expression            shift and go to state 19
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 96

    (59) simple_expression -> additive_expression relop additive_expression .
    (67) additive_expression -> additive_expression . addop term
    (71) addop -> . PLUS
    (72) addop -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOG             reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    OU_LOGICO       reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    TIMES           reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    DIVIDE          reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    TIMESX          reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    IDENTIFIER      reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    PRINT           reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    READ            reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    IF              reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    FOR             reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    WHILE           reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    DO              reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    LPAREN          reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    INTEGER         reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    FLOAT           reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    TRUE            reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    FALSE           reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    $end            reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    SEMI            reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    RBRACE          reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

  ! PLUS            [ reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .) ]
  ! MINUS           [ reduce using rule 59 (simple_expression -> additive_expression relop additive_expression .) ]

    addop                          shift and go to state 48

state 97

    (67) additive_expression -> additive_expression addop term .
    (73) term -> term . mulop factor
    (75) mulop -> . TIMES
    (76) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    MENOREQUALS     reduce using rule 67 (additive_expression -> additive_expression addop term .)
    MAIOR           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    MAIOREQUALS     reduce using rule 67 (additive_expression -> additive_expression addop term .)
    DIFERENTE       reduce using rule 67 (additive_expression -> additive_expression addop term .)
    EQUALITY        reduce using rule 67 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 67 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    LOG             reduce using rule 67 (additive_expression -> additive_expression addop term .)
    OU_LOGICO       reduce using rule 67 (additive_expression -> additive_expression addop term .)
    TIMESX          reduce using rule 67 (additive_expression -> additive_expression addop term .)
    IDENTIFIER      reduce using rule 67 (additive_expression -> additive_expression addop term .)
    PRINT           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    READ            reduce using rule 67 (additive_expression -> additive_expression addop term .)
    IF              reduce using rule 67 (additive_expression -> additive_expression addop term .)
    FOR             reduce using rule 67 (additive_expression -> additive_expression addop term .)
    WHILE           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    DO              reduce using rule 67 (additive_expression -> additive_expression addop term .)
    LPAREN          reduce using rule 67 (additive_expression -> additive_expression addop term .)
    INTEGER         reduce using rule 67 (additive_expression -> additive_expression addop term .)
    FLOAT           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    TRUE            reduce using rule 67 (additive_expression -> additive_expression addop term .)
    FALSE           reduce using rule 67 (additive_expression -> additive_expression addop term .)
    $end            reduce using rule 67 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 67 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 67 (additive_expression -> additive_expression addop term .)
    RBRACE          reduce using rule 67 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 67 (additive_expression -> additive_expression addop term .) ]
  ! DIVIDE          [ reduce using rule 67 (additive_expression -> additive_expression addop term .) ]

    mulop                          shift and go to state 61

state 98

    (43) iteration_stmt -> WHILE LPAREN expression . RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression . RPAREN LBRACE statement RBRACE
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 126
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 99

    (45) iteration_stmt -> DO LBRACE statement . SEMI RBRACE WHILE LPAREN expression RPAREN SEMI

    SEMI            shift and go to state 127


state 100

    (36) expression_stmt -> expression .
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    SEMI            reduce using rule 36 (expression_stmt -> expression .)
    IDENTIFIER      reduce using rule 36 (expression_stmt -> expression .)
    PRINT           reduce using rule 36 (expression_stmt -> expression .)
    READ            reduce using rule 36 (expression_stmt -> expression .)
    IF              reduce using rule 36 (expression_stmt -> expression .)
    FOR             reduce using rule 36 (expression_stmt -> expression .)
    WHILE           reduce using rule 36 (expression_stmt -> expression .)
    DO              reduce using rule 36 (expression_stmt -> expression .)
    LPAREN          reduce using rule 36 (expression_stmt -> expression .)
    INTEGER         reduce using rule 36 (expression_stmt -> expression .)
    FLOAT           reduce using rule 36 (expression_stmt -> expression .)
    TRUE            reduce using rule 36 (expression_stmt -> expression .)
    FALSE           reduce using rule 36 (expression_stmt -> expression .)
    $end            reduce using rule 36 (expression_stmt -> expression .)
    RBRACE          reduce using rule 36 (expression_stmt -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 101

    (46) iteration_stmt -> DO LBRACE print_stmt . RBRACE WHILE LPAREN expression RPAREN SEMI
    (34) statement -> print_stmt .

    RBRACE          shift and go to state 128
    SEMI            reduce using rule 34 (statement -> print_stmt .)


state 102

    (47) iteration_stmt -> DO LBRACE read_stmt . RBRACE WHILE LPAREN expression RPAREN SEMI
    (35) statement -> read_stmt .

    RBRACE          shift and go to state 129
    SEMI            reduce using rule 35 (statement -> read_stmt .)


state 103

    (48) iteration_stmt -> DO LBRACE selection_stmt . RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt . RBRACE WHILE LPAREN expression RPAREN SEMI
    (32) statement -> selection_stmt .

    RBRACE          shift and go to state 130
    SEMI            reduce using rule 32 (statement -> selection_stmt .)


state 104

    (31) statement -> expression_stmt .

    SEMI            reduce using rule 31 (statement -> expression_stmt .)
    RBRACE          reduce using rule 31 (statement -> expression_stmt .)
    IDENTIFIER      reduce using rule 31 (statement -> expression_stmt .)
    PRINT           reduce using rule 31 (statement -> expression_stmt .)
    READ            reduce using rule 31 (statement -> expression_stmt .)
    IF              reduce using rule 31 (statement -> expression_stmt .)
    FOR             reduce using rule 31 (statement -> expression_stmt .)
    WHILE           reduce using rule 31 (statement -> expression_stmt .)
    DO              reduce using rule 31 (statement -> expression_stmt .)
    LPAREN          reduce using rule 31 (statement -> expression_stmt .)
    INTEGER         reduce using rule 31 (statement -> expression_stmt .)
    FLOAT           reduce using rule 31 (statement -> expression_stmt .)
    TRUE            reduce using rule 31 (statement -> expression_stmt .)
    FALSE           reduce using rule 31 (statement -> expression_stmt .)
    $end            reduce using rule 31 (statement -> expression_stmt .)


state 105

    (33) statement -> iteration_stmt .

    SEMI            reduce using rule 33 (statement -> iteration_stmt .)
    RBRACE          reduce using rule 33 (statement -> iteration_stmt .)
    IDENTIFIER      reduce using rule 33 (statement -> iteration_stmt .)
    PRINT           reduce using rule 33 (statement -> iteration_stmt .)
    READ            reduce using rule 33 (statement -> iteration_stmt .)
    IF              reduce using rule 33 (statement -> iteration_stmt .)
    FOR             reduce using rule 33 (statement -> iteration_stmt .)
    WHILE           reduce using rule 33 (statement -> iteration_stmt .)
    DO              reduce using rule 33 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 33 (statement -> iteration_stmt .)
    INTEGER         reduce using rule 33 (statement -> iteration_stmt .)
    FLOAT           reduce using rule 33 (statement -> iteration_stmt .)
    TRUE            reduce using rule 33 (statement -> iteration_stmt .)
    FALSE           reduce using rule 33 (statement -> iteration_stmt .)
    $end            reduce using rule 33 (statement -> iteration_stmt .)


state 106

    (52) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    ATRIBUTION      shift and go to state 131
    EQUALITY        shift and go to state 40
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 78 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 78 (factor -> IDENTIFIER .)
    PRINT           reduce using rule 78 (factor -> IDENTIFIER .)
    READ            reduce using rule 78 (factor -> IDENTIFIER .)
    IF              reduce using rule 78 (factor -> IDENTIFIER .)
    FOR             reduce using rule 78 (factor -> IDENTIFIER .)
    WHILE           reduce using rule 78 (factor -> IDENTIFIER .)
    DO              reduce using rule 78 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 78 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 78 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 78 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 78 (factor -> IDENTIFIER .)
    $end            reduce using rule 78 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 107

    (73) term -> term mulop factor .

    MINUSMINUS      reduce using rule 73 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 73 (term -> term mulop factor .)
    TIMES           reduce using rule 73 (term -> term mulop factor .)
    DIVIDE          reduce using rule 73 (term -> term mulop factor .)
    MENOR           reduce using rule 73 (term -> term mulop factor .)
    MENOREQUALS     reduce using rule 73 (term -> term mulop factor .)
    MAIOR           reduce using rule 73 (term -> term mulop factor .)
    MAIOREQUALS     reduce using rule 73 (term -> term mulop factor .)
    DIFERENTE       reduce using rule 73 (term -> term mulop factor .)
    EQUALITY        reduce using rule 73 (term -> term mulop factor .)
    PLUS            reduce using rule 73 (term -> term mulop factor .)
    MINUS           reduce using rule 73 (term -> term mulop factor .)
    LOG             reduce using rule 73 (term -> term mulop factor .)
    OU_LOGICO       reduce using rule 73 (term -> term mulop factor .)
    TIMESX          reduce using rule 73 (term -> term mulop factor .)
    IDENTIFIER      reduce using rule 73 (term -> term mulop factor .)
    PRINT           reduce using rule 73 (term -> term mulop factor .)
    READ            reduce using rule 73 (term -> term mulop factor .)
    IF              reduce using rule 73 (term -> term mulop factor .)
    FOR             reduce using rule 73 (term -> term mulop factor .)
    WHILE           reduce using rule 73 (term -> term mulop factor .)
    DO              reduce using rule 73 (term -> term mulop factor .)
    LPAREN          reduce using rule 73 (term -> term mulop factor .)
    INTEGER         reduce using rule 73 (term -> term mulop factor .)
    FLOAT           reduce using rule 73 (term -> term mulop factor .)
    TRUE            reduce using rule 73 (term -> term mulop factor .)
    FALSE           reduce using rule 73 (term -> term mulop factor .)
    $end            reduce using rule 73 (term -> term mulop factor .)
    RPAREN          reduce using rule 73 (term -> term mulop factor .)
    SEMI            reduce using rule 73 (term -> term mulop factor .)
    RBRACE          reduce using rule 73 (term -> term mulop factor .)


state 108

    (28) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .

    IDENTIFIER      reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    PRINT           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    READ            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    IF              reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FOR             reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    WHILE           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    DO              reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    LPAREN          reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    INTEGER         reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FLOAT           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    TRUE            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FALSE           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    $end            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    RBRACE          reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    SEMI            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)


state 109

    (29) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .

    IDENTIFIER      reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    PRINT           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    READ            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    IF              reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FOR             reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    WHILE           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    DO              reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    LPAREN          reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    INTEGER         reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FLOAT           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    TRUE            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FALSE           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    $end            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    RBRACE          reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    SEMI            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)


state 110

    (24) var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .

    IDENTIFIER      reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    PRINT           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    READ            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    IF              reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FOR             reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    WHILE           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    DO              reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    LPAREN          reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    INTEGER         reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FLOAT           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    TRUE            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FALSE           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    $end            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    RBRACE          reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    SEMI            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)


state 111

    (25) var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .

    IDENTIFIER      reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    PRINT           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    READ            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    IF              reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FOR             reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    WHILE           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    DO              reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    LPAREN          reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    INTEGER         reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FLOAT           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    TRUE            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FALSE           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    $end            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    RBRACE          reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    SEMI            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)


state 112

    (26) var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .

    IDENTIFIER      reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    PRINT           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    READ            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    IF              reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FOR             reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    WHILE           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    DO              reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    LPAREN          reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    INTEGER         reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FLOAT           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    TRUE            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FALSE           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    $end            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    RBRACE          reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    SEMI            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)


state 113

    (27) var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .

    IDENTIFIER      reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    PRINT           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    READ            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    IF              reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FOR             reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    WHILE           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    DO              reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    LPAREN          reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    INTEGER         reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FLOAT           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    TRUE            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FALSE           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    $end            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    RBRACE          reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    SEMI            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)


state 114

    (30) var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .

    IDENTIFIER      reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    PRINT           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    READ            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    IF              reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FOR             reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    WHILE           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    DO              reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    LPAREN          reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    INTEGER         reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FLOAT           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    TRUE            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FALSE           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    $end            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    RBRACE          reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    SEMI            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)


state 115

    (52) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN . STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN . RPAREN SEMI

    STRING          shift and go to state 132
    RPAREN          shift and go to state 133


state 116

    (81) factor -> IDENTIFIER LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TIMES           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DIVIDE          reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MENOR           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MENOREQUALS     reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MAIOR           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MAIOREQUALS     reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DIFERENTE       reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    EQUALITY        reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PLUS            reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MINUS           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    LOG             reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    OU_LOGICO       reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TIMESX          reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    IDENTIFIER      reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PRINT           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    READ            reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    IF              reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FOR             reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    WHILE           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DO              reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    LPAREN          reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    INTEGER         reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FLOAT           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TRUE            reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FALSE           reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    $end            reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    SEMI            reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)
    RBRACE          reduce using rule 81 (factor -> IDENTIFIER LPAREN args RPAREN .)


state 117

    (10) print_stmt -> PRINT LPAREN STRING RPAREN . SEMI declaration
    (11) print_stmt -> PRINT LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 134


state 118

    (20) print_stmt -> PRINT LPAREN RPAREN SEMI . declaration
    (21) print_stmt -> PRINT LPAREN RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! READ            [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! IF              [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! DO              [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]

    declaration                    shift and go to state 135
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 119

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN . SEMI declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN . SEMI

    SEMI            shift and go to state 136


state 120

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN . SEMI declaration
    (15) print_stmt -> PRINT LPAREN NUMBER RPAREN . SEMI

    SEMI            shift and go to state 137


state 121

    (16) print_stmt -> PRINT LPAREN boolean RPAREN . SEMI declaration
    (17) print_stmt -> PRINT LPAREN boolean RPAREN . SEMI

    SEMI            shift and go to state 138


state 122

    (18) print_stmt -> PRINT LPAREN expression RPAREN . SEMI declaration
    (19) print_stmt -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 139


state 123

    (50) read_stmt -> READ LPAREN STRING RPAREN . SEMI declaration
    (51) read_stmt -> READ LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 140


state 124

    (37) selection_stmt -> IF LPAREN expression RPAREN . LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN . LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression RPAREN . LBRACE declaration RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN . LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE

    LBRACE          shift and go to state 141


state 125

    (41) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    SEMI            shift and go to state 142
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 126

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN . LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 143


state 127

    (45) iteration_stmt -> DO LBRACE statement SEMI . RBRACE WHILE LPAREN expression RPAREN SEMI

    RBRACE          shift and go to state 144


state 128

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 145


state 129

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 146


state 130

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE . WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 147


state 131

    (52) read_stmt -> IDENTIFIER ATRIBUTION . READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER ATRIBUTION . READ LPAREN RPAREN SEMI

    READ            shift and go to state 79


state 132

    (52) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 148


state 133

    (53) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN . SEMI

    SEMI            shift and go to state 149


state 134

    (10) print_stmt -> PRINT LPAREN STRING RPAREN SEMI . declaration
    (11) print_stmt -> PRINT LPAREN STRING RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    RBRACE          reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    SEMI            reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! READ            [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! IF              [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! DO              [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]

    declaration                    shift and go to state 150
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 135

    (20) print_stmt -> PRINT LPAREN RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    PRINT           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    READ            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    IF              reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FOR             reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    WHILE           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    DO              reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    LPAREN          reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    INTEGER         reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FLOAT           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    TRUE            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FALSE           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    $end            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    RBRACE          reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    SEMI            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)


state 136

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI . declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    RBRACE          reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    SEMI            reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! READ            [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! IF              [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! DO              [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]

    declaration                    shift and go to state 151
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 137

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI . declaration
    (15) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    RBRACE          reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    SEMI            reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! READ            [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! IF              [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! DO              [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]

    NUMBER                         shift and go to state 11
    declaration                    shift and go to state 152
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 138

    (16) print_stmt -> PRINT LPAREN boolean RPAREN SEMI . declaration
    (17) print_stmt -> PRINT LPAREN boolean RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    RBRACE          reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    SEMI            reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! READ            [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! IF              [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! DO              [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]

    boolean                        shift and go to state 12
    declaration                    shift and go to state 153
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 139

    (18) print_stmt -> PRINT LPAREN expression RPAREN SEMI . declaration
    (19) print_stmt -> PRINT LPAREN expression RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! READ            [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! IF              [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! DO              [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]

    expression                     shift and go to state 9
    declaration                    shift and go to state 154
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 140

    (50) read_stmt -> READ LPAREN STRING RPAREN SEMI . declaration
    (51) read_stmt -> READ LPAREN STRING RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    RBRACE          reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    SEMI            reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! READ            [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! IF              [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! DO              [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 51 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]

    declaration                    shift and go to state 155
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 141

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE . expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE . expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE . declaration RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE . declaration RBRACE ELSE LBRACE declaration RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 158
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 156
    declaration                    shift and go to state 157
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    factor                         shift and go to state 23

state 142

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN LBRACE print_stmt RBRACE
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    additive_expression            shift and go to state 159
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 143

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE . expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE . statement RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 162
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 160
    statement                      shift and go to state 161
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    expression_stmt                shift and go to state 104
    selection_stmt                 shift and go to state 163
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    factor                         shift and go to state 23

state 144

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 166


state 145

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 167


state 146

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 168


state 147

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE . LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 169


state 148

    (52) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 170


state 149

    (53) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .

    IDENTIFIER      reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    READ            reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    IF              reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    FOR             reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    DO              reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    INTEGER         reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    FLOAT           reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    $end            reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 53 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI .)


state 150

    (10) print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    PRINT           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    READ            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    IF              reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FOR             reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    WHILE           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    DO              reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    LPAREN          reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    INTEGER         reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FLOAT           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    TRUE            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FALSE           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    $end            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    RBRACE          reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    SEMI            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)


state 151

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    PRINT           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    READ            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    IF              reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FOR             reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    WHILE           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    DO              reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    LPAREN          reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    INTEGER         reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FLOAT           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    TRUE            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FALSE           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    $end            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    RBRACE          reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    SEMI            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)


state 152

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    PRINT           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    READ            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    IF              reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FOR             reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    WHILE           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    DO              reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    LPAREN          reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    INTEGER         reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FLOAT           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    TRUE            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FALSE           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    $end            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    RBRACE          reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    SEMI            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)


state 153

    (16) print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    PRINT           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    READ            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    IF              reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FOR             reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    WHILE           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    DO              reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    LPAREN          reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    INTEGER         reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FLOAT           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    TRUE            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FALSE           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    $end            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    RBRACE          reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    SEMI            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)


state 154

    (18) print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    PRINT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    READ            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    IF              reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FOR             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    WHILE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    DO              reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    LPAREN          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    INTEGER         reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FLOAT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    TRUE            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FALSE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    $end            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    RBRACE          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    SEMI            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)


state 155

    (50) read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    PRINT           reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    READ            reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    IF              reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FOR             reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    WHILE           reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    DO              reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    LPAREN          reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    INTEGER         reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FLOAT           reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    TRUE            reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FALSE           reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    $end            reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    RBRACE          reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    SEMI            reduce using rule 50 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)


state 156

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression . RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression . RBRACE statement
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term
    (9) declaration -> expression .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 171
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35

  ! RBRACE          [ reduce using rule 9 (declaration -> expression .) ]


state 157

    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration . RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration . RBRACE ELSE LBRACE declaration RBRACE

    RBRACE          shift and go to state 172


state 158

    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (22) var_declaration -> IDENTIFIER . var_declaration
    (23) var_declaration -> IDENTIFIER .
    (24) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER SEMI
    (26) var_declaration -> IDENTIFIER . ATRIBUTION boolean var_declaration
    (27) var_declaration -> IDENTIFIER . ATRIBUTION boolean SEMI
    (28) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER . ATRIBUTION simple_expression SEMI
    (52) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN RPAREN SEMI
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! reduce/reduce conflict for RBRACE resolved using rule 23 (var_declaration -> IDENTIFIER .)
    EQUALITY        shift and go to state 40
    RBRACE          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    ATRIBUTION      shift and go to state 38
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 36

  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 78 (factor -> IDENTIFIER .) ]

    var_declaration                shift and go to state 37

state 159

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN LBRACE print_stmt RBRACE
    (67) additive_expression -> additive_expression . addop term
    (71) addop -> . PLUS
    (72) addop -> . MINUS

    RPAREN          shift and go to state 173
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

    addop                          shift and go to state 48

state 160

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression . RBRACE statement
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term
    (36) expression_stmt -> expression .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 174
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35

  ! RBRACE          [ reduce using rule 36 (expression_stmt -> expression .) ]


state 161

    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 175


state 162

    (54) expression -> IDENTIFIER . EQUALITY expression
    (56) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (52) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> IDENTIFIER . ATRIBUTION READ LPAREN RPAREN SEMI
    (78) factor -> IDENTIFIER .
    (81) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
    EQUALITY        shift and go to state 40
    ATRIBUTION      shift and go to state 131
    MINUSMINUS      reduce using rule 78 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 78 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 78 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 78 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 78 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 78 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 78 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 78 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 78 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 78 (factor -> IDENTIFIER .)
    LOG             reduce using rule 78 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 78 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 78 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 39

  ! EQUALITY        [ reduce using rule 78 (factor -> IDENTIFIER .) ]


state 163

    (32) statement -> selection_stmt .

    RBRACE          reduce using rule 32 (statement -> selection_stmt .)
    IDENTIFIER      reduce using rule 32 (statement -> selection_stmt .)
    PRINT           reduce using rule 32 (statement -> selection_stmt .)
    READ            reduce using rule 32 (statement -> selection_stmt .)
    IF              reduce using rule 32 (statement -> selection_stmt .)
    FOR             reduce using rule 32 (statement -> selection_stmt .)
    WHILE           reduce using rule 32 (statement -> selection_stmt .)
    DO              reduce using rule 32 (statement -> selection_stmt .)
    LPAREN          reduce using rule 32 (statement -> selection_stmt .)
    INTEGER         reduce using rule 32 (statement -> selection_stmt .)
    FLOAT           reduce using rule 32 (statement -> selection_stmt .)
    TRUE            reduce using rule 32 (statement -> selection_stmt .)
    FALSE           reduce using rule 32 (statement -> selection_stmt .)
    $end            reduce using rule 32 (statement -> selection_stmt .)
    SEMI            reduce using rule 32 (statement -> selection_stmt .)


state 164

    (34) statement -> print_stmt .

    RBRACE          reduce using rule 34 (statement -> print_stmt .)
    IDENTIFIER      reduce using rule 34 (statement -> print_stmt .)
    PRINT           reduce using rule 34 (statement -> print_stmt .)
    READ            reduce using rule 34 (statement -> print_stmt .)
    IF              reduce using rule 34 (statement -> print_stmt .)
    FOR             reduce using rule 34 (statement -> print_stmt .)
    WHILE           reduce using rule 34 (statement -> print_stmt .)
    DO              reduce using rule 34 (statement -> print_stmt .)
    LPAREN          reduce using rule 34 (statement -> print_stmt .)
    INTEGER         reduce using rule 34 (statement -> print_stmt .)
    FLOAT           reduce using rule 34 (statement -> print_stmt .)
    TRUE            reduce using rule 34 (statement -> print_stmt .)
    FALSE           reduce using rule 34 (statement -> print_stmt .)
    $end            reduce using rule 34 (statement -> print_stmt .)
    SEMI            reduce using rule 34 (statement -> print_stmt .)


state 165

    (35) statement -> read_stmt .

    RBRACE          reduce using rule 35 (statement -> read_stmt .)
    IDENTIFIER      reduce using rule 35 (statement -> read_stmt .)
    PRINT           reduce using rule 35 (statement -> read_stmt .)
    READ            reduce using rule 35 (statement -> read_stmt .)
    IF              reduce using rule 35 (statement -> read_stmt .)
    FOR             reduce using rule 35 (statement -> read_stmt .)
    WHILE           reduce using rule 35 (statement -> read_stmt .)
    DO              reduce using rule 35 (statement -> read_stmt .)
    LPAREN          reduce using rule 35 (statement -> read_stmt .)
    INTEGER         reduce using rule 35 (statement -> read_stmt .)
    FLOAT           reduce using rule 35 (statement -> read_stmt .)
    TRUE            reduce using rule 35 (statement -> read_stmt .)
    FALSE           reduce using rule 35 (statement -> read_stmt .)
    $end            reduce using rule 35 (statement -> read_stmt .)
    SEMI            reduce using rule 35 (statement -> read_stmt .)


state 166

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 176


state 167

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN . expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 177
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 168

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN . expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 178
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 169

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN . expression RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN . expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 179
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 170

    (52) read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .

    IDENTIFIER      reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    READ            reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    LPAREN          reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    INTEGER         reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    FLOAT           reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    TRUE            reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    FALSE           reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    $end            reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    RBRACE          reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)
    SEMI            reduce using rule 52 (read_stmt -> IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI .)


state 171

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE . ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    ELSE            shift and go to state 180
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 100
    statement                      shift and go to state 181
    expression_stmt                shift and go to state 104
    selection_stmt                 shift and go to state 163
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 172

    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE . ELSE LBRACE declaration RBRACE

    IDENTIFIER      reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    PRINT           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    READ            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    IF              reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    FOR             reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    WHILE           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    DO              reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    LPAREN          reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    INTEGER         reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    FLOAT           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    TRUE            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    FALSE           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    $end            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    RBRACE          reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    SEMI            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE .)
    ELSE            shift and go to state 182


state 173

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . LBRACE print_stmt RBRACE

    LBRACE          shift and go to state 183


state 174

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 100
    statement                      shift and go to state 184
    expression_stmt                shift and go to state 104
    selection_stmt                 shift and go to state 163
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 175

    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .

    IDENTIFIER      reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    PRINT           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    READ            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    IF              reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    FOR             reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    WHILE           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    DO              reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    LPAREN          reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    INTEGER         reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    FLOAT           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    TRUE            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    FALSE           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    $end            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    SEMI            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)


state 176

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN . expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 185
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 177

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression . RPAREN SEMI
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 186
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 178

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression . RPAREN SEMI
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 187
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 179

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression . RPAREN SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression . RPAREN SEMI
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 188
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 180

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE . LBRACE expression RBRACE statement

    LBRACE          shift and go to state 189


state 181

    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)


state 182

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE . LBRACE declaration RBRACE

    LBRACE          shift and go to state 190


state 183

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE . expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE . print_stmt RBRACE
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    PRINT           shift and go to state 14
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 191
    additive_expression            shift and go to state 19
    print_stmt                     shift and go to state 192
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    factor                         shift and go to state 23

state 184

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)


state 185

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression . RPAREN SEMI
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 193
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 186

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 194


state 187

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 195


state 188

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN . SEMI statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 196


state 189

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE . expression RBRACE statement
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 197
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 190

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE . declaration RBRACE
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 9
    declaration                    shift and go to state 198
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 191

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression . RBRACE statement
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 199
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 192

    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt . RBRACE

    RBRACE          shift and go to state 200


state 193

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 201


state 194

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .

    IDENTIFIER      reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    INTEGER         reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)


state 195

    (47) iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .

    IDENTIFIER      reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    INTEGER         reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 47 (iteration_stmt -> DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)


state 196

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI . statement
    (49) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! READ            [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! IF              [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! DO              [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 49 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .) ]

    selection_stmt                 shift and go to state 163
    expression                     shift and go to state 100
    statement                      shift and go to state 202
    expression_stmt                shift and go to state 104
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 197

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression . RBRACE statement
    (57) expression -> expression . LOG expression
    (58) expression -> expression . OU_LOGICO expression
    (89) expression -> expression . PLUS term
    (90) expression -> expression . MINUS term
    (91) expression -> expression . TIMES term
    (92) expression -> expression . DIVIDE term
    (93) expression -> expression . TIMESX term
    (94) expression -> expression . LOG term
    (95) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 203
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 198

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration . RBRACE

    RBRACE          shift and go to state 204


state 199

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 100
    additive_expression            shift and go to state 19
    statement                      shift and go to state 205
    expression_stmt                shift and go to state 104
    selection_stmt                 shift and go to state 163
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 200

    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .

    IDENTIFIER      reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    PRINT           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    READ            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    IF              reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FOR             reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    WHILE           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    DO              reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    LPAREN          reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    INTEGER         reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FLOAT           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    TRUE            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FALSE           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    $end            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    SEMI            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    RBRACE          reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)


state 201

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .

    IDENTIFIER      reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    INTEGER         reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)


state 202

    (48) iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .

    IDENTIFIER      reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    PRINT           reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    READ            reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    IF              reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    FOR             reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    WHILE           reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    DO              reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    LPAREN          reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    INTEGER         reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    FLOAT           reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    TRUE            reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    FALSE           reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    $end            reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    SEMI            reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)
    RBRACE          reduce using rule 48 (iteration_stmt -> DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement .)


state 203

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) iteration_stmt -> . DO LBRACE read_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (48) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI statement
    (49) iteration_stmt -> . DO LBRACE selection_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (50) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (51) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (52) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN STRING RPAREN SEMI
    (53) read_stmt -> . IDENTIFIER ATRIBUTION READ LPAREN RPAREN SEMI
    (54) expression -> . IDENTIFIER EQUALITY expression
    (55) expression -> . simple_expression
    (56) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (57) expression -> . expression LOG expression
    (58) expression -> . expression OU_LOGICO expression
    (89) expression -> . expression PLUS term
    (90) expression -> . expression MINUS term
    (91) expression -> . expression TIMES term
    (92) expression -> . expression DIVIDE term
    (93) expression -> . expression TIMESX term
    (94) expression -> . expression LOG term
    (95) expression -> . expression OU_LOGICO term
    (59) simple_expression -> . additive_expression relop additive_expression
    (60) simple_expression -> . additive_expression
    (67) additive_expression -> . additive_expression addop term
    (68) additive_expression -> . term
    (69) additive_expression -> . term MINUSMINUS
    (70) additive_expression -> . term PLUSPLUS
    (73) term -> . term mulop factor
    (74) term -> . factor
    (77) factor -> . LPAREN expression RPAREN
    (78) factor -> . IDENTIFIER
    (79) factor -> . NUMBER
    (80) factor -> . boolean
    (81) factor -> . IDENTIFIER LPAREN args RPAREN
    (84) NUMBER -> . INTEGER
    (85) NUMBER -> . FLOAT
    (82) boolean -> . TRUE
    (83) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 106
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 100
    statement                      shift and go to state 206
    expression_stmt                shift and go to state 104
    selection_stmt                 shift and go to state 163
    iteration_stmt                 shift and go to state 105
    print_stmt                     shift and go to state 164
    read_stmt                      shift and go to state 165
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 204

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .

    IDENTIFIER      reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    PRINT           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    READ            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    IF              reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    FOR             reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    WHILE           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    DO              reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    LPAREN          reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    INTEGER         reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    FLOAT           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    TRUE            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    FALSE           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    $end            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    RBRACE          reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)
    SEMI            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE declaration RBRACE ELSE LBRACE declaration RBRACE .)


state 205

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)


state 206

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    READ            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    IF              reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FOR             reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    DO              reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    $end            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALITY in state 10 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 43 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 75 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 76 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 77 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 84 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 88 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 89 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 106 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 118 resolved as shift
WARNING: shift/reduce conflict for READ in state 118 resolved as shift
WARNING: shift/reduce conflict for IF in state 118 resolved as shift
WARNING: shift/reduce conflict for FOR in state 118 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 118 resolved as shift
WARNING: shift/reduce conflict for DO in state 118 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 118 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 118 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 118 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 118 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 118 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 134 resolved as shift
WARNING: shift/reduce conflict for READ in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for DO in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 134 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 134 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 134 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 134 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 136 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 136 resolved as shift
WARNING: shift/reduce conflict for READ in state 136 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
WARNING: shift/reduce conflict for FOR in state 136 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 136 resolved as shift
WARNING: shift/reduce conflict for DO in state 136 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 136 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 136 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 136 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 136 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 137 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 137 resolved as shift
WARNING: shift/reduce conflict for READ in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 137 resolved as shift
WARNING: shift/reduce conflict for DO in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 137 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 138 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 138 resolved as shift
WARNING: shift/reduce conflict for READ in state 138 resolved as shift
WARNING: shift/reduce conflict for IF in state 138 resolved as shift
WARNING: shift/reduce conflict for FOR in state 138 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 138 resolved as shift
WARNING: shift/reduce conflict for DO in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 138 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 138 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 138 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 138 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 139 resolved as shift
WARNING: shift/reduce conflict for READ in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for FOR in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
WARNING: shift/reduce conflict for DO in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 139 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 139 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 140 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 140 resolved as shift
WARNING: shift/reduce conflict for READ in state 140 resolved as shift
WARNING: shift/reduce conflict for IF in state 140 resolved as shift
WARNING: shift/reduce conflict for FOR in state 140 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 140 resolved as shift
WARNING: shift/reduce conflict for DO in state 140 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 140 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 140 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 140 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 140 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 140 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 156 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 158 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 160 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 196 resolved as shift
WARNING: shift/reduce conflict for FOR in state 196 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 196 resolved as shift
WARNING: shift/reduce conflict for DO in state 196 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 196 resolved as shift
WARNING: shift/reduce conflict for READ in state 196 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 196 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 196 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 196 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 196 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 196 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 196 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (var_declaration -> IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 10
WARNING: reduce/reduce conflict in state 65 resolved using rule (additive_expression -> term)
WARNING: rejected rule (expression -> expression LOG term) in state 65
WARNING: reduce/reduce conflict in state 67 resolved using rule (additive_expression -> term)
WARNING: rejected rule (expression -> expression OU_LOGICO term) in state 67
WARNING: reduce/reduce conflict in state 84 resolved using rule (expression -> IDENTIFIER EQUALITY IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 84
WARNING: reduce/reduce conflict in state 158 resolved using rule (var_declaration -> IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 158
WARNING: Rule (expression -> expression LOG term) is never reduced
WARNING: Rule (expression -> expression OU_LOGICO term) is never reduced
