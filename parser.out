Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASPAS
    BREAK
    COMMENT
    LCOLCHETE
    RCOLCHETE
    RETURN
    STRINGS
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> print_stmt
Rule 6     declaration -> read_stmt
Rule 7     declaration -> selection_stmt
Rule 8     declaration -> iteration_stmt
Rule 9     declaration -> expression
Rule 10    print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration
Rule 11    print_stmt -> PRINT LPAREN STRING RPAREN SEMI
Rule 12    print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
Rule 13    print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI
Rule 14    print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration
Rule 15    print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI
Rule 16    print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration
Rule 17    print_stmt -> PRINT LPAREN boolean RPAREN SEMI
Rule 18    print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration
Rule 19    print_stmt -> PRINT LPAREN expression RPAREN SEMI
Rule 20    print_stmt -> PRINT LPAREN RPAREN SEMI declaration
Rule 21    print_stmt -> PRINT LPAREN RPAREN SEMI
Rule 22    var_declaration -> IDENTIFIER var_declaration
Rule 23    var_declaration -> IDENTIFIER
Rule 24    var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration
Rule 25    var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI
Rule 26    var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration
Rule 27    var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI
Rule 28    var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
Rule 29    var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI
Rule 30    var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI
Rule 31    statement -> expression_stmt
Rule 32    statement -> selection_stmt
Rule 33    statement -> iteration_stmt
Rule 34    statement -> print_stmt
Rule 35    statement -> read_stmt
Rule 36    expression_stmt -> expression
Rule 37    selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
Rule 38    selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement
Rule 39    selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
Rule 40    selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
Rule 41    iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
Rule 42    iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
Rule 43    iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
Rule 44    iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
Rule 45    iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 46    iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
Rule 47    read_stmt -> READ LPAREN STRING RPAREN SEMI declaration
Rule 48    read_stmt -> READ LPAREN STRING RPAREN SEMI
Rule 49    expression -> IDENTIFIER EQUALITY expression
Rule 50    expression -> simple_expression
Rule 51    expression -> IDENTIFIER EQUALITY IDENTIFIER
Rule 52    expression -> expression LOG expression
Rule 53    expression -> expression OU_LOGICO expression
Rule 54    simple_expression -> additive_expression relop additive_expression
Rule 55    simple_expression -> additive_expression
Rule 56    relop -> MENOR
Rule 57    relop -> MENOREQUALS
Rule 58    relop -> MAIOR
Rule 59    relop -> MAIOREQUALS
Rule 60    relop -> DIFERENTE
Rule 61    relop -> EQUALITY
Rule 62    additive_expression -> additive_expression addop term
Rule 63    additive_expression -> term
Rule 64    additive_expression -> term MINUSMINUS
Rule 65    additive_expression -> term PLUSPLUS
Rule 66    addop -> PLUS
Rule 67    addop -> MINUS
Rule 68    term -> term mulop factor
Rule 69    term -> factor
Rule 70    mulop -> TIMES
Rule 71    mulop -> DIVIDE
Rule 72    factor -> LPAREN expression RPAREN
Rule 73    factor -> IDENTIFIER
Rule 74    factor -> NUMBER
Rule 75    factor -> boolean
Rule 76    factor -> IDENTIFIER LPAREN args RPAREN
Rule 77    boolean -> TRUE
Rule 78    boolean -> FALSE
Rule 79    NUMBER -> INTEGER
Rule 80    NUMBER -> FLOAT
Rule 81    args -> args_list
Rule 82    args -> empty
Rule 83    args_list -> expression
Rule 84    expression -> expression PLUS term
Rule 85    expression -> expression MINUS term
Rule 86    expression -> expression TIMES term
Rule 87    expression -> expression DIVIDE term
Rule 88    expression -> expression TIMESX term
Rule 89    expression -> expression LOG term
Rule 90    expression -> expression OU_LOGICO term
Rule 91    empty -> <empty>

Terminals, with rules where they appear

ASPAS                : 
ATRIBUTION           : 24 25 26 27 28 29 30
BREAK                : 
COMMENT              : 
DIFERENTE            : 60
DIVIDE               : 71 87
DO                   : 45 46
ELSE                 : 37 40
EQUALITY             : 49 51 61
FALSE                : 78
FLOAT                : 80
FOR                  : 41 42
IDENTIFIER           : 12 13 22 23 24 25 26 27 28 28 29 29 30 49 51 51 73 76
IF                   : 37 38 39 40
INTEGER              : 79
LBRACE               : 37 37 38 39 40 40 41 42 43 44 45 46
LCOLCHETE            : 
LOG                  : 52 89
LPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 37 38 39 40 41 42 43 44 45 46 47 48 72 76
MAIOR                : 58
MAIOREQUALS          : 59
MENOR                : 56
MENOREQUALS          : 57
MINUS                : 67 85
MINUSMINUS           : 64
OU_LOGICO            : 53 90
PLUS                 : 66 84
PLUSPLUS             : 65
PRINT                : 10 11 12 13 14 15 16 17 18 19 20 21
RBRACE               : 37 37 38 39 40 40 41 42 43 44 45 46
RCOLCHETE            : 
READ                 : 47 48
RETURN               : 
RPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 37 38 39 40 41 42 43 44 45 46 47 48 72 76
SEMI                 : 10 11 12 13 14 15 16 17 18 19 20 21 25 27 29 30 41 42 45 45 46 47 48
STRING               : 10 11 47 48
STRINGS              : 
TIMES                : 70 86
TIMESX               : 88
TRUE                 : 77
WHILE                : 43 44 45 46
WRITE                : 
error                : 

Nonterminals, with rules where they appear

NUMBER               : 14 15 24 25 74
additive_expression  : 41 42 54 54 55 62
addop                : 62
args                 : 76
args_list            : 81
boolean              : 16 17 26 27 75
declaration          : 2 3 10 12 14 16 18 20 47
declaration_list     : 1 2
empty                : 82
expression           : 9 18 19 36 37 37 37 38 38 39 40 41 41 42 43 43 44 45 46 49 52 52 53 53 72 83 84 85 86 87 88 89 90
expression_stmt      : 31
factor               : 68 69
iteration_stmt       : 8 33
mulop                : 68
print_stmt           : 5 34 39 40 40 42 44 46
program              : 0
read_stmt            : 6 35
relop                : 54
selection_stmt       : 7 32
simple_expression    : 30 50
statement            : 37 38 41 43 45
term                 : 62 63 64 65 68 84 85 86 87 88 89 90
var_declaration      : 4 22 24 26 28 41 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    $end            reduce using rule 1 (program -> declaration_list .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    declaration                    shift and go to state 28
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 3

    (3) declaration_list -> declaration .

    IDENTIFIER      reduce using rule 3 (declaration_list -> declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration .)
    READ            reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    DO              reduce using rule 3 (declaration_list -> declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration .)
    INTEGER         reduce using rule 3 (declaration_list -> declaration .)
    FLOAT           reduce using rule 3 (declaration_list -> declaration .)
    TRUE            reduce using rule 3 (declaration_list -> declaration .)
    FALSE           reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    IDENTIFIER      reduce using rule 4 (declaration -> var_declaration .)
    PRINT           reduce using rule 4 (declaration -> var_declaration .)
    READ            reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    LPAREN          reduce using rule 4 (declaration -> var_declaration .)
    INTEGER         reduce using rule 4 (declaration -> var_declaration .)
    FLOAT           reduce using rule 4 (declaration -> var_declaration .)
    TRUE            reduce using rule 4 (declaration -> var_declaration .)
    FALSE           reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)
    RBRACE          reduce using rule 4 (declaration -> var_declaration .)
    SEMI            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> print_stmt .

    IDENTIFIER      reduce using rule 5 (declaration -> print_stmt .)
    PRINT           reduce using rule 5 (declaration -> print_stmt .)
    READ            reduce using rule 5 (declaration -> print_stmt .)
    IF              reduce using rule 5 (declaration -> print_stmt .)
    FOR             reduce using rule 5 (declaration -> print_stmt .)
    WHILE           reduce using rule 5 (declaration -> print_stmt .)
    DO              reduce using rule 5 (declaration -> print_stmt .)
    LPAREN          reduce using rule 5 (declaration -> print_stmt .)
    INTEGER         reduce using rule 5 (declaration -> print_stmt .)
    FLOAT           reduce using rule 5 (declaration -> print_stmt .)
    TRUE            reduce using rule 5 (declaration -> print_stmt .)
    FALSE           reduce using rule 5 (declaration -> print_stmt .)
    $end            reduce using rule 5 (declaration -> print_stmt .)
    RBRACE          reduce using rule 5 (declaration -> print_stmt .)
    SEMI            reduce using rule 5 (declaration -> print_stmt .)


state 6

    (6) declaration -> read_stmt .

    IDENTIFIER      reduce using rule 6 (declaration -> read_stmt .)
    PRINT           reduce using rule 6 (declaration -> read_stmt .)
    READ            reduce using rule 6 (declaration -> read_stmt .)
    IF              reduce using rule 6 (declaration -> read_stmt .)
    FOR             reduce using rule 6 (declaration -> read_stmt .)
    WHILE           reduce using rule 6 (declaration -> read_stmt .)
    DO              reduce using rule 6 (declaration -> read_stmt .)
    LPAREN          reduce using rule 6 (declaration -> read_stmt .)
    INTEGER         reduce using rule 6 (declaration -> read_stmt .)
    FLOAT           reduce using rule 6 (declaration -> read_stmt .)
    TRUE            reduce using rule 6 (declaration -> read_stmt .)
    FALSE           reduce using rule 6 (declaration -> read_stmt .)
    $end            reduce using rule 6 (declaration -> read_stmt .)
    RBRACE          reduce using rule 6 (declaration -> read_stmt .)
    SEMI            reduce using rule 6 (declaration -> read_stmt .)


state 7

    (7) declaration -> selection_stmt .

    IDENTIFIER      reduce using rule 7 (declaration -> selection_stmt .)
    PRINT           reduce using rule 7 (declaration -> selection_stmt .)
    READ            reduce using rule 7 (declaration -> selection_stmt .)
    IF              reduce using rule 7 (declaration -> selection_stmt .)
    FOR             reduce using rule 7 (declaration -> selection_stmt .)
    WHILE           reduce using rule 7 (declaration -> selection_stmt .)
    DO              reduce using rule 7 (declaration -> selection_stmt .)
    LPAREN          reduce using rule 7 (declaration -> selection_stmt .)
    INTEGER         reduce using rule 7 (declaration -> selection_stmt .)
    FLOAT           reduce using rule 7 (declaration -> selection_stmt .)
    TRUE            reduce using rule 7 (declaration -> selection_stmt .)
    FALSE           reduce using rule 7 (declaration -> selection_stmt .)
    $end            reduce using rule 7 (declaration -> selection_stmt .)
    RBRACE          reduce using rule 7 (declaration -> selection_stmt .)
    SEMI            reduce using rule 7 (declaration -> selection_stmt .)


state 8

    (8) declaration -> iteration_stmt .

    IDENTIFIER      reduce using rule 8 (declaration -> iteration_stmt .)
    PRINT           reduce using rule 8 (declaration -> iteration_stmt .)
    READ            reduce using rule 8 (declaration -> iteration_stmt .)
    IF              reduce using rule 8 (declaration -> iteration_stmt .)
    FOR             reduce using rule 8 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 8 (declaration -> iteration_stmt .)
    DO              reduce using rule 8 (declaration -> iteration_stmt .)
    LPAREN          reduce using rule 8 (declaration -> iteration_stmt .)
    INTEGER         reduce using rule 8 (declaration -> iteration_stmt .)
    FLOAT           reduce using rule 8 (declaration -> iteration_stmt .)
    TRUE            reduce using rule 8 (declaration -> iteration_stmt .)
    FALSE           reduce using rule 8 (declaration -> iteration_stmt .)
    $end            reduce using rule 8 (declaration -> iteration_stmt .)
    RBRACE          reduce using rule 8 (declaration -> iteration_stmt .)
    SEMI            reduce using rule 8 (declaration -> iteration_stmt .)


state 9

    (9) declaration -> expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    IDENTIFIER      reduce using rule 9 (declaration -> expression .)
    PRINT           reduce using rule 9 (declaration -> expression .)
    READ            reduce using rule 9 (declaration -> expression .)
    IF              reduce using rule 9 (declaration -> expression .)
    FOR             reduce using rule 9 (declaration -> expression .)
    WHILE           reduce using rule 9 (declaration -> expression .)
    DO              reduce using rule 9 (declaration -> expression .)
    LPAREN          reduce using rule 9 (declaration -> expression .)
    INTEGER         reduce using rule 9 (declaration -> expression .)
    FLOAT           reduce using rule 9 (declaration -> expression .)
    TRUE            reduce using rule 9 (declaration -> expression .)
    FALSE           reduce using rule 9 (declaration -> expression .)
    $end            reduce using rule 9 (declaration -> expression .)
    RBRACE          reduce using rule 9 (declaration -> expression .)
    SEMI            reduce using rule 9 (declaration -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 10

    (22) var_declaration -> IDENTIFIER . var_declaration
    (23) var_declaration -> IDENTIFIER .
    (24) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER SEMI
    (26) var_declaration -> IDENTIFIER . ATRIBUTION boolean var_declaration
    (27) var_declaration -> IDENTIFIER . ATRIBUTION boolean SEMI
    (28) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER . ATRIBUTION simple_expression SEMI
    (49) expression -> IDENTIFIER . EQUALITY expression
    (51) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for READ resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for IF resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for DO resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! reduce/reduce conflict for SEMI resolved using rule 23 (var_declaration -> IDENTIFIER .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    PRINT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    READ            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    IF              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FOR             reduce using rule 23 (var_declaration -> IDENTIFIER .)
    WHILE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    DO              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    TRUE            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FALSE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    $end            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    RBRACE          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    SEMI            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    ATRIBUTION      shift and go to state 38
    EQUALITY        shift and go to state 39
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 73 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    LOG             reduce using rule 73 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 73 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40
    IDENTIFIER      shift and go to state 36

  ! IDENTIFIER      [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]
  ! EQUALITY        [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! IDENTIFIER      [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! PRINT           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! READ            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! IF              [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FOR             [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! WHILE           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! DO              [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! INTEGER         [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FLOAT           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! TRUE            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FALSE           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! SEMI            [ reduce using rule 73 (factor -> IDENTIFIER .) ]

    var_declaration                shift and go to state 37

state 11

    (74) factor -> NUMBER .

    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MENOR           reduce using rule 74 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    MAIOR           reduce using rule 74 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 74 (factor -> NUMBER .)
    EQUALITY        reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    LOG             reduce using rule 74 (factor -> NUMBER .)
    OU_LOGICO       reduce using rule 74 (factor -> NUMBER .)
    TIMESX          reduce using rule 74 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 74 (factor -> NUMBER .)
    PRINT           reduce using rule 74 (factor -> NUMBER .)
    READ            reduce using rule 74 (factor -> NUMBER .)
    IF              reduce using rule 74 (factor -> NUMBER .)
    FOR             reduce using rule 74 (factor -> NUMBER .)
    WHILE           reduce using rule 74 (factor -> NUMBER .)
    DO              reduce using rule 74 (factor -> NUMBER .)
    LPAREN          reduce using rule 74 (factor -> NUMBER .)
    INTEGER         reduce using rule 74 (factor -> NUMBER .)
    FLOAT           reduce using rule 74 (factor -> NUMBER .)
    TRUE            reduce using rule 74 (factor -> NUMBER .)
    FALSE           reduce using rule 74 (factor -> NUMBER .)
    $end            reduce using rule 74 (factor -> NUMBER .)
    RPAREN          reduce using rule 74 (factor -> NUMBER .)
    SEMI            reduce using rule 74 (factor -> NUMBER .)
    RBRACE          reduce using rule 74 (factor -> NUMBER .)


state 12

    (75) factor -> boolean .

    MINUSMINUS      reduce using rule 75 (factor -> boolean .)
    PLUSPLUS        reduce using rule 75 (factor -> boolean .)
    TIMES           reduce using rule 75 (factor -> boolean .)
    DIVIDE          reduce using rule 75 (factor -> boolean .)
    MENOR           reduce using rule 75 (factor -> boolean .)
    MENOREQUALS     reduce using rule 75 (factor -> boolean .)
    MAIOR           reduce using rule 75 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 75 (factor -> boolean .)
    DIFERENTE       reduce using rule 75 (factor -> boolean .)
    EQUALITY        reduce using rule 75 (factor -> boolean .)
    PLUS            reduce using rule 75 (factor -> boolean .)
    MINUS           reduce using rule 75 (factor -> boolean .)
    LOG             reduce using rule 75 (factor -> boolean .)
    OU_LOGICO       reduce using rule 75 (factor -> boolean .)
    TIMESX          reduce using rule 75 (factor -> boolean .)
    IDENTIFIER      reduce using rule 75 (factor -> boolean .)
    PRINT           reduce using rule 75 (factor -> boolean .)
    READ            reduce using rule 75 (factor -> boolean .)
    IF              reduce using rule 75 (factor -> boolean .)
    FOR             reduce using rule 75 (factor -> boolean .)
    WHILE           reduce using rule 75 (factor -> boolean .)
    DO              reduce using rule 75 (factor -> boolean .)
    LPAREN          reduce using rule 75 (factor -> boolean .)
    INTEGER         reduce using rule 75 (factor -> boolean .)
    FLOAT           reduce using rule 75 (factor -> boolean .)
    TRUE            reduce using rule 75 (factor -> boolean .)
    FALSE           reduce using rule 75 (factor -> boolean .)
    $end            reduce using rule 75 (factor -> boolean .)
    RPAREN          reduce using rule 75 (factor -> boolean .)
    SEMI            reduce using rule 75 (factor -> boolean .)
    RBRACE          reduce using rule 75 (factor -> boolean .)


state 13

    (50) expression -> simple_expression .

    LOG             reduce using rule 50 (expression -> simple_expression .)
    OU_LOGICO       reduce using rule 50 (expression -> simple_expression .)
    PLUS            reduce using rule 50 (expression -> simple_expression .)
    MINUS           reduce using rule 50 (expression -> simple_expression .)
    TIMES           reduce using rule 50 (expression -> simple_expression .)
    DIVIDE          reduce using rule 50 (expression -> simple_expression .)
    TIMESX          reduce using rule 50 (expression -> simple_expression .)
    IDENTIFIER      reduce using rule 50 (expression -> simple_expression .)
    PRINT           reduce using rule 50 (expression -> simple_expression .)
    READ            reduce using rule 50 (expression -> simple_expression .)
    IF              reduce using rule 50 (expression -> simple_expression .)
    FOR             reduce using rule 50 (expression -> simple_expression .)
    WHILE           reduce using rule 50 (expression -> simple_expression .)
    DO              reduce using rule 50 (expression -> simple_expression .)
    LPAREN          reduce using rule 50 (expression -> simple_expression .)
    INTEGER         reduce using rule 50 (expression -> simple_expression .)
    FLOAT           reduce using rule 50 (expression -> simple_expression .)
    TRUE            reduce using rule 50 (expression -> simple_expression .)
    FALSE           reduce using rule 50 (expression -> simple_expression .)
    $end            reduce using rule 50 (expression -> simple_expression .)
    RPAREN          reduce using rule 50 (expression -> simple_expression .)
    SEMI            reduce using rule 50 (expression -> simple_expression .)
    RBRACE          reduce using rule 50 (expression -> simple_expression .)


state 14

    (10) print_stmt -> PRINT . LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> PRINT . LPAREN STRING RPAREN SEMI
    (12) print_stmt -> PRINT . LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> PRINT . LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> PRINT . LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> PRINT . LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> PRINT . LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> PRINT . LPAREN boolean RPAREN SEMI
    (18) print_stmt -> PRINT . LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> PRINT . LPAREN expression RPAREN SEMI
    (20) print_stmt -> PRINT . LPAREN RPAREN SEMI declaration
    (21) print_stmt -> PRINT . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 41


state 15

    (72) factor -> LPAREN . expression RPAREN
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 42
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 16

    (47) read_stmt -> READ . LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> READ . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 44


state 17

    (37) selection_stmt -> IF . LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF . LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF . LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> IF . LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE

    LPAREN          shift and go to state 45


state 18

    (41) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE

    LPAREN          shift and go to state 46


state 19

    (54) simple_expression -> additive_expression . relop additive_expression
    (55) simple_expression -> additive_expression .
    (62) additive_expression -> additive_expression . addop term
    (56) relop -> . MENOR
    (57) relop -> . MENOREQUALS
    (58) relop -> . MAIOR
    (59) relop -> . MAIOREQUALS
    (60) relop -> . DIFERENTE
    (61) relop -> . EQUALITY
    (66) addop -> . PLUS
    (67) addop -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOG             reduce using rule 55 (simple_expression -> additive_expression .)
    OU_LOGICO       reduce using rule 55 (simple_expression -> additive_expression .)
    TIMES           reduce using rule 55 (simple_expression -> additive_expression .)
    DIVIDE          reduce using rule 55 (simple_expression -> additive_expression .)
    TIMESX          reduce using rule 55 (simple_expression -> additive_expression .)
    IDENTIFIER      reduce using rule 55 (simple_expression -> additive_expression .)
    PRINT           reduce using rule 55 (simple_expression -> additive_expression .)
    READ            reduce using rule 55 (simple_expression -> additive_expression .)
    IF              reduce using rule 55 (simple_expression -> additive_expression .)
    FOR             reduce using rule 55 (simple_expression -> additive_expression .)
    WHILE           reduce using rule 55 (simple_expression -> additive_expression .)
    DO              reduce using rule 55 (simple_expression -> additive_expression .)
    LPAREN          reduce using rule 55 (simple_expression -> additive_expression .)
    INTEGER         reduce using rule 55 (simple_expression -> additive_expression .)
    FLOAT           reduce using rule 55 (simple_expression -> additive_expression .)
    TRUE            reduce using rule 55 (simple_expression -> additive_expression .)
    FALSE           reduce using rule 55 (simple_expression -> additive_expression .)
    $end            reduce using rule 55 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 55 (simple_expression -> additive_expression .)
    SEMI            reduce using rule 55 (simple_expression -> additive_expression .)
    RBRACE          reduce using rule 55 (simple_expression -> additive_expression .)
    MENOR           shift and go to state 49
    MENOREQUALS     shift and go to state 50
    MAIOR           shift and go to state 51
    MAIOREQUALS     shift and go to state 52
    DIFERENTE       shift and go to state 53
    EQUALITY        shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

  ! PLUS            [ reduce using rule 55 (simple_expression -> additive_expression .) ]
  ! MINUS           [ reduce using rule 55 (simple_expression -> additive_expression .) ]

    relop                          shift and go to state 47
    addop                          shift and go to state 48

state 20

    (43) iteration_stmt -> WHILE . LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE . LPAREN expression RPAREN LBRACE print_stmt RBRACE

    LPAREN          shift and go to state 57


state 21

    (45) iteration_stmt -> DO . LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> DO . LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI

    LBRACE          shift and go to state 58


state 22

    (63) additive_expression -> term .
    (64) additive_expression -> term . MINUSMINUS
    (65) additive_expression -> term . PLUSPLUS
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 63 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 63 (additive_expression -> term .)
    MAIOR           reduce using rule 63 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 63 (additive_expression -> term .)
    DIFERENTE       reduce using rule 63 (additive_expression -> term .)
    EQUALITY        reduce using rule 63 (additive_expression -> term .)
    PLUS            reduce using rule 63 (additive_expression -> term .)
    MINUS           reduce using rule 63 (additive_expression -> term .)
    LOG             reduce using rule 63 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 63 (additive_expression -> term .)
    TIMESX          reduce using rule 63 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 63 (additive_expression -> term .)
    PRINT           reduce using rule 63 (additive_expression -> term .)
    READ            reduce using rule 63 (additive_expression -> term .)
    IF              reduce using rule 63 (additive_expression -> term .)
    FOR             reduce using rule 63 (additive_expression -> term .)
    WHILE           reduce using rule 63 (additive_expression -> term .)
    DO              reduce using rule 63 (additive_expression -> term .)
    LPAREN          reduce using rule 63 (additive_expression -> term .)
    INTEGER         reduce using rule 63 (additive_expression -> term .)
    FLOAT           reduce using rule 63 (additive_expression -> term .)
    TRUE            reduce using rule 63 (additive_expression -> term .)
    FALSE           reduce using rule 63 (additive_expression -> term .)
    $end            reduce using rule 63 (additive_expression -> term .)
    RPAREN          reduce using rule 63 (additive_expression -> term .)
    SEMI            reduce using rule 63 (additive_expression -> term .)
    RBRACE          reduce using rule 63 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 63 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 63 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 23

    (69) term -> factor .

    MINUSMINUS      reduce using rule 69 (term -> factor .)
    PLUSPLUS        reduce using rule 69 (term -> factor .)
    TIMES           reduce using rule 69 (term -> factor .)
    DIVIDE          reduce using rule 69 (term -> factor .)
    MENOR           reduce using rule 69 (term -> factor .)
    MENOREQUALS     reduce using rule 69 (term -> factor .)
    MAIOR           reduce using rule 69 (term -> factor .)
    MAIOREQUALS     reduce using rule 69 (term -> factor .)
    DIFERENTE       reduce using rule 69 (term -> factor .)
    EQUALITY        reduce using rule 69 (term -> factor .)
    PLUS            reduce using rule 69 (term -> factor .)
    MINUS           reduce using rule 69 (term -> factor .)
    LOG             reduce using rule 69 (term -> factor .)
    OU_LOGICO       reduce using rule 69 (term -> factor .)
    TIMESX          reduce using rule 69 (term -> factor .)
    IDENTIFIER      reduce using rule 69 (term -> factor .)
    PRINT           reduce using rule 69 (term -> factor .)
    READ            reduce using rule 69 (term -> factor .)
    IF              reduce using rule 69 (term -> factor .)
    FOR             reduce using rule 69 (term -> factor .)
    WHILE           reduce using rule 69 (term -> factor .)
    DO              reduce using rule 69 (term -> factor .)
    LPAREN          reduce using rule 69 (term -> factor .)
    INTEGER         reduce using rule 69 (term -> factor .)
    FLOAT           reduce using rule 69 (term -> factor .)
    TRUE            reduce using rule 69 (term -> factor .)
    FALSE           reduce using rule 69 (term -> factor .)
    $end            reduce using rule 69 (term -> factor .)
    RPAREN          reduce using rule 69 (term -> factor .)
    SEMI            reduce using rule 69 (term -> factor .)
    RBRACE          reduce using rule 69 (term -> factor .)


state 24

    (79) NUMBER -> INTEGER .

    MINUSMINUS      reduce using rule 79 (NUMBER -> INTEGER .)
    PLUSPLUS        reduce using rule 79 (NUMBER -> INTEGER .)
    TIMES           reduce using rule 79 (NUMBER -> INTEGER .)
    DIVIDE          reduce using rule 79 (NUMBER -> INTEGER .)
    MENOR           reduce using rule 79 (NUMBER -> INTEGER .)
    MENOREQUALS     reduce using rule 79 (NUMBER -> INTEGER .)
    MAIOR           reduce using rule 79 (NUMBER -> INTEGER .)
    MAIOREQUALS     reduce using rule 79 (NUMBER -> INTEGER .)
    DIFERENTE       reduce using rule 79 (NUMBER -> INTEGER .)
    EQUALITY        reduce using rule 79 (NUMBER -> INTEGER .)
    PLUS            reduce using rule 79 (NUMBER -> INTEGER .)
    MINUS           reduce using rule 79 (NUMBER -> INTEGER .)
    LOG             reduce using rule 79 (NUMBER -> INTEGER .)
    OU_LOGICO       reduce using rule 79 (NUMBER -> INTEGER .)
    TIMESX          reduce using rule 79 (NUMBER -> INTEGER .)
    IDENTIFIER      reduce using rule 79 (NUMBER -> INTEGER .)
    PRINT           reduce using rule 79 (NUMBER -> INTEGER .)
    READ            reduce using rule 79 (NUMBER -> INTEGER .)
    IF              reduce using rule 79 (NUMBER -> INTEGER .)
    FOR             reduce using rule 79 (NUMBER -> INTEGER .)
    WHILE           reduce using rule 79 (NUMBER -> INTEGER .)
    DO              reduce using rule 79 (NUMBER -> INTEGER .)
    LPAREN          reduce using rule 79 (NUMBER -> INTEGER .)
    INTEGER         reduce using rule 79 (NUMBER -> INTEGER .)
    FLOAT           reduce using rule 79 (NUMBER -> INTEGER .)
    TRUE            reduce using rule 79 (NUMBER -> INTEGER .)
    FALSE           reduce using rule 79 (NUMBER -> INTEGER .)
    $end            reduce using rule 79 (NUMBER -> INTEGER .)
    RPAREN          reduce using rule 79 (NUMBER -> INTEGER .)
    SEMI            reduce using rule 79 (NUMBER -> INTEGER .)
    RBRACE          reduce using rule 79 (NUMBER -> INTEGER .)


state 25

    (80) NUMBER -> FLOAT .

    MINUSMINUS      reduce using rule 80 (NUMBER -> FLOAT .)
    PLUSPLUS        reduce using rule 80 (NUMBER -> FLOAT .)
    TIMES           reduce using rule 80 (NUMBER -> FLOAT .)
    DIVIDE          reduce using rule 80 (NUMBER -> FLOAT .)
    MENOR           reduce using rule 80 (NUMBER -> FLOAT .)
    MENOREQUALS     reduce using rule 80 (NUMBER -> FLOAT .)
    MAIOR           reduce using rule 80 (NUMBER -> FLOAT .)
    MAIOREQUALS     reduce using rule 80 (NUMBER -> FLOAT .)
    DIFERENTE       reduce using rule 80 (NUMBER -> FLOAT .)
    EQUALITY        reduce using rule 80 (NUMBER -> FLOAT .)
    PLUS            reduce using rule 80 (NUMBER -> FLOAT .)
    MINUS           reduce using rule 80 (NUMBER -> FLOAT .)
    LOG             reduce using rule 80 (NUMBER -> FLOAT .)
    OU_LOGICO       reduce using rule 80 (NUMBER -> FLOAT .)
    TIMESX          reduce using rule 80 (NUMBER -> FLOAT .)
    IDENTIFIER      reduce using rule 80 (NUMBER -> FLOAT .)
    PRINT           reduce using rule 80 (NUMBER -> FLOAT .)
    READ            reduce using rule 80 (NUMBER -> FLOAT .)
    IF              reduce using rule 80 (NUMBER -> FLOAT .)
    FOR             reduce using rule 80 (NUMBER -> FLOAT .)
    WHILE           reduce using rule 80 (NUMBER -> FLOAT .)
    DO              reduce using rule 80 (NUMBER -> FLOAT .)
    LPAREN          reduce using rule 80 (NUMBER -> FLOAT .)
    INTEGER         reduce using rule 80 (NUMBER -> FLOAT .)
    FLOAT           reduce using rule 80 (NUMBER -> FLOAT .)
    TRUE            reduce using rule 80 (NUMBER -> FLOAT .)
    FALSE           reduce using rule 80 (NUMBER -> FLOAT .)
    $end            reduce using rule 80 (NUMBER -> FLOAT .)
    RPAREN          reduce using rule 80 (NUMBER -> FLOAT .)
    SEMI            reduce using rule 80 (NUMBER -> FLOAT .)
    RBRACE          reduce using rule 80 (NUMBER -> FLOAT .)


state 26

    (77) boolean -> TRUE .

    MINUSMINUS      reduce using rule 77 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 77 (boolean -> TRUE .)
    TIMES           reduce using rule 77 (boolean -> TRUE .)
    DIVIDE          reduce using rule 77 (boolean -> TRUE .)
    MENOR           reduce using rule 77 (boolean -> TRUE .)
    MENOREQUALS     reduce using rule 77 (boolean -> TRUE .)
    MAIOR           reduce using rule 77 (boolean -> TRUE .)
    MAIOREQUALS     reduce using rule 77 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 77 (boolean -> TRUE .)
    EQUALITY        reduce using rule 77 (boolean -> TRUE .)
    PLUS            reduce using rule 77 (boolean -> TRUE .)
    MINUS           reduce using rule 77 (boolean -> TRUE .)
    LOG             reduce using rule 77 (boolean -> TRUE .)
    OU_LOGICO       reduce using rule 77 (boolean -> TRUE .)
    TIMESX          reduce using rule 77 (boolean -> TRUE .)
    IDENTIFIER      reduce using rule 77 (boolean -> TRUE .)
    PRINT           reduce using rule 77 (boolean -> TRUE .)
    READ            reduce using rule 77 (boolean -> TRUE .)
    IF              reduce using rule 77 (boolean -> TRUE .)
    FOR             reduce using rule 77 (boolean -> TRUE .)
    WHILE           reduce using rule 77 (boolean -> TRUE .)
    DO              reduce using rule 77 (boolean -> TRUE .)
    LPAREN          reduce using rule 77 (boolean -> TRUE .)
    INTEGER         reduce using rule 77 (boolean -> TRUE .)
    FLOAT           reduce using rule 77 (boolean -> TRUE .)
    TRUE            reduce using rule 77 (boolean -> TRUE .)
    FALSE           reduce using rule 77 (boolean -> TRUE .)
    $end            reduce using rule 77 (boolean -> TRUE .)
    RPAREN          reduce using rule 77 (boolean -> TRUE .)
    SEMI            reduce using rule 77 (boolean -> TRUE .)
    RBRACE          reduce using rule 77 (boolean -> TRUE .)


state 27

    (78) boolean -> FALSE .

    MINUSMINUS      reduce using rule 78 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 78 (boolean -> FALSE .)
    TIMES           reduce using rule 78 (boolean -> FALSE .)
    DIVIDE          reduce using rule 78 (boolean -> FALSE .)
    MENOR           reduce using rule 78 (boolean -> FALSE .)
    MENOREQUALS     reduce using rule 78 (boolean -> FALSE .)
    MAIOR           reduce using rule 78 (boolean -> FALSE .)
    MAIOREQUALS     reduce using rule 78 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 78 (boolean -> FALSE .)
    EQUALITY        reduce using rule 78 (boolean -> FALSE .)
    PLUS            reduce using rule 78 (boolean -> FALSE .)
    MINUS           reduce using rule 78 (boolean -> FALSE .)
    LOG             reduce using rule 78 (boolean -> FALSE .)
    OU_LOGICO       reduce using rule 78 (boolean -> FALSE .)
    TIMESX          reduce using rule 78 (boolean -> FALSE .)
    IDENTIFIER      reduce using rule 78 (boolean -> FALSE .)
    PRINT           reduce using rule 78 (boolean -> FALSE .)
    READ            reduce using rule 78 (boolean -> FALSE .)
    IF              reduce using rule 78 (boolean -> FALSE .)
    FOR             reduce using rule 78 (boolean -> FALSE .)
    WHILE           reduce using rule 78 (boolean -> FALSE .)
    DO              reduce using rule 78 (boolean -> FALSE .)
    LPAREN          reduce using rule 78 (boolean -> FALSE .)
    INTEGER         reduce using rule 78 (boolean -> FALSE .)
    FLOAT           reduce using rule 78 (boolean -> FALSE .)
    TRUE            reduce using rule 78 (boolean -> FALSE .)
    FALSE           reduce using rule 78 (boolean -> FALSE .)
    $end            reduce using rule 78 (boolean -> FALSE .)
    RPAREN          reduce using rule 78 (boolean -> FALSE .)
    SEMI            reduce using rule 78 (boolean -> FALSE .)
    RBRACE          reduce using rule 78 (boolean -> FALSE .)


state 28

    (2) declaration_list -> declaration_list declaration .

    IDENTIFIER      reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    READ            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DO              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INTEGER         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    TRUE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FALSE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 29

    (52) expression -> expression LOG . expression
    (89) expression -> expression LOG . term
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 64
    term                           shift and go to state 65
    simple_expression              shift and go to state 13
    factor                         shift and go to state 23
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 30

    (53) expression -> expression OU_LOGICO . expression
    (90) expression -> expression OU_LOGICO . term
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 66
    term                           shift and go to state 67
    simple_expression              shift and go to state 13
    factor                         shift and go to state 23
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 31

    (84) expression -> expression PLUS . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 68
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 32

    (85) expression -> expression MINUS . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 70
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 33

    (86) expression -> expression TIMES . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 71
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 34

    (87) expression -> expression DIVIDE . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 72
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 35

    (88) expression -> expression TIMESX . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 73
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 36

    (22) var_declaration -> IDENTIFIER . var_declaration
    (23) var_declaration -> IDENTIFIER .
    (24) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER . ATRIBUTION NUMBER SEMI
    (26) var_declaration -> IDENTIFIER . ATRIBUTION boolean var_declaration
    (27) var_declaration -> IDENTIFIER . ATRIBUTION boolean SEMI
    (28) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER . ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER . ATRIBUTION simple_expression SEMI
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    PRINT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    READ            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    IF              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FOR             reduce using rule 23 (var_declaration -> IDENTIFIER .)
    WHILE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    DO              reduce using rule 23 (var_declaration -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    TRUE            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    FALSE           reduce using rule 23 (var_declaration -> IDENTIFIER .)
    $end            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    RBRACE          reduce using rule 23 (var_declaration -> IDENTIFIER .)
    SEMI            reduce using rule 23 (var_declaration -> IDENTIFIER .)
    ATRIBUTION      shift and go to state 38
    IDENTIFIER      shift and go to state 36

  ! IDENTIFIER      [ reduce using rule 23 (var_declaration -> IDENTIFIER .) ]

    var_declaration                shift and go to state 37

state 37

    (22) var_declaration -> IDENTIFIER var_declaration .

    IDENTIFIER      reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    PRINT           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    READ            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    IF              reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FOR             reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    WHILE           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    DO              reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    LPAREN          reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    INTEGER         reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FLOAT           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    TRUE            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    FALSE           reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    $end            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    RBRACE          reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)
    SEMI            reduce using rule 22 (var_declaration -> IDENTIFIER var_declaration .)


state 38

    (24) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER var_declaration
    (25) var_declaration -> IDENTIFIER ATRIBUTION . NUMBER SEMI
    (26) var_declaration -> IDENTIFIER ATRIBUTION . boolean var_declaration
    (27) var_declaration -> IDENTIFIER ATRIBUTION . boolean SEMI
    (28) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER var_declaration
    (29) var_declaration -> IDENTIFIER ATRIBUTION . IDENTIFIER SEMI
    (30) var_declaration -> IDENTIFIER ATRIBUTION . simple_expression SEMI
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN

    IDENTIFIER      shift and go to state 74
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    LPAREN          shift and go to state 15

    NUMBER                         shift and go to state 75
    boolean                        shift and go to state 76
    simple_expression              shift and go to state 77
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 39

    (49) expression -> IDENTIFIER EQUALITY . expression
    (51) expression -> IDENTIFIER EQUALITY . IDENTIFIER
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 78
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 79
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 40

    (76) factor -> IDENTIFIER LPAREN . args RPAREN
    (81) args -> . args_list
    (82) args -> . empty
    (83) args_list -> . expression
    (91) empty -> .
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    RPAREN          reduce using rule 91 (empty -> .)
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    args                           shift and go to state 80
    args_list                      shift and go to state 81
    empty                          shift and go to state 82
    expression                     shift and go to state 83
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 41

    (10) print_stmt -> PRINT LPAREN . STRING RPAREN SEMI declaration
    (11) print_stmt -> PRINT LPAREN . STRING RPAREN SEMI
    (12) print_stmt -> PRINT LPAREN . IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> PRINT LPAREN . IDENTIFIER RPAREN SEMI
    (14) print_stmt -> PRINT LPAREN . NUMBER RPAREN SEMI declaration
    (15) print_stmt -> PRINT LPAREN . NUMBER RPAREN SEMI
    (16) print_stmt -> PRINT LPAREN . boolean RPAREN SEMI declaration
    (17) print_stmt -> PRINT LPAREN . boolean RPAREN SEMI
    (18) print_stmt -> PRINT LPAREN . expression RPAREN SEMI declaration
    (19) print_stmt -> PRINT LPAREN . expression RPAREN SEMI
    (20) print_stmt -> PRINT LPAREN . RPAREN SEMI declaration
    (21) print_stmt -> PRINT LPAREN . RPAREN SEMI
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN

    STRING          shift and go to state 84
    IDENTIFIER      shift and go to state 86
    RPAREN          shift and go to state 85
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    LPAREN          shift and go to state 15

    NUMBER                         shift and go to state 87
    boolean                        shift and go to state 88
    expression                     shift and go to state 89
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23

state 42

    (72) factor -> LPAREN expression . RPAREN
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 90
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 43

    (49) expression -> IDENTIFIER . EQUALITY expression
    (51) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    EQUALITY        shift and go to state 39
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 73 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 73 (factor -> IDENTIFIER .)
    LOG             reduce using rule 73 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 73 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 73 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 73 (factor -> IDENTIFIER .)
    PRINT           reduce using rule 73 (factor -> IDENTIFIER .)
    READ            reduce using rule 73 (factor -> IDENTIFIER .)
    IF              reduce using rule 73 (factor -> IDENTIFIER .)
    FOR             reduce using rule 73 (factor -> IDENTIFIER .)
    WHILE           reduce using rule 73 (factor -> IDENTIFIER .)
    DO              reduce using rule 73 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 73 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 73 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 73 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 73 (factor -> IDENTIFIER .)
    $end            reduce using rule 73 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 73 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40

  ! EQUALITY        [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]


state 44

    (47) read_stmt -> READ LPAREN . STRING RPAREN SEMI declaration
    (48) read_stmt -> READ LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 91


state 45

    (37) selection_stmt -> IF LPAREN . expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN . expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN . expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> IF LPAREN . expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 92
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 46

    (41) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

    IDENTIFIER      shift and go to state 36

    var_declaration                shift and go to state 93

state 47

    (54) simple_expression -> additive_expression relop . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    additive_expression            shift and go to state 94
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 48

    (62) additive_expression -> additive_expression addop . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    term                           shift and go to state 95
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 49

    (56) relop -> MENOR .

    LPAREN          reduce using rule 56 (relop -> MENOR .)
    IDENTIFIER      reduce using rule 56 (relop -> MENOR .)
    INTEGER         reduce using rule 56 (relop -> MENOR .)
    FLOAT           reduce using rule 56 (relop -> MENOR .)
    TRUE            reduce using rule 56 (relop -> MENOR .)
    FALSE           reduce using rule 56 (relop -> MENOR .)


state 50

    (57) relop -> MENOREQUALS .

    LPAREN          reduce using rule 57 (relop -> MENOREQUALS .)
    IDENTIFIER      reduce using rule 57 (relop -> MENOREQUALS .)
    INTEGER         reduce using rule 57 (relop -> MENOREQUALS .)
    FLOAT           reduce using rule 57 (relop -> MENOREQUALS .)
    TRUE            reduce using rule 57 (relop -> MENOREQUALS .)
    FALSE           reduce using rule 57 (relop -> MENOREQUALS .)


state 51

    (58) relop -> MAIOR .

    LPAREN          reduce using rule 58 (relop -> MAIOR .)
    IDENTIFIER      reduce using rule 58 (relop -> MAIOR .)
    INTEGER         reduce using rule 58 (relop -> MAIOR .)
    FLOAT           reduce using rule 58 (relop -> MAIOR .)
    TRUE            reduce using rule 58 (relop -> MAIOR .)
    FALSE           reduce using rule 58 (relop -> MAIOR .)


state 52

    (59) relop -> MAIOREQUALS .

    LPAREN          reduce using rule 59 (relop -> MAIOREQUALS .)
    IDENTIFIER      reduce using rule 59 (relop -> MAIOREQUALS .)
    INTEGER         reduce using rule 59 (relop -> MAIOREQUALS .)
    FLOAT           reduce using rule 59 (relop -> MAIOREQUALS .)
    TRUE            reduce using rule 59 (relop -> MAIOREQUALS .)
    FALSE           reduce using rule 59 (relop -> MAIOREQUALS .)


state 53

    (60) relop -> DIFERENTE .

    LPAREN          reduce using rule 60 (relop -> DIFERENTE .)
    IDENTIFIER      reduce using rule 60 (relop -> DIFERENTE .)
    INTEGER         reduce using rule 60 (relop -> DIFERENTE .)
    FLOAT           reduce using rule 60 (relop -> DIFERENTE .)
    TRUE            reduce using rule 60 (relop -> DIFERENTE .)
    FALSE           reduce using rule 60 (relop -> DIFERENTE .)


state 54

    (61) relop -> EQUALITY .

    LPAREN          reduce using rule 61 (relop -> EQUALITY .)
    IDENTIFIER      reduce using rule 61 (relop -> EQUALITY .)
    INTEGER         reduce using rule 61 (relop -> EQUALITY .)
    FLOAT           reduce using rule 61 (relop -> EQUALITY .)
    TRUE            reduce using rule 61 (relop -> EQUALITY .)
    FALSE           reduce using rule 61 (relop -> EQUALITY .)


state 55

    (66) addop -> PLUS .

    LPAREN          reduce using rule 66 (addop -> PLUS .)
    IDENTIFIER      reduce using rule 66 (addop -> PLUS .)
    INTEGER         reduce using rule 66 (addop -> PLUS .)
    FLOAT           reduce using rule 66 (addop -> PLUS .)
    TRUE            reduce using rule 66 (addop -> PLUS .)
    FALSE           reduce using rule 66 (addop -> PLUS .)


state 56

    (67) addop -> MINUS .

    LPAREN          reduce using rule 67 (addop -> MINUS .)
    IDENTIFIER      reduce using rule 67 (addop -> MINUS .)
    INTEGER         reduce using rule 67 (addop -> MINUS .)
    FLOAT           reduce using rule 67 (addop -> MINUS .)
    TRUE            reduce using rule 67 (addop -> MINUS .)
    FALSE           reduce using rule 67 (addop -> MINUS .)


state 57

    (43) iteration_stmt -> WHILE LPAREN . expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN . expression RPAREN LBRACE print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 96
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 58

    (45) iteration_stmt -> DO LBRACE . statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> DO LBRACE . print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    PRINT           shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    statement                      shift and go to state 97
    expression                     shift and go to state 98
    print_stmt                     shift and go to state 99
    expression_stmt                shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    read_stmt                      shift and go to state 103
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    additive_expression            shift and go to state 19
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 59

    (64) additive_expression -> term MINUSMINUS .

    MENOR           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    MENOREQUALS     reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    MAIOR           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    MAIOREQUALS     reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    DIFERENTE       reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    EQUALITY        reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    LOG             reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    OU_LOGICO       reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    TIMES           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    DIVIDE          reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    TIMESX          reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    IDENTIFIER      reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    PRINT           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    READ            reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    IF              reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    FOR             reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    WHILE           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    DO              reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    LPAREN          reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    INTEGER         reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    FLOAT           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    TRUE            reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    FALSE           reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    $end            reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 64 (additive_expression -> term MINUSMINUS .)
    RBRACE          reduce using rule 64 (additive_expression -> term MINUSMINUS .)


state 60

    (65) additive_expression -> term PLUSPLUS .

    MENOR           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    MENOREQUALS     reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    MAIOR           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    MAIOREQUALS     reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    DIFERENTE       reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    EQUALITY        reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    LOG             reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    OU_LOGICO       reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    TIMES           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    DIVIDE          reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    TIMESX          reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    IDENTIFIER      reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    PRINT           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    READ            reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    IF              reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    FOR             reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    WHILE           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    DO              reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    LPAREN          reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    INTEGER         reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    FLOAT           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    TRUE            reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    FALSE           reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    $end            reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 65 (additive_expression -> term PLUSPLUS .)
    RBRACE          reduce using rule 65 (additive_expression -> term PLUSPLUS .)


state 61

    (68) term -> term mulop . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    factor                         shift and go to state 104
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 62

    (70) mulop -> TIMES .

    LPAREN          reduce using rule 70 (mulop -> TIMES .)
    IDENTIFIER      reduce using rule 70 (mulop -> TIMES .)
    INTEGER         reduce using rule 70 (mulop -> TIMES .)
    FLOAT           reduce using rule 70 (mulop -> TIMES .)
    TRUE            reduce using rule 70 (mulop -> TIMES .)
    FALSE           reduce using rule 70 (mulop -> TIMES .)


state 63

    (71) mulop -> DIVIDE .

    LPAREN          reduce using rule 71 (mulop -> DIVIDE .)
    IDENTIFIER      reduce using rule 71 (mulop -> DIVIDE .)
    INTEGER         reduce using rule 71 (mulop -> DIVIDE .)
    FLOAT           reduce using rule 71 (mulop -> DIVIDE .)
    TRUE            reduce using rule 71 (mulop -> DIVIDE .)
    FALSE           reduce using rule 71 (mulop -> DIVIDE .)


state 64

    (52) expression -> expression LOG expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 52 (expression -> expression LOG expression .)
    OU_LOGICO       reduce using rule 52 (expression -> expression LOG expression .)
    TIMESX          reduce using rule 52 (expression -> expression LOG expression .)
    IDENTIFIER      reduce using rule 52 (expression -> expression LOG expression .)
    PRINT           reduce using rule 52 (expression -> expression LOG expression .)
    READ            reduce using rule 52 (expression -> expression LOG expression .)
    IF              reduce using rule 52 (expression -> expression LOG expression .)
    FOR             reduce using rule 52 (expression -> expression LOG expression .)
    WHILE           reduce using rule 52 (expression -> expression LOG expression .)
    DO              reduce using rule 52 (expression -> expression LOG expression .)
    LPAREN          reduce using rule 52 (expression -> expression LOG expression .)
    INTEGER         reduce using rule 52 (expression -> expression LOG expression .)
    FLOAT           reduce using rule 52 (expression -> expression LOG expression .)
    TRUE            reduce using rule 52 (expression -> expression LOG expression .)
    FALSE           reduce using rule 52 (expression -> expression LOG expression .)
    $end            reduce using rule 52 (expression -> expression LOG expression .)
    RPAREN          reduce using rule 52 (expression -> expression LOG expression .)
    SEMI            reduce using rule 52 (expression -> expression LOG expression .)
    RBRACE          reduce using rule 52 (expression -> expression LOG expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 52 (expression -> expression LOG expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression LOG expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression LOG expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression LOG expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 65

    (89) expression -> expression LOG term .
    (68) term -> term . mulop factor
    (63) additive_expression -> term .
    (64) additive_expression -> term . MINUSMINUS
    (65) additive_expression -> term . PLUSPLUS
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

  ! reduce/reduce conflict for PLUS resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for LOG resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMES resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMESX resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for PRINT resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for READ resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for IF resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FOR resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for DO resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for INTEGER resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FLOAT resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TRUE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FALSE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for $end resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for SEMI resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for RBRACE resolved using rule 63 (additive_expression -> term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 63 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 63 (additive_expression -> term .)
    MAIOR           reduce using rule 63 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 63 (additive_expression -> term .)
    DIFERENTE       reduce using rule 63 (additive_expression -> term .)
    EQUALITY        reduce using rule 63 (additive_expression -> term .)
    PLUS            reduce using rule 63 (additive_expression -> term .)
    MINUS           reduce using rule 63 (additive_expression -> term .)
    LOG             reduce using rule 63 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 63 (additive_expression -> term .)
    TIMESX          reduce using rule 63 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 63 (additive_expression -> term .)
    PRINT           reduce using rule 63 (additive_expression -> term .)
    READ            reduce using rule 63 (additive_expression -> term .)
    IF              reduce using rule 63 (additive_expression -> term .)
    FOR             reduce using rule 63 (additive_expression -> term .)
    WHILE           reduce using rule 63 (additive_expression -> term .)
    DO              reduce using rule 63 (additive_expression -> term .)
    LPAREN          reduce using rule 63 (additive_expression -> term .)
    INTEGER         reduce using rule 63 (additive_expression -> term .)
    FLOAT           reduce using rule 63 (additive_expression -> term .)
    TRUE            reduce using rule 63 (additive_expression -> term .)
    FALSE           reduce using rule 63 (additive_expression -> term .)
    $end            reduce using rule 63 (additive_expression -> term .)
    RPAREN          reduce using rule 63 (additive_expression -> term .)
    SEMI            reduce using rule 63 (additive_expression -> term .)
    RBRACE          reduce using rule 63 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! LOG             [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! OU_LOGICO       [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! PLUS            [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! MINUS           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! TIMES           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! TIMESX          [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! IDENTIFIER      [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! PRINT           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! READ            [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! IF              [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! FOR             [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! WHILE           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! DO              [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! LPAREN          [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! INTEGER         [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! FLOAT           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! TRUE            [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! FALSE           [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! $end            [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! RPAREN          [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! SEMI            [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! RBRACE          [ reduce using rule 89 (expression -> expression LOG term .) ]
  ! TIMES           [ reduce using rule 63 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 63 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 66

    (53) expression -> expression OU_LOGICO expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    OU_LOGICO       reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    TIMESX          reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    IDENTIFIER      reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    PRINT           reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    READ            reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    IF              reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    FOR             reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    WHILE           reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    DO              reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    LPAREN          reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    INTEGER         reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    FLOAT           reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    TRUE            reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    FALSE           reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    $end            reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    RPAREN          reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    SEMI            reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    RBRACE          reduce using rule 53 (expression -> expression OU_LOGICO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 53 (expression -> expression OU_LOGICO expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression OU_LOGICO expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression OU_LOGICO expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression OU_LOGICO expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 67

    (90) expression -> expression OU_LOGICO term .
    (68) term -> term . mulop factor
    (63) additive_expression -> term .
    (64) additive_expression -> term . MINUSMINUS
    (65) additive_expression -> term . PLUSPLUS
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

  ! reduce/reduce conflict for PLUS resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for LOG resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMES resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TIMESX resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for PRINT resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for READ resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for IF resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FOR resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for DO resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for INTEGER resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FLOAT resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for TRUE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for FALSE resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for $end resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for SEMI resolved using rule 63 (additive_expression -> term .)
  ! reduce/reduce conflict for RBRACE resolved using rule 63 (additive_expression -> term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 63 (additive_expression -> term .)
    MENOREQUALS     reduce using rule 63 (additive_expression -> term .)
    MAIOR           reduce using rule 63 (additive_expression -> term .)
    MAIOREQUALS     reduce using rule 63 (additive_expression -> term .)
    DIFERENTE       reduce using rule 63 (additive_expression -> term .)
    EQUALITY        reduce using rule 63 (additive_expression -> term .)
    PLUS            reduce using rule 63 (additive_expression -> term .)
    MINUS           reduce using rule 63 (additive_expression -> term .)
    LOG             reduce using rule 63 (additive_expression -> term .)
    OU_LOGICO       reduce using rule 63 (additive_expression -> term .)
    TIMESX          reduce using rule 63 (additive_expression -> term .)
    IDENTIFIER      reduce using rule 63 (additive_expression -> term .)
    PRINT           reduce using rule 63 (additive_expression -> term .)
    READ            reduce using rule 63 (additive_expression -> term .)
    IF              reduce using rule 63 (additive_expression -> term .)
    FOR             reduce using rule 63 (additive_expression -> term .)
    WHILE           reduce using rule 63 (additive_expression -> term .)
    DO              reduce using rule 63 (additive_expression -> term .)
    LPAREN          reduce using rule 63 (additive_expression -> term .)
    INTEGER         reduce using rule 63 (additive_expression -> term .)
    FLOAT           reduce using rule 63 (additive_expression -> term .)
    TRUE            reduce using rule 63 (additive_expression -> term .)
    FALSE           reduce using rule 63 (additive_expression -> term .)
    $end            reduce using rule 63 (additive_expression -> term .)
    RPAREN          reduce using rule 63 (additive_expression -> term .)
    SEMI            reduce using rule 63 (additive_expression -> term .)
    RBRACE          reduce using rule 63 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 59
    PLUSPLUS        shift and go to state 60
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! LOG             [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! OU_LOGICO       [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! PLUS            [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! MINUS           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! TIMES           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! TIMESX          [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! IDENTIFIER      [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! PRINT           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! READ            [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! IF              [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! FOR             [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! WHILE           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! DO              [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! LPAREN          [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! INTEGER         [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! FLOAT           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! TRUE            [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! FALSE           [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! $end            [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! RPAREN          [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! SEMI            [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! RBRACE          [ reduce using rule 90 (expression -> expression OU_LOGICO term .) ]
  ! TIMES           [ reduce using rule 63 (additive_expression -> term .) ]
  ! DIVIDE          [ reduce using rule 63 (additive_expression -> term .) ]

    mulop                          shift and go to state 61

state 68

    (84) expression -> expression PLUS term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

    LOG             reduce using rule 84 (expression -> expression PLUS term .)
    OU_LOGICO       reduce using rule 84 (expression -> expression PLUS term .)
    PLUS            reduce using rule 84 (expression -> expression PLUS term .)
    MINUS           reduce using rule 84 (expression -> expression PLUS term .)
    TIMESX          reduce using rule 84 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 84 (expression -> expression PLUS term .)
    PRINT           reduce using rule 84 (expression -> expression PLUS term .)
    READ            reduce using rule 84 (expression -> expression PLUS term .)
    IF              reduce using rule 84 (expression -> expression PLUS term .)
    FOR             reduce using rule 84 (expression -> expression PLUS term .)
    WHILE           reduce using rule 84 (expression -> expression PLUS term .)
    DO              reduce using rule 84 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 84 (expression -> expression PLUS term .)
    INTEGER         reduce using rule 84 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 84 (expression -> expression PLUS term .)
    TRUE            reduce using rule 84 (expression -> expression PLUS term .)
    FALSE           reduce using rule 84 (expression -> expression PLUS term .)
    $end            reduce using rule 84 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 84 (expression -> expression PLUS term .)
    SEMI            reduce using rule 84 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 84 (expression -> expression PLUS term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 84 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 84 (expression -> expression PLUS term .) ]

    mulop                          shift and go to state 61

state 69

    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 73 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 73 (factor -> IDENTIFIER .)
    LOG             reduce using rule 73 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 73 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 73 (factor -> IDENTIFIER .)
    PRINT           reduce using rule 73 (factor -> IDENTIFIER .)
    READ            reduce using rule 73 (factor -> IDENTIFIER .)
    IF              reduce using rule 73 (factor -> IDENTIFIER .)
    FOR             reduce using rule 73 (factor -> IDENTIFIER .)
    WHILE           reduce using rule 73 (factor -> IDENTIFIER .)
    DO              reduce using rule 73 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 73 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 73 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 73 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 73 (factor -> IDENTIFIER .)
    $end            reduce using rule 73 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 73 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 73 (factor -> IDENTIFIER .)
    RBRACE          reduce using rule 73 (factor -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    EQUALITY        reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40

  ! LPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]


state 70

    (85) expression -> expression MINUS term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

    LOG             reduce using rule 85 (expression -> expression MINUS term .)
    OU_LOGICO       reduce using rule 85 (expression -> expression MINUS term .)
    PLUS            reduce using rule 85 (expression -> expression MINUS term .)
    MINUS           reduce using rule 85 (expression -> expression MINUS term .)
    TIMESX          reduce using rule 85 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 85 (expression -> expression MINUS term .)
    PRINT           reduce using rule 85 (expression -> expression MINUS term .)
    READ            reduce using rule 85 (expression -> expression MINUS term .)
    IF              reduce using rule 85 (expression -> expression MINUS term .)
    FOR             reduce using rule 85 (expression -> expression MINUS term .)
    WHILE           reduce using rule 85 (expression -> expression MINUS term .)
    DO              reduce using rule 85 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 85 (expression -> expression MINUS term .)
    INTEGER         reduce using rule 85 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 85 (expression -> expression MINUS term .)
    TRUE            reduce using rule 85 (expression -> expression MINUS term .)
    FALSE           reduce using rule 85 (expression -> expression MINUS term .)
    $end            reduce using rule 85 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 85 (expression -> expression MINUS term .)
    SEMI            reduce using rule 85 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 85 (expression -> expression MINUS term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 85 (expression -> expression MINUS term .) ]
  ! DIVIDE          [ reduce using rule 85 (expression -> expression MINUS term .) ]

    mulop                          shift and go to state 61

state 71

    (86) expression -> expression TIMES term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

    LOG             reduce using rule 86 (expression -> expression TIMES term .)
    OU_LOGICO       reduce using rule 86 (expression -> expression TIMES term .)
    PLUS            reduce using rule 86 (expression -> expression TIMES term .)
    MINUS           reduce using rule 86 (expression -> expression TIMES term .)
    TIMES           reduce using rule 86 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 86 (expression -> expression TIMES term .)
    TIMESX          reduce using rule 86 (expression -> expression TIMES term .)
    IDENTIFIER      reduce using rule 86 (expression -> expression TIMES term .)
    PRINT           reduce using rule 86 (expression -> expression TIMES term .)
    READ            reduce using rule 86 (expression -> expression TIMES term .)
    IF              reduce using rule 86 (expression -> expression TIMES term .)
    FOR             reduce using rule 86 (expression -> expression TIMES term .)
    WHILE           reduce using rule 86 (expression -> expression TIMES term .)
    DO              reduce using rule 86 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 86 (expression -> expression TIMES term .)
    INTEGER         reduce using rule 86 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 86 (expression -> expression TIMES term .)
    TRUE            reduce using rule 86 (expression -> expression TIMES term .)
    FALSE           reduce using rule 86 (expression -> expression TIMES term .)
    $end            reduce using rule 86 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 86 (expression -> expression TIMES term .)
    SEMI            reduce using rule 86 (expression -> expression TIMES term .)
    RBRACE          reduce using rule 86 (expression -> expression TIMES term .)

  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]

    mulop                          shift and go to state 61

state 72

    (87) expression -> expression DIVIDE term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

    LOG             reduce using rule 87 (expression -> expression DIVIDE term .)
    OU_LOGICO       reduce using rule 87 (expression -> expression DIVIDE term .)
    PLUS            reduce using rule 87 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 87 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 87 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 87 (expression -> expression DIVIDE term .)
    TIMESX          reduce using rule 87 (expression -> expression DIVIDE term .)
    IDENTIFIER      reduce using rule 87 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 87 (expression -> expression DIVIDE term .)
    READ            reduce using rule 87 (expression -> expression DIVIDE term .)
    IF              reduce using rule 87 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 87 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 87 (expression -> expression DIVIDE term .)
    DO              reduce using rule 87 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 87 (expression -> expression DIVIDE term .)
    INTEGER         reduce using rule 87 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 87 (expression -> expression DIVIDE term .)
    TRUE            reduce using rule 87 (expression -> expression DIVIDE term .)
    FALSE           reduce using rule 87 (expression -> expression DIVIDE term .)
    $end            reduce using rule 87 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 87 (expression -> expression DIVIDE term .)
    SEMI            reduce using rule 87 (expression -> expression DIVIDE term .)
    RBRACE          reduce using rule 87 (expression -> expression DIVIDE term .)

  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]

    mulop                          shift and go to state 61

state 73

    (88) expression -> expression TIMESX term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LOG             reduce using rule 88 (expression -> expression TIMESX term .)
    OU_LOGICO       reduce using rule 88 (expression -> expression TIMESX term .)
    PLUS            reduce using rule 88 (expression -> expression TIMESX term .)
    MINUS           reduce using rule 88 (expression -> expression TIMESX term .)
    TIMESX          reduce using rule 88 (expression -> expression TIMESX term .)
    IDENTIFIER      reduce using rule 88 (expression -> expression TIMESX term .)
    PRINT           reduce using rule 88 (expression -> expression TIMESX term .)
    READ            reduce using rule 88 (expression -> expression TIMESX term .)
    IF              reduce using rule 88 (expression -> expression TIMESX term .)
    FOR             reduce using rule 88 (expression -> expression TIMESX term .)
    WHILE           reduce using rule 88 (expression -> expression TIMESX term .)
    DO              reduce using rule 88 (expression -> expression TIMESX term .)
    LPAREN          reduce using rule 88 (expression -> expression TIMESX term .)
    INTEGER         reduce using rule 88 (expression -> expression TIMESX term .)
    FLOAT           reduce using rule 88 (expression -> expression TIMESX term .)
    TRUE            reduce using rule 88 (expression -> expression TIMESX term .)
    FALSE           reduce using rule 88 (expression -> expression TIMESX term .)
    $end            reduce using rule 88 (expression -> expression TIMESX term .)
    RPAREN          reduce using rule 88 (expression -> expression TIMESX term .)
    SEMI            reduce using rule 88 (expression -> expression TIMESX term .)
    RBRACE          reduce using rule 88 (expression -> expression TIMESX term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 88 (expression -> expression TIMESX term .) ]
  ! DIVIDE          [ reduce using rule 88 (expression -> expression TIMESX term .) ]

    mulop                          shift and go to state 61

state 74

    (28) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER . var_declaration
    (29) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER . SEMI
    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 106
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 73 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    EQUALITY        reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 73 (factor -> IDENTIFIER .) ]

    var_declaration                shift and go to state 105

state 75

    (24) var_declaration -> IDENTIFIER ATRIBUTION NUMBER . var_declaration
    (25) var_declaration -> IDENTIFIER ATRIBUTION NUMBER . SEMI
    (74) factor -> NUMBER .
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 108
    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MENOR           reduce using rule 74 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    MAIOR           reduce using rule 74 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 74 (factor -> NUMBER .)
    EQUALITY        reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 74 (factor -> NUMBER .) ]

    var_declaration                shift and go to state 107

state 76

    (26) var_declaration -> IDENTIFIER ATRIBUTION boolean . var_declaration
    (27) var_declaration -> IDENTIFIER ATRIBUTION boolean . SEMI
    (75) factor -> boolean .
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 110
    MINUSMINUS      reduce using rule 75 (factor -> boolean .)
    PLUSPLUS        reduce using rule 75 (factor -> boolean .)
    TIMES           reduce using rule 75 (factor -> boolean .)
    DIVIDE          reduce using rule 75 (factor -> boolean .)
    MENOR           reduce using rule 75 (factor -> boolean .)
    MENOREQUALS     reduce using rule 75 (factor -> boolean .)
    MAIOR           reduce using rule 75 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 75 (factor -> boolean .)
    DIFERENTE       reduce using rule 75 (factor -> boolean .)
    EQUALITY        reduce using rule 75 (factor -> boolean .)
    PLUS            reduce using rule 75 (factor -> boolean .)
    MINUS           reduce using rule 75 (factor -> boolean .)
    IDENTIFIER      shift and go to state 36

  ! SEMI            [ reduce using rule 75 (factor -> boolean .) ]

    var_declaration                shift and go to state 109

state 77

    (30) var_declaration -> IDENTIFIER ATRIBUTION simple_expression . SEMI

    SEMI            shift and go to state 111


state 78

    (51) expression -> IDENTIFIER EQUALITY IDENTIFIER .
    (49) expression -> IDENTIFIER . EQUALITY expression
    (51) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN

  ! reduce/reduce conflict for TIMES resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! shift/reduce conflict for EQUALITY resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for LOG resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for OU_LOGICO resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for TIMESX resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for READ resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for IF resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for DO resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for TRUE resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for FALSE resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for SEMI resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
  ! shift/reduce conflict for LPAREN resolved as shift
    LOG             reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    OU_LOGICO       reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    PLUS            reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    MINUS           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TIMES           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    DIVIDE          reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TIMESX          reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    IDENTIFIER      reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    PRINT           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    READ            reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    IF              reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FOR             reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    WHILE           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    DO              reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    INTEGER         reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FLOAT           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    TRUE            reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    FALSE           reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    $end            reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    RPAREN          reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    SEMI            reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    RBRACE          reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .)
    EQUALITY        shift and go to state 39
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40

  ! LPAREN          [ reduce using rule 51 (expression -> IDENTIFIER EQUALITY IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! EQUALITY        [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! LOG             [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! OU_LOGICO       [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! TIMESX          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! IDENTIFIER      [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! PRINT           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! READ            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! IF              [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FOR             [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! WHILE           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! DO              [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! INTEGER         [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FLOAT           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! TRUE            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! FALSE           [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! SEMI            [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 73 (factor -> IDENTIFIER .) ]


state 79

    (49) expression -> IDENTIFIER EQUALITY expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    LOG             reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    OU_LOGICO       reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    TIMESX          reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    IDENTIFIER      reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    PRINT           reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    READ            reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    IF              reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    FOR             reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    WHILE           reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    DO              reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    LPAREN          reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    INTEGER         reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    FLOAT           reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    TRUE            reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    FALSE           reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    $end            reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    RPAREN          reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    SEMI            reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    RBRACE          reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> IDENTIFIER EQUALITY expression .) ]
  ! LOG             [ shift and go to state 29 ]
  ! OU_LOGICO       [ shift and go to state 30 ]
  ! TIMESX          [ shift and go to state 35 ]


state 80

    (76) factor -> IDENTIFIER LPAREN args . RPAREN

    RPAREN          shift and go to state 112


state 81

    (81) args -> args_list .

    RPAREN          reduce using rule 81 (args -> args_list .)


state 82

    (82) args -> empty .

    RPAREN          reduce using rule 82 (args -> empty .)


state 83

    (83) args_list -> expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          reduce using rule 83 (args_list -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 84

    (10) print_stmt -> PRINT LPAREN STRING . RPAREN SEMI declaration
    (11) print_stmt -> PRINT LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 113


state 85

    (20) print_stmt -> PRINT LPAREN RPAREN . SEMI declaration
    (21) print_stmt -> PRINT LPAREN RPAREN . SEMI

    SEMI            shift and go to state 114


state 86

    (12) print_stmt -> PRINT LPAREN IDENTIFIER . RPAREN SEMI declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER . RPAREN SEMI
    (49) expression -> IDENTIFIER . EQUALITY expression
    (51) expression -> IDENTIFIER . EQUALITY IDENTIFIER
    (73) factor -> IDENTIFIER .
    (76) factor -> IDENTIFIER . LPAREN args RPAREN

  ! shift/reduce conflict for EQUALITY resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 115
    EQUALITY        shift and go to state 39
    MINUSMINUS      reduce using rule 73 (factor -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 73 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 73 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 73 (factor -> IDENTIFIER .)
    MENOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MENOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOR           reduce using rule 73 (factor -> IDENTIFIER .)
    MAIOREQUALS     reduce using rule 73 (factor -> IDENTIFIER .)
    DIFERENTE       reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    LOG             reduce using rule 73 (factor -> IDENTIFIER .)
    OU_LOGICO       reduce using rule 73 (factor -> IDENTIFIER .)
    TIMESX          reduce using rule 73 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 40

  ! EQUALITY        [ reduce using rule 73 (factor -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 73 (factor -> IDENTIFIER .) ]


state 87

    (14) print_stmt -> PRINT LPAREN NUMBER . RPAREN SEMI declaration
    (15) print_stmt -> PRINT LPAREN NUMBER . RPAREN SEMI
    (74) factor -> NUMBER .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 116
    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MENOR           reduce using rule 74 (factor -> NUMBER .)
    MENOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    MAIOR           reduce using rule 74 (factor -> NUMBER .)
    MAIOREQUALS     reduce using rule 74 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 74 (factor -> NUMBER .)
    EQUALITY        reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    LOG             reduce using rule 74 (factor -> NUMBER .)
    OU_LOGICO       reduce using rule 74 (factor -> NUMBER .)
    TIMESX          reduce using rule 74 (factor -> NUMBER .)

  ! RPAREN          [ reduce using rule 74 (factor -> NUMBER .) ]


state 88

    (16) print_stmt -> PRINT LPAREN boolean . RPAREN SEMI declaration
    (17) print_stmt -> PRINT LPAREN boolean . RPAREN SEMI
    (75) factor -> boolean .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 117
    MINUSMINUS      reduce using rule 75 (factor -> boolean .)
    PLUSPLUS        reduce using rule 75 (factor -> boolean .)
    TIMES           reduce using rule 75 (factor -> boolean .)
    DIVIDE          reduce using rule 75 (factor -> boolean .)
    MENOR           reduce using rule 75 (factor -> boolean .)
    MENOREQUALS     reduce using rule 75 (factor -> boolean .)
    MAIOR           reduce using rule 75 (factor -> boolean .)
    MAIOREQUALS     reduce using rule 75 (factor -> boolean .)
    DIFERENTE       reduce using rule 75 (factor -> boolean .)
    EQUALITY        reduce using rule 75 (factor -> boolean .)
    PLUS            reduce using rule 75 (factor -> boolean .)
    MINUS           reduce using rule 75 (factor -> boolean .)
    LOG             reduce using rule 75 (factor -> boolean .)
    OU_LOGICO       reduce using rule 75 (factor -> boolean .)
    TIMESX          reduce using rule 75 (factor -> boolean .)

  ! RPAREN          [ reduce using rule 75 (factor -> boolean .) ]


state 89

    (18) print_stmt -> PRINT LPAREN expression . RPAREN SEMI declaration
    (19) print_stmt -> PRINT LPAREN expression . RPAREN SEMI
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 118
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 90

    (72) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MENOR           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MENOREQUALS     reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MAIOR           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MAIOREQUALS     reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    DIFERENTE       reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    LOG             reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    OU_LOGICO       reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    TIMESX          reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    READ            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 72 (factor -> LPAREN expression RPAREN .)


state 91

    (47) read_stmt -> READ LPAREN STRING . RPAREN SEMI declaration
    (48) read_stmt -> READ LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 119


state 92

    (37) selection_stmt -> IF LPAREN expression . RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression . RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression . RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> IF LPAREN expression . RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 120
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 93

    (41) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 121
    additive_expression            shift and go to state 19
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 94

    (54) simple_expression -> additive_expression relop additive_expression .
    (62) additive_expression -> additive_expression . addop term
    (66) addop -> . PLUS
    (67) addop -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOG             reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    OU_LOGICO       reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    TIMES           reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    DIVIDE          reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    TIMESX          reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    IDENTIFIER      reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    PRINT           reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    READ            reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    IF              reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    FOR             reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    WHILE           reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    DO              reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    LPAREN          reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    INTEGER         reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    FLOAT           reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    TRUE            reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    FALSE           reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    $end            reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    SEMI            reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    RBRACE          reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

  ! PLUS            [ reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .) ]
  ! MINUS           [ reduce using rule 54 (simple_expression -> additive_expression relop additive_expression .) ]

    addop                          shift and go to state 48

state 95

    (62) additive_expression -> additive_expression addop term .
    (68) term -> term . mulop factor
    (70) mulop -> . TIMES
    (71) mulop -> . DIVIDE

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MENOR           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    MENOREQUALS     reduce using rule 62 (additive_expression -> additive_expression addop term .)
    MAIOR           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    MAIOREQUALS     reduce using rule 62 (additive_expression -> additive_expression addop term .)
    DIFERENTE       reduce using rule 62 (additive_expression -> additive_expression addop term .)
    EQUALITY        reduce using rule 62 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 62 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    LOG             reduce using rule 62 (additive_expression -> additive_expression addop term .)
    OU_LOGICO       reduce using rule 62 (additive_expression -> additive_expression addop term .)
    TIMESX          reduce using rule 62 (additive_expression -> additive_expression addop term .)
    IDENTIFIER      reduce using rule 62 (additive_expression -> additive_expression addop term .)
    PRINT           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    READ            reduce using rule 62 (additive_expression -> additive_expression addop term .)
    IF              reduce using rule 62 (additive_expression -> additive_expression addop term .)
    FOR             reduce using rule 62 (additive_expression -> additive_expression addop term .)
    WHILE           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    DO              reduce using rule 62 (additive_expression -> additive_expression addop term .)
    LPAREN          reduce using rule 62 (additive_expression -> additive_expression addop term .)
    INTEGER         reduce using rule 62 (additive_expression -> additive_expression addop term .)
    FLOAT           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    TRUE            reduce using rule 62 (additive_expression -> additive_expression addop term .)
    FALSE           reduce using rule 62 (additive_expression -> additive_expression addop term .)
    $end            reduce using rule 62 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 62 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 62 (additive_expression -> additive_expression addop term .)
    RBRACE          reduce using rule 62 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 62 (additive_expression -> additive_expression addop term .) ]
  ! DIVIDE          [ reduce using rule 62 (additive_expression -> additive_expression addop term .) ]

    mulop                          shift and go to state 61

state 96

    (43) iteration_stmt -> WHILE LPAREN expression . RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression . RPAREN LBRACE print_stmt RBRACE
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 122
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 97

    (45) iteration_stmt -> DO LBRACE statement . SEMI RBRACE WHILE LPAREN expression RPAREN SEMI

    SEMI            shift and go to state 123


state 98

    (36) expression_stmt -> expression .
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    SEMI            reduce using rule 36 (expression_stmt -> expression .)
    IDENTIFIER      reduce using rule 36 (expression_stmt -> expression .)
    PRINT           reduce using rule 36 (expression_stmt -> expression .)
    READ            reduce using rule 36 (expression_stmt -> expression .)
    IF              reduce using rule 36 (expression_stmt -> expression .)
    FOR             reduce using rule 36 (expression_stmt -> expression .)
    WHILE           reduce using rule 36 (expression_stmt -> expression .)
    DO              reduce using rule 36 (expression_stmt -> expression .)
    LPAREN          reduce using rule 36 (expression_stmt -> expression .)
    INTEGER         reduce using rule 36 (expression_stmt -> expression .)
    FLOAT           reduce using rule 36 (expression_stmt -> expression .)
    TRUE            reduce using rule 36 (expression_stmt -> expression .)
    FALSE           reduce using rule 36 (expression_stmt -> expression .)
    $end            reduce using rule 36 (expression_stmt -> expression .)
    RBRACE          reduce using rule 36 (expression_stmt -> expression .)
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 99

    (46) iteration_stmt -> DO LBRACE print_stmt . RBRACE WHILE LPAREN expression RPAREN SEMI
    (34) statement -> print_stmt .

    RBRACE          shift and go to state 124
    SEMI            reduce using rule 34 (statement -> print_stmt .)


state 100

    (31) statement -> expression_stmt .

    SEMI            reduce using rule 31 (statement -> expression_stmt .)
    IDENTIFIER      reduce using rule 31 (statement -> expression_stmt .)
    PRINT           reduce using rule 31 (statement -> expression_stmt .)
    READ            reduce using rule 31 (statement -> expression_stmt .)
    IF              reduce using rule 31 (statement -> expression_stmt .)
    FOR             reduce using rule 31 (statement -> expression_stmt .)
    WHILE           reduce using rule 31 (statement -> expression_stmt .)
    DO              reduce using rule 31 (statement -> expression_stmt .)
    LPAREN          reduce using rule 31 (statement -> expression_stmt .)
    INTEGER         reduce using rule 31 (statement -> expression_stmt .)
    FLOAT           reduce using rule 31 (statement -> expression_stmt .)
    TRUE            reduce using rule 31 (statement -> expression_stmt .)
    FALSE           reduce using rule 31 (statement -> expression_stmt .)
    $end            reduce using rule 31 (statement -> expression_stmt .)
    RBRACE          reduce using rule 31 (statement -> expression_stmt .)


state 101

    (32) statement -> selection_stmt .

    SEMI            reduce using rule 32 (statement -> selection_stmt .)
    IDENTIFIER      reduce using rule 32 (statement -> selection_stmt .)
    PRINT           reduce using rule 32 (statement -> selection_stmt .)
    READ            reduce using rule 32 (statement -> selection_stmt .)
    IF              reduce using rule 32 (statement -> selection_stmt .)
    FOR             reduce using rule 32 (statement -> selection_stmt .)
    WHILE           reduce using rule 32 (statement -> selection_stmt .)
    DO              reduce using rule 32 (statement -> selection_stmt .)
    LPAREN          reduce using rule 32 (statement -> selection_stmt .)
    INTEGER         reduce using rule 32 (statement -> selection_stmt .)
    FLOAT           reduce using rule 32 (statement -> selection_stmt .)
    TRUE            reduce using rule 32 (statement -> selection_stmt .)
    FALSE           reduce using rule 32 (statement -> selection_stmt .)
    $end            reduce using rule 32 (statement -> selection_stmt .)
    RBRACE          reduce using rule 32 (statement -> selection_stmt .)


state 102

    (33) statement -> iteration_stmt .

    SEMI            reduce using rule 33 (statement -> iteration_stmt .)
    IDENTIFIER      reduce using rule 33 (statement -> iteration_stmt .)
    PRINT           reduce using rule 33 (statement -> iteration_stmt .)
    READ            reduce using rule 33 (statement -> iteration_stmt .)
    IF              reduce using rule 33 (statement -> iteration_stmt .)
    FOR             reduce using rule 33 (statement -> iteration_stmt .)
    WHILE           reduce using rule 33 (statement -> iteration_stmt .)
    DO              reduce using rule 33 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 33 (statement -> iteration_stmt .)
    INTEGER         reduce using rule 33 (statement -> iteration_stmt .)
    FLOAT           reduce using rule 33 (statement -> iteration_stmt .)
    TRUE            reduce using rule 33 (statement -> iteration_stmt .)
    FALSE           reduce using rule 33 (statement -> iteration_stmt .)
    $end            reduce using rule 33 (statement -> iteration_stmt .)
    RBRACE          reduce using rule 33 (statement -> iteration_stmt .)


state 103

    (35) statement -> read_stmt .

    SEMI            reduce using rule 35 (statement -> read_stmt .)
    IDENTIFIER      reduce using rule 35 (statement -> read_stmt .)
    PRINT           reduce using rule 35 (statement -> read_stmt .)
    READ            reduce using rule 35 (statement -> read_stmt .)
    IF              reduce using rule 35 (statement -> read_stmt .)
    FOR             reduce using rule 35 (statement -> read_stmt .)
    WHILE           reduce using rule 35 (statement -> read_stmt .)
    DO              reduce using rule 35 (statement -> read_stmt .)
    LPAREN          reduce using rule 35 (statement -> read_stmt .)
    INTEGER         reduce using rule 35 (statement -> read_stmt .)
    FLOAT           reduce using rule 35 (statement -> read_stmt .)
    TRUE            reduce using rule 35 (statement -> read_stmt .)
    FALSE           reduce using rule 35 (statement -> read_stmt .)
    $end            reduce using rule 35 (statement -> read_stmt .)
    RBRACE          reduce using rule 35 (statement -> read_stmt .)


state 104

    (68) term -> term mulop factor .

    MINUSMINUS      reduce using rule 68 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 68 (term -> term mulop factor .)
    TIMES           reduce using rule 68 (term -> term mulop factor .)
    DIVIDE          reduce using rule 68 (term -> term mulop factor .)
    MENOR           reduce using rule 68 (term -> term mulop factor .)
    MENOREQUALS     reduce using rule 68 (term -> term mulop factor .)
    MAIOR           reduce using rule 68 (term -> term mulop factor .)
    MAIOREQUALS     reduce using rule 68 (term -> term mulop factor .)
    DIFERENTE       reduce using rule 68 (term -> term mulop factor .)
    EQUALITY        reduce using rule 68 (term -> term mulop factor .)
    PLUS            reduce using rule 68 (term -> term mulop factor .)
    MINUS           reduce using rule 68 (term -> term mulop factor .)
    LOG             reduce using rule 68 (term -> term mulop factor .)
    OU_LOGICO       reduce using rule 68 (term -> term mulop factor .)
    TIMESX          reduce using rule 68 (term -> term mulop factor .)
    IDENTIFIER      reduce using rule 68 (term -> term mulop factor .)
    PRINT           reduce using rule 68 (term -> term mulop factor .)
    READ            reduce using rule 68 (term -> term mulop factor .)
    IF              reduce using rule 68 (term -> term mulop factor .)
    FOR             reduce using rule 68 (term -> term mulop factor .)
    WHILE           reduce using rule 68 (term -> term mulop factor .)
    DO              reduce using rule 68 (term -> term mulop factor .)
    LPAREN          reduce using rule 68 (term -> term mulop factor .)
    INTEGER         reduce using rule 68 (term -> term mulop factor .)
    FLOAT           reduce using rule 68 (term -> term mulop factor .)
    TRUE            reduce using rule 68 (term -> term mulop factor .)
    FALSE           reduce using rule 68 (term -> term mulop factor .)
    $end            reduce using rule 68 (term -> term mulop factor .)
    RPAREN          reduce using rule 68 (term -> term mulop factor .)
    SEMI            reduce using rule 68 (term -> term mulop factor .)
    RBRACE          reduce using rule 68 (term -> term mulop factor .)


state 105

    (28) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .

    IDENTIFIER      reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    PRINT           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    READ            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    IF              reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FOR             reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    WHILE           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    DO              reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    LPAREN          reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    INTEGER         reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FLOAT           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    TRUE            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    FALSE           reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    $end            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    RBRACE          reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)
    SEMI            reduce using rule 28 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER var_declaration .)


state 106

    (29) var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .

    IDENTIFIER      reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    PRINT           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    READ            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    IF              reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FOR             reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    WHILE           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    DO              reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    LPAREN          reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    INTEGER         reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FLOAT           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    TRUE            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    FALSE           reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    $end            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    RBRACE          reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)
    SEMI            reduce using rule 29 (var_declaration -> IDENTIFIER ATRIBUTION IDENTIFIER SEMI .)


state 107

    (24) var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .

    IDENTIFIER      reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    PRINT           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    READ            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    IF              reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FOR             reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    WHILE           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    DO              reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    LPAREN          reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    INTEGER         reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FLOAT           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    TRUE            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    FALSE           reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    $end            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    RBRACE          reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)
    SEMI            reduce using rule 24 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER var_declaration .)


state 108

    (25) var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .

    IDENTIFIER      reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    PRINT           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    READ            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    IF              reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FOR             reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    WHILE           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    DO              reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    LPAREN          reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    INTEGER         reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FLOAT           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    TRUE            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    FALSE           reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    $end            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    RBRACE          reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)
    SEMI            reduce using rule 25 (var_declaration -> IDENTIFIER ATRIBUTION NUMBER SEMI .)


state 109

    (26) var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .

    IDENTIFIER      reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    PRINT           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    READ            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    IF              reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FOR             reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    WHILE           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    DO              reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    LPAREN          reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    INTEGER         reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FLOAT           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    TRUE            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    FALSE           reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    $end            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    RBRACE          reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)
    SEMI            reduce using rule 26 (var_declaration -> IDENTIFIER ATRIBUTION boolean var_declaration .)


state 110

    (27) var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .

    IDENTIFIER      reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    PRINT           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    READ            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    IF              reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FOR             reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    WHILE           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    DO              reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    LPAREN          reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    INTEGER         reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FLOAT           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    TRUE            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    FALSE           reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    $end            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    RBRACE          reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)
    SEMI            reduce using rule 27 (var_declaration -> IDENTIFIER ATRIBUTION boolean SEMI .)


state 111

    (30) var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .

    IDENTIFIER      reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    PRINT           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    READ            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    IF              reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FOR             reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    WHILE           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    DO              reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    LPAREN          reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    INTEGER         reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FLOAT           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    TRUE            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    FALSE           reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    $end            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    RBRACE          reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)
    SEMI            reduce using rule 30 (var_declaration -> IDENTIFIER ATRIBUTION simple_expression SEMI .)


state 112

    (76) factor -> IDENTIFIER LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TIMES           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DIVIDE          reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MENOR           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MENOREQUALS     reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MAIOR           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MAIOREQUALS     reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DIFERENTE       reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    EQUALITY        reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PLUS            reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    MINUS           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    LOG             reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    OU_LOGICO       reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TIMESX          reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    IDENTIFIER      reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    PRINT           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    READ            reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    IF              reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FOR             reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    WHILE           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    DO              reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    LPAREN          reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    INTEGER         reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FLOAT           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    TRUE            reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    FALSE           reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    $end            reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    SEMI            reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)
    RBRACE          reduce using rule 76 (factor -> IDENTIFIER LPAREN args RPAREN .)


state 113

    (10) print_stmt -> PRINT LPAREN STRING RPAREN . SEMI declaration
    (11) print_stmt -> PRINT LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 125


state 114

    (20) print_stmt -> PRINT LPAREN RPAREN SEMI . declaration
    (21) print_stmt -> PRINT LPAREN RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! READ            [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! IF              [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! DO              [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 21 (print_stmt -> PRINT LPAREN RPAREN SEMI .) ]

    declaration                    shift and go to state 126
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 115

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN . SEMI declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN . SEMI

    SEMI            shift and go to state 127


state 116

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN . SEMI declaration
    (15) print_stmt -> PRINT LPAREN NUMBER RPAREN . SEMI

    SEMI            shift and go to state 128


state 117

    (16) print_stmt -> PRINT LPAREN boolean RPAREN . SEMI declaration
    (17) print_stmt -> PRINT LPAREN boolean RPAREN . SEMI

    SEMI            shift and go to state 129


state 118

    (18) print_stmt -> PRINT LPAREN expression RPAREN . SEMI declaration
    (19) print_stmt -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 130


state 119

    (47) read_stmt -> READ LPAREN STRING RPAREN . SEMI declaration
    (48) read_stmt -> READ LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 131


state 120

    (37) selection_stmt -> IF LPAREN expression RPAREN . LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN . LBRACE expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression RPAREN . LBRACE print_stmt RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN . LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE

    LBRACE          shift and go to state 132


state 121

    (41) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    SEMI            shift and go to state 133
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 122

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN . LBRACE expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression RPAREN . LBRACE print_stmt RBRACE

    LBRACE          shift and go to state 134


state 123

    (45) iteration_stmt -> DO LBRACE statement SEMI . RBRACE WHILE LPAREN expression RPAREN SEMI

    RBRACE          shift and go to state 135


state 124

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 136


state 125

    (10) print_stmt -> PRINT LPAREN STRING RPAREN SEMI . declaration
    (11) print_stmt -> PRINT LPAREN STRING RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    RBRACE          reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    SEMI            reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! READ            [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! IF              [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! DO              [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 11 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI .) ]

    declaration                    shift and go to state 137
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 126

    (20) print_stmt -> PRINT LPAREN RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    PRINT           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    READ            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    IF              reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FOR             reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    WHILE           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    DO              reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    LPAREN          reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    INTEGER         reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FLOAT           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    TRUE            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    FALSE           reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    $end            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    RBRACE          reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)
    SEMI            reduce using rule 20 (print_stmt -> PRINT LPAREN RPAREN SEMI declaration .)


state 127

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI . declaration
    (13) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    RBRACE          reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    SEMI            reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! READ            [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! IF              [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! DO              [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 13 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI .) ]

    declaration                    shift and go to state 138
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 128

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI . declaration
    (15) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    RBRACE          reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    SEMI            reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! READ            [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! IF              [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! DO              [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 15 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI .) ]

    NUMBER                         shift and go to state 11
    declaration                    shift and go to state 139
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 129

    (16) print_stmt -> PRINT LPAREN boolean RPAREN SEMI . declaration
    (17) print_stmt -> PRINT LPAREN boolean RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    RBRACE          reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    SEMI            reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! READ            [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! IF              [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! DO              [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 17 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI .) ]

    boolean                        shift and go to state 12
    declaration                    shift and go to state 140
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 130

    (18) print_stmt -> PRINT LPAREN expression RPAREN SEMI . declaration
    (19) print_stmt -> PRINT LPAREN expression RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! READ            [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! IF              [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! DO              [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 19 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .) ]

    expression                     shift and go to state 9
    declaration                    shift and go to state 141
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 131

    (47) read_stmt -> READ LPAREN STRING RPAREN SEMI . declaration
    (48) read_stmt -> READ LPAREN STRING RPAREN SEMI .
    (4) declaration -> . var_declaration
    (5) declaration -> . print_stmt
    (6) declaration -> . read_stmt
    (7) declaration -> . selection_stmt
    (8) declaration -> . iteration_stmt
    (9) declaration -> . expression
    (22) var_declaration -> . IDENTIFIER var_declaration
    (23) var_declaration -> . IDENTIFIER
    (24) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER var_declaration
    (25) var_declaration -> . IDENTIFIER ATRIBUTION NUMBER SEMI
    (26) var_declaration -> . IDENTIFIER ATRIBUTION boolean var_declaration
    (27) var_declaration -> . IDENTIFIER ATRIBUTION boolean SEMI
    (28) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER var_declaration
    (29) var_declaration -> . IDENTIFIER ATRIBUTION IDENTIFIER SEMI
    (30) var_declaration -> . IDENTIFIER ATRIBUTION simple_expression SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    SEMI            reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    RBRACE          reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .)
    IDENTIFIER      shift and go to state 10
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! IDENTIFIER      [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! READ            [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! IF              [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! DO              [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! INTEGER         [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FLOAT           [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 48 (read_stmt -> READ LPAREN STRING RPAREN SEMI .) ]

    declaration                    shift and go to state 142
    var_declaration                shift and go to state 4
    print_stmt                     shift and go to state 5
    read_stmt                      shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    expression                     shift and go to state 9
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    additive_expression            shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 132

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE . expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE . expression RBRACE statement
    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE . print_stmt RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE . print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    PRINT           shift and go to state 14
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 143
    print_stmt                     shift and go to state 144
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23

state 133

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN LBRACE print_stmt RBRACE
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 69
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    additive_expression            shift and go to state 145
    term                           shift and go to state 22
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 134

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE . expression RBRACE statement
    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE . print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    PRINT           shift and go to state 14
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 146
    print_stmt                     shift and go to state 147
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23

state 135

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 148


state 136

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 149


state 137

    (10) print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    PRINT           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    READ            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    IF              reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FOR             reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    WHILE           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    DO              reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    LPAREN          reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    INTEGER         reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FLOAT           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    TRUE            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    FALSE           reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    $end            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    RBRACE          reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)
    SEMI            reduce using rule 10 (print_stmt -> PRINT LPAREN STRING RPAREN SEMI declaration .)


state 138

    (12) print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    PRINT           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    READ            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    IF              reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FOR             reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    WHILE           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    DO              reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    LPAREN          reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    INTEGER         reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FLOAT           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    TRUE            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    FALSE           reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    $end            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    RBRACE          reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)
    SEMI            reduce using rule 12 (print_stmt -> PRINT LPAREN IDENTIFIER RPAREN SEMI declaration .)


state 139

    (14) print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    PRINT           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    READ            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    IF              reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FOR             reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    WHILE           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    DO              reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    LPAREN          reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    INTEGER         reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FLOAT           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    TRUE            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    FALSE           reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    $end            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    RBRACE          reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)
    SEMI            reduce using rule 14 (print_stmt -> PRINT LPAREN NUMBER RPAREN SEMI declaration .)


state 140

    (16) print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    PRINT           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    READ            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    IF              reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FOR             reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    WHILE           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    DO              reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    LPAREN          reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    INTEGER         reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FLOAT           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    TRUE            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    FALSE           reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    $end            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    RBRACE          reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)
    SEMI            reduce using rule 16 (print_stmt -> PRINT LPAREN boolean RPAREN SEMI declaration .)


state 141

    (18) print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    PRINT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    READ            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    IF              reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FOR             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    WHILE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    DO              reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    LPAREN          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    INTEGER         reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FLOAT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    TRUE            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    FALSE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    $end            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    RBRACE          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)
    SEMI            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMI declaration .)


state 142

    (47) read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .

    IDENTIFIER      reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    PRINT           reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    READ            reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    IF              reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FOR             reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    WHILE           reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    DO              reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    LPAREN          reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    INTEGER         reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FLOAT           reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    TRUE            reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    FALSE           reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    $end            reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    SEMI            reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)
    RBRACE          reduce using rule 47 (read_stmt -> READ LPAREN STRING RPAREN SEMI declaration .)


state 143

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression . RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression . RBRACE statement
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 150
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 144

    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt . RBRACE
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt . RBRACE ELSE LBRACE print_stmt RBRACE

    RBRACE          shift and go to state 151


state 145

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN LBRACE print_stmt RBRACE
    (62) additive_expression -> additive_expression . addop term
    (66) addop -> . PLUS
    (67) addop -> . MINUS

    RPAREN          shift and go to state 152
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56

    addop                          shift and go to state 48

state 146

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression . RBRACE statement
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 153
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 147

    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt . RBRACE

    RBRACE          shift and go to state 154


state 148

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 155


state 149

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN . expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 156
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 150

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE . ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    ELSE            shift and go to state 157
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 98
    statement                      shift and go to state 158
    expression_stmt                shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    print_stmt                     shift and go to state 159
    read_stmt                      shift and go to state 103
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 151

    (39) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .
    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE . ELSE LBRACE print_stmt RBRACE

    IDENTIFIER      reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    PRINT           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    READ            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    IF              reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FOR             reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    WHILE           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    DO              reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    LPAREN          reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    INTEGER         reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FLOAT           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    TRUE            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FALSE           reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    $end            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    SEMI            reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    RBRACE          reduce using rule 39 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    ELSE            shift and go to state 160


state 152

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . LBRACE expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . LBRACE print_stmt RBRACE

    LBRACE          shift and go to state 161


state 153

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 98
    statement                      shift and go to state 162
    expression_stmt                shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    print_stmt                     shift and go to state 159
    read_stmt                      shift and go to state 103
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 154

    (44) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .

    IDENTIFIER      reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    PRINT           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    READ            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    IF              reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FOR             reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    WHILE           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    DO              reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    LPAREN          reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    INTEGER         reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FLOAT           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    TRUE            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    FALSE           reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    $end            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    SEMI            reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)
    RBRACE          reduce using rule 44 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE .)


state 155

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN . expression RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 163
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 156

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression . RPAREN SEMI
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 164
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 157

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE . LBRACE expression RBRACE statement

    LBRACE          shift and go to state 165


state 158

    (38) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 38 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE statement .)


state 159

    (34) statement -> print_stmt .

    IDENTIFIER      reduce using rule 34 (statement -> print_stmt .)
    PRINT           reduce using rule 34 (statement -> print_stmt .)
    READ            reduce using rule 34 (statement -> print_stmt .)
    IF              reduce using rule 34 (statement -> print_stmt .)
    FOR             reduce using rule 34 (statement -> print_stmt .)
    WHILE           reduce using rule 34 (statement -> print_stmt .)
    DO              reduce using rule 34 (statement -> print_stmt .)
    LPAREN          reduce using rule 34 (statement -> print_stmt .)
    INTEGER         reduce using rule 34 (statement -> print_stmt .)
    FLOAT           reduce using rule 34 (statement -> print_stmt .)
    TRUE            reduce using rule 34 (statement -> print_stmt .)
    FALSE           reduce using rule 34 (statement -> print_stmt .)
    $end            reduce using rule 34 (statement -> print_stmt .)
    RBRACE          reduce using rule 34 (statement -> print_stmt .)
    SEMI            reduce using rule 34 (statement -> print_stmt .)


state 160

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE . LBRACE print_stmt RBRACE

    LBRACE          shift and go to state 166


state 161

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE . expression RBRACE statement
    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE . print_stmt RBRACE
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    PRINT           shift and go to state 14
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 167
    additive_expression            shift and go to state 19
    print_stmt                     shift and go to state 168
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    factor                         shift and go to state 23

state 162

    (43) iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 43 (iteration_stmt -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement .)


state 163

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression . RPAREN SEMI
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RPAREN          shift and go to state 169
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 164

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 170


state 165

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE . expression RBRACE statement
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 171
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    additive_expression            shift and go to state 19
    factor                         shift and go to state 23
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12

state 166

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE . print_stmt RBRACE
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI

    PRINT           shift and go to state 14

    print_stmt                     shift and go to state 172

state 167

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression . RBRACE statement
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 173
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 168

    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt . RBRACE

    RBRACE          shift and go to state 174


state 169

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 175


state 170

    (46) iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .

    IDENTIFIER      reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    INTEGER         reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 46 (iteration_stmt -> DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI .)


state 171

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression . RBRACE statement
    (52) expression -> expression . LOG expression
    (53) expression -> expression . OU_LOGICO expression
    (84) expression -> expression . PLUS term
    (85) expression -> expression . MINUS term
    (86) expression -> expression . TIMES term
    (87) expression -> expression . DIVIDE term
    (88) expression -> expression . TIMESX term
    (89) expression -> expression . LOG term
    (90) expression -> expression . OU_LOGICO term

    RBRACE          shift and go to state 176
    LOG             shift and go to state 29
    OU_LOGICO       shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    TIMESX          shift and go to state 35


state 172

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt . RBRACE

    RBRACE          shift and go to state 177


state 173

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 98
    additive_expression            shift and go to state 19
    statement                      shift and go to state 178
    expression_stmt                shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    print_stmt                     shift and go to state 159
    read_stmt                      shift and go to state 103
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 174

    (42) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .

    IDENTIFIER      reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    PRINT           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    READ            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    IF              reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FOR             reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    WHILE           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    DO              reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    LPAREN          reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    INTEGER         reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FLOAT           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    TRUE            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    FALSE           reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    $end            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    SEMI            reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)
    RBRACE          reduce using rule 42 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE .)


state 175

    (45) iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .

    IDENTIFIER      reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    INTEGER         reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 45 (iteration_stmt -> DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI .)


state 176

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE . statement
    (31) statement -> . expression_stmt
    (32) statement -> . selection_stmt
    (33) statement -> . iteration_stmt
    (34) statement -> . print_stmt
    (35) statement -> . read_stmt
    (36) expression_stmt -> . expression
    (37) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement
    (38) selection_stmt -> . IF LPAREN expression RPAREN LBRACE expression RBRACE statement
    (39) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (40) selection_stmt -> . IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE
    (41) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement
    (42) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE print_stmt RBRACE
    (43) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE expression RBRACE statement
    (44) iteration_stmt -> . WHILE LPAREN expression RPAREN LBRACE print_stmt RBRACE
    (45) iteration_stmt -> . DO LBRACE statement SEMI RBRACE WHILE LPAREN expression RPAREN SEMI
    (46) iteration_stmt -> . DO LBRACE print_stmt RBRACE WHILE LPAREN expression RPAREN SEMI
    (10) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI declaration
    (11) print_stmt -> . PRINT LPAREN STRING RPAREN SEMI
    (12) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI declaration
    (13) print_stmt -> . PRINT LPAREN IDENTIFIER RPAREN SEMI
    (14) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI declaration
    (15) print_stmt -> . PRINT LPAREN NUMBER RPAREN SEMI
    (16) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI declaration
    (17) print_stmt -> . PRINT LPAREN boolean RPAREN SEMI
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMI declaration
    (19) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (20) print_stmt -> . PRINT LPAREN RPAREN SEMI declaration
    (21) print_stmt -> . PRINT LPAREN RPAREN SEMI
    (47) read_stmt -> . READ LPAREN STRING RPAREN SEMI declaration
    (48) read_stmt -> . READ LPAREN STRING RPAREN SEMI
    (49) expression -> . IDENTIFIER EQUALITY expression
    (50) expression -> . simple_expression
    (51) expression -> . IDENTIFIER EQUALITY IDENTIFIER
    (52) expression -> . expression LOG expression
    (53) expression -> . expression OU_LOGICO expression
    (84) expression -> . expression PLUS term
    (85) expression -> . expression MINUS term
    (86) expression -> . expression TIMES term
    (87) expression -> . expression DIVIDE term
    (88) expression -> . expression TIMESX term
    (89) expression -> . expression LOG term
    (90) expression -> . expression OU_LOGICO term
    (54) simple_expression -> . additive_expression relop additive_expression
    (55) simple_expression -> . additive_expression
    (62) additive_expression -> . additive_expression addop term
    (63) additive_expression -> . term
    (64) additive_expression -> . term MINUSMINUS
    (65) additive_expression -> . term PLUSPLUS
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . IDENTIFIER
    (74) factor -> . NUMBER
    (75) factor -> . boolean
    (76) factor -> . IDENTIFIER LPAREN args RPAREN
    (79) NUMBER -> . INTEGER
    (80) NUMBER -> . FLOAT
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 14
    READ            shift and go to state 16
    IDENTIFIER      shift and go to state 43
    LPAREN          shift and go to state 15
    INTEGER         shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expression                     shift and go to state 98
    statement                      shift and go to state 179
    expression_stmt                shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    print_stmt                     shift and go to state 159
    read_stmt                      shift and go to state 103
    additive_expression            shift and go to state 19
    NUMBER                         shift and go to state 11
    boolean                        shift and go to state 12
    simple_expression              shift and go to state 13
    term                           shift and go to state 22
    factor                         shift and go to state 23

state 177

    (40) selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .

    IDENTIFIER      reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    PRINT           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    READ            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    IF              reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    FOR             reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    WHILE           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    DO              reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    LPAREN          reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    INTEGER         reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    FLOAT           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    TRUE            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    FALSE           reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    $end            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    SEMI            reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)
    RBRACE          reduce using rule 40 (selection_stmt -> IF LPAREN expression RPAREN LBRACE print_stmt RBRACE ELSE LBRACE print_stmt RBRACE .)


state 178

    (41) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    READ            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    IF              reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FOR             reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    DO              reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    $end            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 41 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN LBRACE expression RBRACE statement .)


state 179

    (37) selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .

    IDENTIFIER      reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    PRINT           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    READ            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    IF              reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FOR             reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    WHILE           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    DO              reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    LPAREN          reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    INTEGER         reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FLOAT           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    TRUE            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    FALSE           reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    $end            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    SEMI            reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)
    RBRACE          reduce using rule 37 (selection_stmt -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALITY in state 10 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 43 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 74 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 75 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUALITY in state 86 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 86 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 87 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 114 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 114 resolved as shift
WARNING: shift/reduce conflict for READ in state 114 resolved as shift
WARNING: shift/reduce conflict for IF in state 114 resolved as shift
WARNING: shift/reduce conflict for FOR in state 114 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 114 resolved as shift
WARNING: shift/reduce conflict for DO in state 114 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 114 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 114 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 114 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 114 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 114 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 125 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 125 resolved as shift
WARNING: shift/reduce conflict for READ in state 125 resolved as shift
WARNING: shift/reduce conflict for IF in state 125 resolved as shift
WARNING: shift/reduce conflict for FOR in state 125 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 125 resolved as shift
WARNING: shift/reduce conflict for DO in state 125 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 125 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 125 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 125 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 125 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 125 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 127 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 127 resolved as shift
WARNING: shift/reduce conflict for READ in state 127 resolved as shift
WARNING: shift/reduce conflict for IF in state 127 resolved as shift
WARNING: shift/reduce conflict for FOR in state 127 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 127 resolved as shift
WARNING: shift/reduce conflict for DO in state 127 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 127 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 127 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 127 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 127 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 128 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 128 resolved as shift
WARNING: shift/reduce conflict for READ in state 128 resolved as shift
WARNING: shift/reduce conflict for IF in state 128 resolved as shift
WARNING: shift/reduce conflict for FOR in state 128 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 128 resolved as shift
WARNING: shift/reduce conflict for DO in state 128 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 128 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 128 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 128 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 128 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for READ in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for DO in state 129 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 129 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 129 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 129 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 129 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 130 resolved as shift
WARNING: shift/reduce conflict for READ in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for FOR in state 130 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 130 resolved as shift
WARNING: shift/reduce conflict for DO in state 130 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 130 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 130 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 130 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 130 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 130 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 131 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 131 resolved as shift
WARNING: shift/reduce conflict for READ in state 131 resolved as shift
WARNING: shift/reduce conflict for IF in state 131 resolved as shift
WARNING: shift/reduce conflict for FOR in state 131 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 131 resolved as shift
WARNING: shift/reduce conflict for DO in state 131 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 131 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 131 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 131 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 131 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 131 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (var_declaration -> IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 10
WARNING: reduce/reduce conflict in state 65 resolved using rule (additive_expression -> term)
WARNING: rejected rule (expression -> expression LOG term) in state 65
WARNING: reduce/reduce conflict in state 67 resolved using rule (additive_expression -> term)
WARNING: rejected rule (expression -> expression OU_LOGICO term) in state 67
WARNING: reduce/reduce conflict in state 78 resolved using rule (expression -> IDENTIFIER EQUALITY IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 78
WARNING: Rule (expression -> expression LOG term) is never reduced
WARNING: Rule (expression -> expression OU_LOGICO term) is never reduced
